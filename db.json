{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechat_account.jpg","path":"images/wechat_account.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"5443e076334c0e57fd6c173c178fa37882a66d3f","modified":1582706315833},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1580551872000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1580551872000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1580551872000},{"_id":"themes/next/.DS_Store","hash":"7fe5ae1420c836dc702d46db78bca1a21f19a5d8","modified":1582549108088},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1580551872000},{"_id":"themes/next/README.md","hash":"dc026053a4d9fb97a58dbc3e9060e480f6852b23","modified":1580551872000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1580551872000},{"_id":"themes/next/_config.yml","hash":"e0cee5f2cbecb047ddb3ccac865b781cc32f9679","modified":1581087616395},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1580551872000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1580551872000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1580551872000},{"_id":"themes/next/gulpfile.js","hash":"72e6d5a6e32d5f95d82e4c4d0c963d39555bb760","modified":1580551872000},{"_id":"themes/next/package.json","hash":"213bd6ff96a027f5db6d1ce966a2cc75499a3e10","modified":1580551872000},{"_id":"source/_posts/Apple Watch.md","hash":"7bbd8f46d863c3879c554055805e0761f25e7c76","modified":1581357992401},{"_id":"source/_posts/Design+Code 的 Vue.js 课程学习摘录.md","hash":"4036e57e834799626f9c69c79c6b718cf8037da0","modified":1581358274294},{"_id":"source/about/hello-world.md","hash":"e437a32173b6047751fde4ccaf03d4d8c1f8e709","modified":1581357857422},{"_id":"source/about/index.md","hash":"1df2b65876dc577a437872687355772cce5c4483","modified":1581358108596},{"_id":"source/about/联系方式.md","hash":"44a8564cf00d632c14d634f033852b1396834fde","modified":1581357847275},{"_id":"source/_posts/.DS_Store","hash":"e8a5e058e886466d7c914bf6f25f50aba899868e","modified":1582706297528},{"_id":"source/archives/index.md","hash":"7c144cfb847c42b2cebe9b4205de463fac82b5bb","modified":1581083749249},{"_id":"source/categories/index.md","hash":"4f80fca95e2cbcf1ec07a92ff34ce642a3554035","modified":1581083835835},{"_id":"source/tags/index.md","hash":"1814786d5be87fcf1300bbd0782777c13aaf871c","modified":1581082069612},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1580551872000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ef63f34bd3b6bd4d7304d48ce5e0e3e2bead385","modified":1580551872000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"715dcf9b0429a4a4c7107d6d1d00a34e4cf9aa99","modified":1580551872000},{"_id":"themes/next/.github/config.yml","hash":"e4f4b9afe59bc508c4f7634895b33d7d460a7cb1","modified":1580551872000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1580551872000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1580551872000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1580551872000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1580551872000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1580551872000},{"_id":"themes/next/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1580551872000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1580551872000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1580551872000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1580551872000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"5b4c013e0598b3211ebd899265936cfdaf7c139f","modified":1580551872000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1580551872000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"40a8089076005e0d26ef7c0db58a2b5b464cda6c","modified":1580551872000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"08cda41b4bcf687facfda19ab39718ec7a05ae54","modified":1580551872000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1580551872000},{"_id":"themes/next/docs/MATH.md","hash":"f520b336f16665e164d6edf075bdcc6aa17b31bc","modified":1580551872000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"682937d48bf5d243842a76190921322e26c75247","modified":1580551872000},{"_id":"themes/next/languages/de.yml","hash":"3530753456db8a7a7cb72b47505bf6197ac9a9f2","modified":1580551872000},{"_id":"themes/next/languages/default.yml","hash":"2c415150d5ba44a05ec7ca5fa671d6129c7fe7db","modified":1580551872000},{"_id":"themes/next/languages/en.yml","hash":"2c415150d5ba44a05ec7ca5fa671d6129c7fe7db","modified":1580551872000},{"_id":"themes/next/languages/es.yml","hash":"9596836628169400beed4124eeb5867821075b00","modified":1580551872000},{"_id":"themes/next/languages/fa.yml","hash":"c77d0ab86695651f4fb09e0e9af484114fe80292","modified":1580551872000},{"_id":"themes/next/languages/fr.yml","hash":"30702ddcb121ee1ada258b8b900d826fec697e5e","modified":1580551872000},{"_id":"themes/next/languages/hu.yml","hash":"a317ba3ab2d9de40fe8b5447d0e63b9d8ab97c8b","modified":1580551872000},{"_id":"themes/next/languages/id.yml","hash":"85441f625f1f93a329b7eab01f919e81a6f36172","modified":1580551872000},{"_id":"themes/next/docs/.DS_Store","hash":"f91dd81228438250b77da8248e90b2cbd83200f8","modified":1581084534023},{"_id":"themes/next/languages/it.yml","hash":"8e4d494cd7f4e33d2c416da3a48f9bd8968243ea","modified":1580551872000},{"_id":"themes/next/languages/ja.yml","hash":"2a767bc258a5072f8d97ffdfce53b4e2332570f4","modified":1580551872000},{"_id":"themes/next/languages/ko.yml","hash":"04ba65574f1fa63ffb95fcfb7a4515ee4b01532f","modified":1580551872000},{"_id":"themes/next/languages/nl.yml","hash":"dea4d7d516071c9ec9e57935a84aaab15c3d2e97","modified":1580551872000},{"_id":"themes/next/languages/pt-BR.yml","hash":"66e3cc8efc2a26184fcbe4db8981b84099348276","modified":1580551872000},{"_id":"themes/next/languages/pt.yml","hash":"f184ffed48395675a7025cb1ccfdade546f3e987","modified":1580551872000},{"_id":"themes/next/languages/ru.yml","hash":"79f7f3b6e96184cf21ce2c9a2adb01b0f0228cf8","modified":1580551872000},{"_id":"themes/next/languages/uk.yml","hash":"a6af58b5351e0d0dde1fec22a3e80fc76bd8eecf","modified":1580551872000},{"_id":"themes/next/languages/tr.yml","hash":"5c5b60faa00401e822c92abcdcf9c5d410a8b753","modified":1580551872000},{"_id":"themes/next/languages/vi.yml","hash":"2b698896b08d79333a3414185fc2b445b3657361","modified":1580551872000},{"_id":"themes/next/languages/zh-CN.yml","hash":"ab2fa8bfdbf4afd77c336412f29930dc8256a5fa","modified":1580551872000},{"_id":"themes/next/languages/zh-HK.yml","hash":"6e333aaca52dccee8e5f2d1dc28b0a6cda7b0c9a","modified":1580551872000},{"_id":"themes/next/languages/zh-TW.yml","hash":"d4517fa82652ccc75915469985efd7da1895963a","modified":1580551872000},{"_id":"themes/next/layout/_layout.swig","hash":"29ee038b0d5ffdb45327598733ea968588367769","modified":1580551872000},{"_id":"themes/next/layout/archive.swig","hash":"26526c09a4334099e2141456697696fcd1f9783f","modified":1580551872000},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1580551872000},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1580551872000},{"_id":"themes/next/layout/page.swig","hash":"e61d64c055b6497a04affc143f47fdd0a6dc495b","modified":1580551872000},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1580551872000},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1580551872000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1580551872000},{"_id":"themes/next/scripts/.DS_Store","hash":"693346292252f768199231e69e72c088b719408f","modified":1581086759414},{"_id":"themes/next/source/.DS_Store","hash":"6a579c99e7cdc3f8e09dc04c90f4160f7dff74b6","modified":1582549993121},{"_id":"themes/next/layout/.DS_Store","hash":"50b3d5f632e9ebce88faf64215e8482a38cc9b4d","modified":1581086981504},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"8ae029084b9ac482adf0fae2a0979dd388476513","modified":1580551872000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"7a9526f749205c882d672a4f51e6a3033c80ca6e","modified":1580551872000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"789a3cceb8f37a4b63b1fb2452a03332a3c365ed","modified":1580551872000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"89667adbb85c25716dba607cd7a38191acf60736","modified":1580551872000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1580551872000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1580551872000},{"_id":"themes/next/docs/ru/README.md","hash":"41b1bef32fb991410ebf559b4c45022549f95215","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"4245fe9472647226692fcbdd5a52d6e6dcd251bc","modified":1580551872000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"fe3f5cda1975114884d84bef384a562920d70335","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"17d7203e85a8ce9760c42a853dee0f26a8f7ee4e","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0b0b9ec6ec4a89e701a3b91f8d7d95752d3e241b","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"7f37327bbcae7ed7d04d187fd5e9bc6bbf14926a","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"f0ffb74de522749c9f2fda46970a61bdafbfbc24","modified":1580551872000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"b6a3611d40863c12804c5846994786119ce3b79f","modified":1580551872000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1580551872000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"0c4914a5fd08f15beec71940218c814ad9a89f3f","modified":1580551872000},{"_id":"themes/next/layout/_macro/post.swig","hash":"cf6469cbf81884e13f4c6bbdb4f21e4294b80705","modified":1581087072424},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e2c9db54cc9e154e882008fde6588b065fadc9a7","modified":1580551872000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ee6335c12773dc43f8b92136770cb10d460c25c","modified":1580551872000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1580551872000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1580551872000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1580551872000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1580551872000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"a3462c37ab6d7642b1e95860ea5c4cfbac78efab","modified":1580551872000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1580551872000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1580551872000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1580551872000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1580551872000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"dd6bd817cb69b5ad5e9746498146314b54054ff8","modified":1580551872000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1580551872000},{"_id":"themes/next/scripts/events/index.js","hash":"9047d8ae2670e43429b16a7919a08a0a0a81afe0","modified":1580551872000},{"_id":"themes/next/scripts/events/.DS_Store","hash":"7b038f0dd00ba68949ed021d10a028c4cd912aab","modified":1581086342646},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1580551872000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1580551872000},{"_id":"themes/next/scripts/filters/locals.js","hash":"5bbfdc1c373542159660b7a68ed0b57ca18ad10b","modified":1580551872000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1580551872000},{"_id":"themes/next/scripts/filters/post.js","hash":"f2f566f2577c554377fd704442399acdd14a8118","modified":1580551872000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cb211b6b50913454b1737782e9e2af96cfa40448","modified":1580551872000},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1580551872000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"58347687b02f7ab5e64bef07525c8efa97c9e8fb","modified":1580551872000},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1580551872000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1580551872000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1580551872000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1580551872000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1580551872000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1580551872000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1580551872000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1580551872000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1580551872000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1580551872000},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1580551872000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1580551872000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1580551872000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1580551872000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1580551872000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1580551872000},{"_id":"themes/next/source/images/apple-touch-icon.png","hash":"87a5cb9ef565d1566ccf04e4596955f07f22fc2d","modified":1581081842417},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1580551872000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1580551872000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1580551872000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1580551872000},{"_id":"themes/next/source/images/favicon-16x16.png","hash":"45cb5124a39b8882339664bb451896da23b9e45c","modified":1581081756838},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1580551872000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1580551872000},{"_id":"themes/next/source/images/favicon-32x32.png","hash":"c0a61653ba05b4bb269a6f3ee89e9895f2aeb9b8","modified":1581081705660},{"_id":"themes/next/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1580551872000},{"_id":"themes/next/source/js/.DS_Store","hash":"8faa1a9bdb5310d67ce94ae474adae79c92927f5","modified":1581086493125},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1580551872000},{"_id":"themes/next/source/js/local-search.js","hash":"f2e568298c71d2417a1a1c7e56025ce5842b1220","modified":1580551872000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1580551872000},{"_id":"themes/next/source/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1580551872000},{"_id":"themes/next/source/js/utils.js","hash":"a1e70ac9d32697907d5d78f2533d627f4df8ebcb","modified":1580551872000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1580551872000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580551872000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580551872000},{"_id":"themes/next/source/images/wechat_account.jpg","hash":"371020e1948f149afa6e350e8e66b11609033b81","modified":1581082600000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"0172055d118d1d7f4c8379c8495c1ee1aa50c7d9","modified":1580551872000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"7487ca8f0e4b16351ea0d6b35dc52b0d32176d57","modified":1580551872000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1580551872000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"1638483d2d2dad1da4c841a6fb9f6ee96b850187","modified":1580551872000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"bbf0c8e42491fac70f4f8165224f1d7d92a040d7","modified":1580551872000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"e6076865dba066c5f0008e22217efb850d5af69c","modified":1580551872000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1580551872000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"54ba9508a901c295a02c8e34e9cece7c7dcad518","modified":1580551872000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1580551872000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1580551872000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1580551872000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1580551872000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"716b78cd90addc4216413719554721cb362b0c18","modified":1580551872000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1580551872000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"14c33bd544903e74388739599fffe3ecb66ed4b0","modified":1580551872000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1580551872000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1580551872000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"1b7faa20a458b46369779b57bcc695bbc5d1c13a","modified":1580551872000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"a2bb0bec243685e670b60a3d54142950adc03af0","modified":1580551872000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1580551872000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1580551872000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1580551872000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1580551872000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1580551872000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1580551872000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1580551872000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1580551872000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1580551872000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1580551872000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1580551872000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1580551872000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"d3dc3e051e6816cdd576d00cc70b18b8a4c6a495","modified":1580551872000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1580551872000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4d6f9e09ca4056ff6a5d4923e202126a75242183","modified":1580551872000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"ed236103bccbcf608f7d5d5b33b9f995d2f1a7de","modified":1580551872000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1580551872000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1580551872000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"fb27a38f9a4b8fcba4f637b03904f7a83cc73416","modified":1580551872000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"e456d7a2aaabe55447f78cd952b30d70a6c1e742","modified":1580551872000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1580551872000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1580551872000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1580551872000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1580551872000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"0ea0bac09b0747bc16fde852164c0eaab2efe02c","modified":1580551872000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"4958fa997ff6df2b2ce05341f40cc3a81b0f91bb","modified":1580551872000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1580551872000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"7fa72dc60c078842979861622839b109683e05a3","modified":1580551872000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"801e1d2f59f7d2db4096c4788b8469b4165f4965","modified":1580551872000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b205d72a56b1827681f0a260c266e0c02065fd08","modified":1580551872000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1580551872000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1580551872000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1580551872000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1580551872000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1580551872000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1580551872000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1580551872000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1580551872000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1580551872000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1580551872000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d4e817e2b238ace5d7ac568ce0c5380196a6d039","modified":1580551872000},{"_id":"themes/next/source/images/favicon.png","hash":"e9194790400e5c55019076a58646a7bbcc3b908d","modified":1581081285644},{"_id":"themes/next/source/js/schemes/muse.js","hash":"ae2a2502b77203e83f75a040c43e86a7ecb4873c","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1580551872000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"f068b46f8c305c7436c2767492a6bed42dcd764c","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1580551872000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1580551872000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"47ee915d7b0a97e74140a25fbfc01c04d6781534","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"112f5e8f1fe5cec4419e87acfbdef0e615ed23f3","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"80d359661d08b80ad561b97f8508766b3e1f6d01","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"170c4598cbbe49cd1527f94158d97d2320a6b906","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"bc87cea0b534f2d75db60f300b069456f6516d1b","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4f7879a50d4608c46cc2061c725a2564597a45bd","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"d8ba44b8e1a0332c5c1079ff65fc83d2918a5865","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"8e1cc5e3b20d804a7265f945b877388bffee39eb","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4fb385d8533877678440c8faa08b68fa793cb1a2","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"1693ec6b53758ac15d2c7798c789d6ae8af913ea","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"24a086a6904bbf5355a354403c9b0e6069f7eb01","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"48743ac61af37a4de2026667e15a65de5e8cf542","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e321bd62f5e04d1fdc101a470ec13604e99816a5","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a54662bd4cbbe316048a811d3b5c83fb6df63739","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"5adf2fdea25630893283e1ad5ba1721b698d6e95","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"71a3d7f2242706f7a6b79933a67ef3664cca3a24","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"b797c693378d94160121a2b8d9df0622a76cdbda","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"84a3b8fe07fc790082ee988dd8f6c2536fde72de","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0424a1fcffa1ae82fe70935972a894aca885bf9a","modified":1580551872000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1580551872000},{"_id":"themes/next/source/images/logo.svg","hash":"916ac3850fbad6339fe94e7d19aaee001a5ac309","modified":1581081162171},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6336c2b129db802221b1fd75e5fbe8aab85c0a1f","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"af182c0d1e52f94280f6108936914f04ed541eee","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d5c022aa3b2f89c2f2a178212338bb64804dd75","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"4b84f35e7040f9adb5cc540c366d7f9eb4c48bcc","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"60ed14e9ddcb138837ca22efb8886f9bff2a3dd2","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"bcba503e956e4b737b062faa66341bd880f16c10","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9df5ba77e6cf36129bddc270407215c23c60ff38","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"c7939407797acbd1ae0d8bae8e13b2bf045f870e","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"a48ed1dc9978b1b621f0e12664738c0d855d8013","modified":1580551872000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"f5821481440a0624c8aec5fc85f093de1527095f","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"0672ea2acf28dcc2cfc5244da36d3387d71a17cb","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"4b237e2344f35e9d1f6dbc3842d5e432d478ebfd","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"d5d85d3646d184e0340924addcfd2523fb289d00","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"a7ed54e2f52185a7b6bb9a8201f6c3aa74b0cb00","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"c27b3056d5e22d3c66d8a152a23634314d5c4a60","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"521534f483440434e808f92377bc3fc73667c89a","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"6d8680894e24a516e2b5263af86b485767c3be63","modified":1580551872000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"9a18b186b08ec220d1b17cf83812bcdd06077814","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"b492a45422773ab2af06ee345d527ba4c6bbc608","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"b4923515ca8e44aa62e839ce948f759cfd1f896f","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"5bf28a03ef021c27cfd713971caca5a0b9466fd1","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"1a14c1b92d8a4dd8aabb5949333ac0ac79094c6c","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"d2f0f2171722533bba308f944a2ec727b083582c","modified":1580551872000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1580551872000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1580551872000},{"_id":"source/about/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1581357428806},{"_id":"source/_posts/hello-world.md","hash":"e437a32173b6047751fde4ccaf03d4d8c1f8e709","modified":1581357857422},{"_id":"source/_posts/联系方式.md","hash":"44a8564cf00d632c14d634f033852b1396834fde","modified":1581357847275},{"_id":"source/_posts/配置OpenCV/在Mac上配置OpenCV与Xcode开发环境.md","hash":"1ec9df845c25426edc7ab98fe4f5938adf8d95bb","modified":1582706203642},{"_id":"source/_posts/配置OpenCV/Project.png","hash":"3380d8c5aafa8333fd92a0f35353c67d2888de59","modified":1582700763694},{"_id":"source/_posts/配置OpenCV/dir.png","hash":"68adbe30d9138ac21549356934866712ae8d6e77","modified":1582702252219},{"_id":"source/_posts/配置OpenCV/signature.png","hash":"9636884a131af89198e98f2e62822ff6163a1f66","modified":1582703111997},{"_id":"source/_posts/配置OpenCV/documention.png","hash":"e201a80d02b33f656d4eaee3d5e9da613977dc96","modified":1582701640812},{"_id":"source/_posts/配置OpenCV/Library.png","hash":"6f138c35396034992c24bedcdefa9598d5d3f9f9","modified":1582701774032},{"_id":"source/_posts/配置OpenCV/linker.png","hash":"72271cbf36e2e7babd0be5dcbac53e04e0848352","modified":1582702036670},{"_id":"source/_posts/配置OpenCV/Headers.png","hash":"f55588a795de40104149d6e8472e1d4f52a8a142","modified":1582701718002},{"_id":"source/_posts/配置OpenCV/Xcode.png","hash":"f095051c59b4a5d86b348181bd93972522521349","modified":1582698717101},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境.md","hash":"753a91cb6e193aea5da3d3b0db173e607f0f0d31","modified":1582706672121},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1582706328018},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/Project.png","hash":"3380d8c5aafa8333fd92a0f35353c67d2888de59","modified":1582700763694},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/dir.png","hash":"68adbe30d9138ac21549356934866712ae8d6e77","modified":1582702252219},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/signature.png","hash":"9636884a131af89198e98f2e62822ff6163a1f66","modified":1582703111997},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/documention.png","hash":"e201a80d02b33f656d4eaee3d5e9da613977dc96","modified":1582701640812},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/Library.png","hash":"6f138c35396034992c24bedcdefa9598d5d3f9f9","modified":1582701774032},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/linker.png","hash":"72271cbf36e2e7babd0be5dcbac53e04e0848352","modified":1582702036670},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/Headers.png","hash":"f55588a795de40104149d6e8472e1d4f52a8a142","modified":1582701718002},{"_id":"source/_posts/在Mac上配置OpenCV与Xcode开发环境/Xcode.png","hash":"f095051c59b4a5d86b348181bd93972522521349","modified":1582698717101},{"_id":"source/_posts/Struts实验 2/12.png","hash":"2a193f4c3277530433d8ca629b0d02f345fc3a7c","modified":1582710461158},{"_id":"source/_posts/Struts实验 2/15.png","hash":"0a5b7f516385ea6c0b6d6e49b71de320295bd3ad","modified":1582710633513},{"_id":"source/_posts/Struts实验 2/16.png","hash":"dc2a732037fad1cdcd376d93748f38f2cf0dd895","modified":1582710653676},{"_id":"source/_posts/Struts实验 2/17.png","hash":"b749ee2c18c364178a900697bfe11750512116af","modified":1582710726504},{"_id":"source/_posts/Struts实验 2/3.png","hash":"8ed394fa26e72c72a5e5fe9a49159d6517cc7ffc","modified":1582710136966},{"_id":"source/_posts/Struts实验 2/8.png","hash":"70115598e49ef24895f4f37fef860de3b509d232","modified":1582710416203},{"_id":"source/_posts/Struts实验 2/Struts 实验.md","hash":"e1ab4a6069e6e92eda73aed151a9f89b2538ec08","modified":1582710900374},{"_id":"source/_posts/Struts实验 2/1.png","hash":"d7eb2bc35abc97cd95329bc49bb401e9f61239b0","modified":1582710080170},{"_id":"source/_posts/Struts实验 2/11.png","hash":"b98c505b83772f2cd7fa077fa8364590ae540069","modified":1582710449161},{"_id":"source/_posts/Struts实验 2/13.png","hash":"ae7f800dbe302632b4e780ebd946e33907d06ee2","modified":1582710472775},{"_id":"source/_posts/Struts实验 2/14.png","hash":"98a27d750c7f4a92dd3d35c22d717813183367d3","modified":1582710503515},{"_id":"source/_posts/Struts实验 2/2.png","hash":"1704b133a68c645c8bec5f663fef7329c2cf98f2","modified":1582710129067},{"_id":"source/_posts/Struts实验 2/18.png","hash":"4f97101c6640207342eebe013bc237930cc1c9f6","modified":1582710711821},{"_id":"source/_posts/Struts实验 2/20.png","hash":"ed64abab800afadbcf93e265bcce5b3f0bcb5eb4","modified":1582710765518},{"_id":"source/_posts/Struts实验 2/19.png","hash":"09517d00a79e34c8b80592a4be975e856e0cd886","modified":1582710757958},{"_id":"source/_posts/Struts实验 2/4.png","hash":"63b7c1b0aaf05bbd219156b694b10b12985f4af1","modified":1582710146287},{"_id":"source/_posts/Struts实验 2/5.png","hash":"f0dc42bd0706e658ea3168dd2be50014118d2017","modified":1582710160412},{"_id":"source/_posts/Struts实验 2/6.png","hash":"dc3d7595e3e18d9056a390d4b868649f195b6d92","modified":1582710168429},{"_id":"source/_posts/Struts实验 2/7.png","hash":"ba150ac99e12159c1bf64edc3e37a5f2be8fe7df","modified":1582710110853},{"_id":"source/_posts/Struts实验 2/9.png","hash":"836684a889d211df549c8fb6f90a689d20d59f34","modified":1582710424749},{"_id":"source/_posts/Struts实验 2/10.png","hash":"c4d4808354668716e312dc618fc88ef9f27aa4e5","modified":1582710437096},{"_id":"source/_posts/Struts Experiment/16.png","hash":"dc2a732037fad1cdcd376d93748f38f2cf0dd895","modified":1582710653676},{"_id":"source/_posts/Struts Experiment/8.png","hash":"70115598e49ef24895f4f37fef860de3b509d232","modified":1582710416203},{"_id":"source/_posts/Struts Experiment/Struts 实验.md","hash":"e1ab4a6069e6e92eda73aed151a9f89b2538ec08","modified":1582710900374},{"_id":"source/_posts/Struts Experiment/1.png","hash":"d7eb2bc35abc97cd95329bc49bb401e9f61239b0","modified":1582710080170},{"_id":"source/_posts/Struts Experiment/11.png","hash":"b98c505b83772f2cd7fa077fa8364590ae540069","modified":1582710449161},{"_id":"source/_posts/Struts Experiment/15.png","hash":"0a5b7f516385ea6c0b6d6e49b71de320295bd3ad","modified":1582710633513},{"_id":"source/_posts/Struts Experiment/12.png","hash":"2a193f4c3277530433d8ca629b0d02f345fc3a7c","modified":1582710461158},{"_id":"source/_posts/Struts Experiment/13.png","hash":"ae7f800dbe302632b4e780ebd946e33907d06ee2","modified":1582710472775},{"_id":"source/_posts/Struts Experiment/17.png","hash":"b749ee2c18c364178a900697bfe11750512116af","modified":1582710726504},{"_id":"source/_posts/Struts Experiment/19.png","hash":"09517d00a79e34c8b80592a4be975e856e0cd886","modified":1582710757958},{"_id":"source/_posts/Struts Experiment/18.png","hash":"4f97101c6640207342eebe013bc237930cc1c9f6","modified":1582710711821},{"_id":"source/_posts/Struts Experiment/3.png","hash":"8ed394fa26e72c72a5e5fe9a49159d6517cc7ffc","modified":1582710136966},{"_id":"source/_posts/Struts Experiment/5.png","hash":"f0dc42bd0706e658ea3168dd2be50014118d2017","modified":1582710160412},{"_id":"source/_posts/Struts Experiment/2.png","hash":"1704b133a68c645c8bec5f663fef7329c2cf98f2","modified":1582710129067},{"_id":"source/_posts/Struts Experiment/4.png","hash":"63b7c1b0aaf05bbd219156b694b10b12985f4af1","modified":1582710146287},{"_id":"source/_posts/Struts Experiment/6.png","hash":"dc3d7595e3e18d9056a390d4b868649f195b6d92","modified":1582710168429},{"_id":"source/_posts/Struts Experiment/7.png","hash":"ba150ac99e12159c1bf64edc3e37a5f2be8fe7df","modified":1582710110853},{"_id":"source/_posts/Struts Experiment/14.png","hash":"98a27d750c7f4a92dd3d35c22d717813183367d3","modified":1582710503515},{"_id":"source/_posts/Struts Experiment/20.png","hash":"ed64abab800afadbcf93e265bcce5b3f0bcb5eb4","modified":1582710765518},{"_id":"source/_posts/Struts Experiment/9.png","hash":"836684a889d211df549c8fb6f90a689d20d59f34","modified":1582710424749},{"_id":"source/_posts/Struts Experiment/10.png","hash":"c4d4808354668716e312dc618fc88ef9f27aa4e5","modified":1582710437096},{"_id":"source/_posts/Struts_Experiment/12.png","hash":"2a193f4c3277530433d8ca629b0d02f345fc3a7c","modified":1582710461158},{"_id":"source/_posts/Struts_Experiment/8.png","hash":"70115598e49ef24895f4f37fef860de3b509d232","modified":1582710416203},{"_id":"source/_posts/Struts_Experiment/1.png","hash":"d7eb2bc35abc97cd95329bc49bb401e9f61239b0","modified":1582710080170},{"_id":"source/_posts/Struts_Experiment/13.png","hash":"ae7f800dbe302632b4e780ebd946e33907d06ee2","modified":1582710472775},{"_id":"source/_posts/Struts_Experiment/15.png","hash":"0a5b7f516385ea6c0b6d6e49b71de320295bd3ad","modified":1582710633513},{"_id":"source/_posts/Struts_Experiment/16.png","hash":"dc2a732037fad1cdcd376d93748f38f2cf0dd895","modified":1582710653676},{"_id":"source/_posts/Struts_Experiment/17.png","hash":"b749ee2c18c364178a900697bfe11750512116af","modified":1582710726504},{"_id":"source/_posts/Struts_Experiment/2.png","hash":"1704b133a68c645c8bec5f663fef7329c2cf98f2","modified":1582710129067},{"_id":"source/_posts/Struts_Experiment/19.png","hash":"09517d00a79e34c8b80592a4be975e856e0cd886","modified":1582710757958},{"_id":"source/_posts/Struts_Experiment/20.png","hash":"ed64abab800afadbcf93e265bcce5b3f0bcb5eb4","modified":1582710765518},{"_id":"source/_posts/Struts_Experiment/3.png","hash":"8ed394fa26e72c72a5e5fe9a49159d6517cc7ffc","modified":1582710136966},{"_id":"source/_posts/Struts_Experiment/4.png","hash":"63b7c1b0aaf05bbd219156b694b10b12985f4af1","modified":1582710146287},{"_id":"source/_posts/Struts_Experiment/7.png","hash":"ba150ac99e12159c1bf64edc3e37a5f2be8fe7df","modified":1582710110853},{"_id":"source/_posts/Struts_Experiment/5.png","hash":"f0dc42bd0706e658ea3168dd2be50014118d2017","modified":1582710160412},{"_id":"source/_posts/Struts_Experiment/6.png","hash":"dc3d7595e3e18d9056a390d4b868649f195b6d92","modified":1582710168429},{"_id":"source/_posts/Struts_Experiment/14.png","hash":"98a27d750c7f4a92dd3d35c22d717813183367d3","modified":1582710503515},{"_id":"source/_posts/Struts_Experiment/11.png","hash":"b98c505b83772f2cd7fa077fa8364590ae540069","modified":1582710449161},{"_id":"source/_posts/Struts_Experiment/18.png","hash":"4f97101c6640207342eebe013bc237930cc1c9f6","modified":1582710711821},{"_id":"source/_posts/Struts_Experiment/9.png","hash":"836684a889d211df549c8fb6f90a689d20d59f34","modified":1582710424749},{"_id":"source/_posts/Struts_Experiment/10.png","hash":"c4d4808354668716e312dc618fc88ef9f27aa4e5","modified":1582710437096},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1582706328018},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Project.png","hash":"3380d8c5aafa8333fd92a0f35353c67d2888de59","modified":1582700763694},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/signature.png","hash":"9636884a131af89198e98f2e62822ff6163a1f66","modified":1582703111997},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/dir.png","hash":"68adbe30d9138ac21549356934866712ae8d6e77","modified":1582702252219},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/documention.png","hash":"e201a80d02b33f656d4eaee3d5e9da613977dc96","modified":1582701640812},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Library.png","hash":"6f138c35396034992c24bedcdefa9598d5d3f9f9","modified":1582701774032},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Headers.png","hash":"f55588a795de40104149d6e8472e1d4f52a8a142","modified":1582701718002},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/linker.png","hash":"72271cbf36e2e7babd0be5dcbac53e04e0848352","modified":1582702036670},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Xcode.png","hash":"f095051c59b4a5d86b348181bd93972522521349","modified":1582698717101},{"_id":"source/_posts/Design+Code_Vue.js_Learning.md","hash":"4036e57e834799626f9c69c79c6b718cf8037da0","modified":1581358274294},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode.md","hash":"753a91cb6e193aea5da3d3b0db173e607f0f0d31","modified":1582706672121},{"_id":"source/_posts/Struts_Experiment.md","hash":"3c8aec47cf0bc9252f308826fe1511127278d7e3","modified":1582711081681}],"Category":[],"Data":[],"Page":[{"title":"关于本站","date":"2020-02-07T13:52:18.000Z","type":"about","_content":"[StephenFang](https://github.com/iamStephenFang) 使用 [Hexo](https://hexo.io/zh-cn/docs/)  搭建的 [GitHub Pages](https://pages.github.com/)，主要分享技术与设计方面的内容。\n\n如果您对我的博文感兴趣，可以通过以下几种社交网络与我保持联系。\n\n- GitHub: [iamStephenFang](https://github.com/iamstephenfang) \n- Instagram: [iamStephenFang](https://instagram.com/iamstephenfang) \n- E-Mail: [StephenFang](mailto:fangxuanmiao@gmail.com) \n- Weibo: [iamStephenFang](https://weibo.com/iamstephenfang) \n- Twitter: [Fangxuanmiao](https://twitter.com/fangxuanmiao) ","source":"about/index.md","raw":"---\ntitle: 关于本站\ndate: 2020-02-07 21:52:18\ntype: about\n---\n[StephenFang](https://github.com/iamStephenFang) 使用 [Hexo](https://hexo.io/zh-cn/docs/)  搭建的 [GitHub Pages](https://pages.github.com/)，主要分享技术与设计方面的内容。\n\n如果您对我的博文感兴趣，可以通过以下几种社交网络与我保持联系。\n\n- GitHub: [iamStephenFang](https://github.com/iamstephenfang) \n- Instagram: [iamStephenFang](https://instagram.com/iamstephenfang) \n- E-Mail: [StephenFang](mailto:fangxuanmiao@gmail.com) \n- Weibo: [iamStephenFang](https://weibo.com/iamstephenfang) \n- Twitter: [Fangxuanmiao](https://twitter.com/fangxuanmiao) ","updated":"2020-02-10T18:08:28.596Z","path":"about/index.html","_id":"ck6grd6vb0003up6bb5my62j0","comments":1,"layout":"page","content":"<p><a href=\"https://github.com/iamStephenFang\" target=\"_blank\" rel=\"noopener\">StephenFang</a> 使用 <a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo</a>  搭建的 <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a>，主要分享技术与设计方面的内容。</p>\n<p>如果您对我的博文感兴趣，可以通过以下几种社交网络与我保持联系。</p>\n<ul>\n<li>GitHub: <a href=\"https://github.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">iamStephenFang</a> </li>\n<li>Instagram: <a href=\"https://instagram.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">iamStephenFang</a> </li>\n<li>E-Mail: <a href=\"mailto:fangxuanmiao@gmail.com\">StephenFang</a> </li>\n<li>Weibo: <a href=\"https://weibo.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">iamStephenFang</a> </li>\n<li>Twitter: <a href=\"https://twitter.com/fangxuanmiao\" target=\"_blank\" rel=\"noopener\">Fangxuanmiao</a> </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/iamStephenFang\" target=\"_blank\" rel=\"noopener\">StephenFang</a> 使用 <a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo</a>  搭建的 <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a>，主要分享技术与设计方面的内容。</p>\n<p>如果您对我的博文感兴趣，可以通过以下几种社交网络与我保持联系。</p>\n<ul>\n<li>GitHub: <a href=\"https://github.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">iamStephenFang</a> </li>\n<li>Instagram: <a href=\"https://instagram.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">iamStephenFang</a> </li>\n<li>E-Mail: <a href=\"mailto:fangxuanmiao@gmail.com\">StephenFang</a> </li>\n<li>Weibo: <a href=\"https://weibo.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">iamStephenFang</a> </li>\n<li>Twitter: <a href=\"https://twitter.com/fangxuanmiao\" target=\"_blank\" rel=\"noopener\">Fangxuanmiao</a> </li>\n</ul>\n"},{"title":"archives","date":"2020-02-07T13:55:29.000Z","type":"archive","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2020-02-07 21:55:29\ntype: \"archive\"\n---\n","updated":"2020-02-07T13:55:49.249Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ck6grd6vd0006up6bgyei567u","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2020-02-07T13:56:26.000Z","type":"th","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-02-07 21:56:26\ntype: \"th\"\n---\n","updated":"2020-02-07T13:57:15.835Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck6grd6ve0008up6bbon77gkp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-02-07T13:26:23.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-02-07 21:26:23\ntype: \"tags\"\n---\n","updated":"2020-02-07T13:27:49.612Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck6grd6vw000bup6b6pz0dx6f","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Apple Watch程序设计","date":"2020-02-07T08:45:28.000Z","_content":"\n## 基本原则\n\n设计Apple Watch应用程序与设计iOS程序存在很大不同，我们需要了解其是iPhone的功能拓展，它的尺寸带来了新的手势操作和UI/UX 设计。\n\n### **私人联系**\n\nApple Watch可能是第一个与用户建立紧密联系的设备，因此您在设计过程中需要利用这种独特的结合。\n\n### **整体化设计**\n\nForce Touch和Digital Crown是使用户与屏幕上的内容无缝交互的关键组件。在设计应用程序时，目标应该是增强用户的认识，即它们之间的硬件和软件是无法区分的。\n\n### **轻量化交互**\n\nApple Watch中的快速交互对于体验至关重要。动画和声音之间的同步对于用户至关重要。重要的是要考虑到显示的信息应该快速浏览并易于消除。\n\n## Apple Watch体验的权衡点\n\n苹果官方提供了[视频](https://developer.apple.com/videos/play/wwdc2017/808/)讲解了一些技巧。\n\n评估您的应用的最佳方法是考虑实现以下4点\n\n![Apple官方参考](https://images.ctfassets.net/ooa29xqb8tix/6MDnChHFUkSoASwSWm6Woq/cd8c7dfdb89088677467edf5bd21a5a6/Qualities_20of_20Apple_20Watch_20Experiences.jpg)\n\n### **清晰**\n\n用户第一眼就能了解界面所显示的信息。\n\n### **简洁**\n\n直截了当。请记住，您的用户收到应用程序通知并举起手腕之间的时间只有几秒钟。\n\n### **及时**\n\n在尽可能短的时间内向用户显示最相关的信息。这样，您正在使您的应用与用户更加相关。\n\n### **客制化**\n\n如果您的应用程序完成了前三个要素，那么您的用户将感到个人联系。理想情况下，尝试加深与用户的这种关系。","source":"_posts/Apple Watch.md","raw":"---\ntitle: Apple Watch程序设计\ndate: 2020-02-07 16:45:28\ntags: design\n---\n\n## 基本原则\n\n设计Apple Watch应用程序与设计iOS程序存在很大不同，我们需要了解其是iPhone的功能拓展，它的尺寸带来了新的手势操作和UI/UX 设计。\n\n### **私人联系**\n\nApple Watch可能是第一个与用户建立紧密联系的设备，因此您在设计过程中需要利用这种独特的结合。\n\n### **整体化设计**\n\nForce Touch和Digital Crown是使用户与屏幕上的内容无缝交互的关键组件。在设计应用程序时，目标应该是增强用户的认识，即它们之间的硬件和软件是无法区分的。\n\n### **轻量化交互**\n\nApple Watch中的快速交互对于体验至关重要。动画和声音之间的同步对于用户至关重要。重要的是要考虑到显示的信息应该快速浏览并易于消除。\n\n## Apple Watch体验的权衡点\n\n苹果官方提供了[视频](https://developer.apple.com/videos/play/wwdc2017/808/)讲解了一些技巧。\n\n评估您的应用的最佳方法是考虑实现以下4点\n\n![Apple官方参考](https://images.ctfassets.net/ooa29xqb8tix/6MDnChHFUkSoASwSWm6Woq/cd8c7dfdb89088677467edf5bd21a5a6/Qualities_20of_20Apple_20Watch_20Experiences.jpg)\n\n### **清晰**\n\n用户第一眼就能了解界面所显示的信息。\n\n### **简洁**\n\n直截了当。请记住，您的用户收到应用程序通知并举起手腕之间的时间只有几秒钟。\n\n### **及时**\n\n在尽可能短的时间内向用户显示最相关的信息。这样，您正在使您的应用与用户更加相关。\n\n### **客制化**\n\n如果您的应用程序完成了前三个要素，那么您的用户将感到个人联系。理想情况下，尝试加深与用户的这种关系。","slug":"Apple Watch","published":1,"updated":"2020-02-10T18:06:32.401Z","_id":"ck6grd6v50000up6b6ks90kmf","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h2><p>设计Apple Watch应用程序与设计iOS程序存在很大不同，我们需要了解其是iPhone的功能拓展，它的尺寸带来了新的手势操作和UI/UX 设计。</p>\n<h3 id=\"私人联系\"><a href=\"#私人联系\" class=\"headerlink\" title=\"私人联系\"></a><strong>私人联系</strong></h3><p>Apple Watch可能是第一个与用户建立紧密联系的设备，因此您在设计过程中需要利用这种独特的结合。</p>\n<h3 id=\"整体化设计\"><a href=\"#整体化设计\" class=\"headerlink\" title=\"整体化设计\"></a><strong>整体化设计</strong></h3><p>Force Touch和Digital Crown是使用户与屏幕上的内容无缝交互的关键组件。在设计应用程序时，目标应该是增强用户的认识，即它们之间的硬件和软件是无法区分的。</p>\n<h3 id=\"轻量化交互\"><a href=\"#轻量化交互\" class=\"headerlink\" title=\"轻量化交互\"></a><strong>轻量化交互</strong></h3><p>Apple Watch中的快速交互对于体验至关重要。动画和声音之间的同步对于用户至关重要。重要的是要考虑到显示的信息应该快速浏览并易于消除。</p>\n<h2 id=\"Apple-Watch体验的权衡点\"><a href=\"#Apple-Watch体验的权衡点\" class=\"headerlink\" title=\"Apple Watch体验的权衡点\"></a>Apple Watch体验的权衡点</h2><p>苹果官方提供了<a href=\"https://developer.apple.com/videos/play/wwdc2017/808/\" target=\"_blank\" rel=\"noopener\">视频</a>讲解了一些技巧。</p>\n<p>评估您的应用的最佳方法是考虑实现以下4点</p>\n<p><img src=\"https://images.ctfassets.net/ooa29xqb8tix/6MDnChHFUkSoASwSWm6Woq/cd8c7dfdb89088677467edf5bd21a5a6/Qualities_20of_20Apple_20Watch_20Experiences.jpg\" alt=\"Apple官方参考\"></p>\n<h3 id=\"清晰\"><a href=\"#清晰\" class=\"headerlink\" title=\"清晰\"></a><strong>清晰</strong></h3><p>用户第一眼就能了解界面所显示的信息。</p>\n<h3 id=\"简洁\"><a href=\"#简洁\" class=\"headerlink\" title=\"简洁\"></a><strong>简洁</strong></h3><p>直截了当。请记住，您的用户收到应用程序通知并举起手腕之间的时间只有几秒钟。</p>\n<h3 id=\"及时\"><a href=\"#及时\" class=\"headerlink\" title=\"及时\"></a><strong>及时</strong></h3><p>在尽可能短的时间内向用户显示最相关的信息。这样，您正在使您的应用与用户更加相关。</p>\n<h3 id=\"客制化\"><a href=\"#客制化\" class=\"headerlink\" title=\"客制化\"></a><strong>客制化</strong></h3><p>如果您的应用程序完成了前三个要素，那么您的用户将感到个人联系。理想情况下，尝试加深与用户的这种关系。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h2><p>设计Apple Watch应用程序与设计iOS程序存在很大不同，我们需要了解其是iPhone的功能拓展，它的尺寸带来了新的手势操作和UI/UX 设计。</p>\n<h3 id=\"私人联系\"><a href=\"#私人联系\" class=\"headerlink\" title=\"私人联系\"></a><strong>私人联系</strong></h3><p>Apple Watch可能是第一个与用户建立紧密联系的设备，因此您在设计过程中需要利用这种独特的结合。</p>\n<h3 id=\"整体化设计\"><a href=\"#整体化设计\" class=\"headerlink\" title=\"整体化设计\"></a><strong>整体化设计</strong></h3><p>Force Touch和Digital Crown是使用户与屏幕上的内容无缝交互的关键组件。在设计应用程序时，目标应该是增强用户的认识，即它们之间的硬件和软件是无法区分的。</p>\n<h3 id=\"轻量化交互\"><a href=\"#轻量化交互\" class=\"headerlink\" title=\"轻量化交互\"></a><strong>轻量化交互</strong></h3><p>Apple Watch中的快速交互对于体验至关重要。动画和声音之间的同步对于用户至关重要。重要的是要考虑到显示的信息应该快速浏览并易于消除。</p>\n<h2 id=\"Apple-Watch体验的权衡点\"><a href=\"#Apple-Watch体验的权衡点\" class=\"headerlink\" title=\"Apple Watch体验的权衡点\"></a>Apple Watch体验的权衡点</h2><p>苹果官方提供了<a href=\"https://developer.apple.com/videos/play/wwdc2017/808/\" target=\"_blank\" rel=\"noopener\">视频</a>讲解了一些技巧。</p>\n<p>评估您的应用的最佳方法是考虑实现以下4点</p>\n<p><img src=\"https://images.ctfassets.net/ooa29xqb8tix/6MDnChHFUkSoASwSWm6Woq/cd8c7dfdb89088677467edf5bd21a5a6/Qualities_20of_20Apple_20Watch_20Experiences.jpg\" alt=\"Apple官方参考\"></p>\n<h3 id=\"清晰\"><a href=\"#清晰\" class=\"headerlink\" title=\"清晰\"></a><strong>清晰</strong></h3><p>用户第一眼就能了解界面所显示的信息。</p>\n<h3 id=\"简洁\"><a href=\"#简洁\" class=\"headerlink\" title=\"简洁\"></a><strong>简洁</strong></h3><p>直截了当。请记住，您的用户收到应用程序通知并举起手腕之间的时间只有几秒钟。</p>\n<h3 id=\"及时\"><a href=\"#及时\" class=\"headerlink\" title=\"及时\"></a><strong>及时</strong></h3><p>在尽可能短的时间内向用户显示最相关的信息。这样，您正在使您的应用与用户更加相关。</p>\n<h3 id=\"客制化\"><a href=\"#客制化\" class=\"headerlink\" title=\"客制化\"></a><strong>客制化</strong></h3><p>如果您的应用程序完成了前三个要素，那么您的用户将感到个人联系。理想情况下，尝试加深与用户的这种关系。</p>\n"},{"title":"Hello World","_content":"欢迎访问我的博客，这是我的第一篇博文。\n我会不断更新我的个人博客，如果想要了解网站的更新可以订阅网站的RSS。\n欢迎关注我的 [GitHub](https://github.com/iamstephenfang).\n\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: about\n---\n欢迎访问我的博客，这是我的第一篇博文。\n我会不断更新我的个人博客，如果想要了解网站的更新可以订阅网站的RSS。\n欢迎关注我的 [GitHub](https://github.com/iamstephenfang).\n\n\n\n","slug":"hello-world","published":1,"date":"2020-02-07T08:15:57.491Z","updated":"2020-02-10T18:04:17.422Z","_id":"ck6grolyv00000i6b4dywb26w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>欢迎访问我的博客，这是我的第一篇博文。<br>我会不断更新我的个人博客，如果想要了解网站的更新可以订阅网站的RSS。<br>欢迎关注我的 <a href=\"https://github.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>欢迎访问我的博客，这是我的第一篇博文。<br>我会不断更新我的个人博客，如果想要了解网站的更新可以订阅网站的RSS。<br>欢迎关注我的 <a href=\"https://github.com/iamstephenfang\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n"},{"title":"Struts 2 应用实验","date":"2020-02-26T10:10:20.000Z","_content":"\n# Struts 2 应用实验\n\n## 知识梳理\n\n1、Struts2 是从 WebWork 框架上发展起来的 MVC 框架； \n\n2、FilterDispatcher 是 Struts2 中的核心控制器，客户端对服务器端的请求将被 FilterDispatcher 过滤；若请求需要调用某个 Action，则框架将根据配置文件`struts.xml`，找到需要调用的 Action 类； \n\n3、Action 类是一个符合一定命名规范的 JavaSE 类，作为业务控制器使用； Action \n中的 execute()方法用于调用 Model 层的业务逻辑类，并根据返回结果决定页面导航； \n\n4、若 Action 类中需要使用表单提交的请求参数，那么必须在 Action 类中声明与 \n表单域的名字对应的变量，并为变量提供 getters/setters 方法； \n\n5、Action 类需要在 `struts.xml` 中进行配置才能使用； \n\n6、编译运行基于 Struts2 框架的 Web 工程，需要导入 struts2 的 8 个核心 jar 包： \n\n| 文件名 | 说明 |\n| --- | --- |\n| struts2-core-2.3.15.1.jar | Struts 2 框架的核心类库 |\n| xwork-core-2.3.15.1.jar | XWork 类库，Struts 2 的构建基础 |\n| Ognl-3.0.6.jar | Struts 2 使用的一种表达式语言类库 |\n| freemarker-2.3.19.jar | Struts 2 的标签模板使用类库 |\n| javassist-3.11.0.GA.jar | 代码生成工具包 |\n| commons-lang3-3.1.jar | Apache 语言包，是 java.lang 包的扩展 |\n| commons-io-2.0.1.jar | Apache IO 包 |\n| commons-fileupload-1.3.jar | Struts 2 文件上传依赖包 |\n\n7、使用 Struts2 标签的形式来表达页面逻辑，可以尽量避免在视图中使用 Java 代码，让逻辑与显示分离，提高视图的可维护性； \n\n8、Struts2 标签库的主要 tld 文件为 `struts-tags.tld`， 在 `struts2-core-2.3.15.1.jar` 包中， 另一个与 Ajax 相关的标签库 tld 文件为 `struts-dojo-tags.tld`，在 `struts2-dojo -plugin-2.3.15.1.jar` 包中； \n\n9、Struts2 标签的使用步骤和使用 JSTL 相同，只需在 JSP 页面中使用 taglib 指令 引入标签库中 tld 文件的 uri， 并指定前缀即可，例如： `<%@ taglib prefix=\"s\" uri=\"/struts-tags\"%>`； \n\n10、根据 Struts2 标签的主要作用，可以将其分为：用于生成页面元素的 UI 标签、 用于实现流程控制的控制类标签、用于控制数据的数据标签和用于支持Ajax的标签。\n\n11、通过将不同语言版本的字符保存在属性文件中，Struts2 的国际化机制能够在不需要修改程序主体的前提下，实现不同语言版本的应用； \n\n12、在 Web 应用中选择需要进行国际化的内容，不在页面中直接输出该信息，而是通过 Struts2 标签输出一个键值，该键值在不同语言环境下对应不同的字符串；如：`<s:textfield name=\"loginUser.account\" lable=\"请输入用户名\"/>`代码中的“请输入用户名”是需要国际化的内容,将其以键值代替为`<s:textfield name=\"loginUser.account\" key=\"login.account.lable\"/>` \n\n13、需要进行国际化的内容以键值对（key=value） 的形式写入 Struts2 的国际化资源文件中，如`login.account.lable=请输入用户名”；`该资源文件名可以自定义，但是后缀必须是 properties；资源文件应放在 Web 应用的类加载路径下； 每一个语言版本需要创建一个资源文件； \n\n14、通过 Struts2 的配置文件 `struts.properties 来配置资源文件的基础名，若资源文 件的基础名为 message，则 `message_zh_CN.properties` 是对应的中文资源文件， `message_en_US.properties` 是对应的美国英语资源文件； \n\n15、浏览器将根据其默认的语言版本，自动调用相应语言的资源文件，从而在页面中展示不同的语言效果。\n\n## 实验总结\n1、实验中各个文件的作用：\n\n(1)jsp页面：负责展示视图\n\n(2)Action类：负责处理业务逻辑\n\n(3)Service类：用于实现登录逻辑\n\n(4)JavaBean：用于定义用户信息\n\n(5)Filter：起中央控制器作用的过滤器\n\n(6)struts.xml：核心配置文件\n\n2、Struts2 应用中从请求到响应的完整流程\n\n客户端首先向Action发送一个请求Request,Container通过web.xml映射请求，并获得Controller的名字；Container调用控制StrutsPrepareAndExecuteFilter；Controller通过ActionMapper获得Action的信息，调用ActionProxy；ActionProxy读取struts.xml文件获取action和interceptor stack的信息，把request请求传递给ActionInvocation；ActionInvocation依次调用action和interceptor；根据action的配置信息，产生result，Result信息返回给ActionInvocation，产生一个HttpServletResponse响应，产生的响应行为发送给客户端。\n\n3、MVC框架体现：\n\nModel：JavaBean、Action类\n\nView：JSP页面\n\nController：FilterDispatcher\n\n4、表单参数与 Action 属性的赋值关系\n\n表单元素的action属性值对应了action的name属性值，Action只是一个逻辑控制器，他不直接对请求者生成任何响应，而是通过result子元素将指定的返回值呈现给客户端，如返回字符串为success则跳转至loginSuccess.jsp页面.\n\n5、Action 的 execute()方法的作用和特点\n\n作用：处理业务逻辑\n\n特点：无参数；不需要实现或者继承任何接口或者父类；execute方法一定要返回String类型的对象,每一个字符串都可以对应一个跳转的页面。\n\n6、struts.xml 里各元素及其属性的作用\n\n(1)package：管理Action、拦截器等核心组件。包含作为包名的name属性、用于继承的extends属性、用于设置命名空间的namespace属性、设置为抽象包的abstract属性。\n\n(2)action元素：定义与Action操作有关的一系列配置信息。包含作为Action名的name属性、具体处理请求类的class属性、指定调用Action中放发明的method属性、指定使用Action类型转换器converter属性。\n\n(3)result元素：将Action类返回的字符串转发给对应的是图，实现逻辑视图和物理视图资源的映射。包含制定配置逻辑视图名的name属性、指定结果类型的type属性。\n\n(4)constant元素：改变Struts2的一些默认行为。包含指定框架功能的name属性、与name配合使用的value属性。\n\n(5)interceptors元素：定义拦截器集合的元素\n\n(6)interceptor元素：用于配置拦截器。包含指定拦截器逻辑名称的name属性和指定具体处理拦截类的class属性。\n\n(7)interceptors-ref元素：在某个action中引用拦截器。\n\n(8)interceptors-stack元素：定义拦截器栈\n\n7、Struts2 中标签及其属性的作用和用法：\n\n(1)form标签：生成表单元素。包含提交Action名字的action属性、命名空间namespace属性、定义GET/POST的method属性等\n\n(2)textfield标签：用来输入一小段文字。包含定义可输入最大长度值的maxlength属性、定义字段尺寸size属性、用于标示元素的id属性等\n\n(3)password标签：默认不显示输入内容的textfield。包含确定是否显示内容的showPassword属性、字段最大长度maxlength属性、定义字段尺寸size属性等\n\n(4)if/elseif/else标签：通过逻辑值控制流程。包含决定标签内容是否显示的test属性、标示元素id的id属性。\n\n(5)iterator标签：用于遍历集合元素。包含产生IteratorStatus对象实例的status属性、标示元素id的id属性等\n\n8、配置文件 struts.properties 的作用\n\n定义了Struts 2框架的大量属性，开发者可以通过改变这些属性来满足应用的需求。其中`struts.configuration`属性指定加载Struts 2配置文件的配置文件管理器。struts.locale属性指定Web应用的默认`Locale。struts.i18n.encoding`指定Web应用的默认编码集。\n\n## 实验步骤\n### 基础实验\n\n1、登录 http://struts.apache.org/download.cgi 站点，下载 Struts2 的最新版（Full Distribution）； \n\n2、新建 Web 工程 struts-prj1； \n\n3、将 Struts2 中的 8 个核心包增加到 Web 应用中，即复制到“%workspace% \nstruts-prj1\\WebContent\\WEB-INF\\lib”路径下； \n\n4、在 struts-prj1 中新建 login.jsp 页面，作为用户登录的视图（代码片段如下）， 注意表单（form）中 action 属性的值，注意用户名与密码输入框中 name 属性的值； \n\n5、在 struts-prj1 中新建 loginSuccess.jsp 和 loginFail.jsp 页面，分别作为登录成功 或登录失败的视图，在页面中显示“登录成功”或“登录失败”；\n\n![](1.png)\n \n6、在 struts-prj1 中新建 cn.edu.zjut.bean 包，并在其中创建 UserBean.java，用于记录登录用户信息，注意该 JavaBean 中属性名的写法； \n\n![](2.png)\n \n7、在 struts-prj1 中新建 cn.edu.zjut.service 包，并在其中创建 UserService.java， 用于实现登录逻辑，为简化登录逻辑，将登录成功的条件设置为：用户名和密码相同\n\n![](3.png)\n \n8、在 struts-prj1 中新建 cn.edu.zjut.action 包，并在其中创建 UserAction.java，调 用登录逻辑，并根据登录结果不同而返回不同的内容，注意该 Action 中的属性名及相应的 getters 和 setters 方法、execute()方法及返回值；  \n\n![](4.png)\n\n9、在工程 struts-prj1 的 src 目录中创建 struts.xml 文件，用于配置 Action 并设置 页面导航，注意 action 标签中 name 属性和 class 属性的值， 以及 result 子标签的属性； \n\n![](5.png)\n \n10、编辑 Web 应用的 web.xml 文件，增加 Struts2 核心 Filter 的配置； \n\n![](6.png)\n \n11、将 struts-prj1 部署在 Tomcat 服务器上； \n\n12、通过浏览器访问 login.jsp 页面，并记录运行结果；\n\n![](7.png)\n\n### 提高实验\n\n1、为能使用与 Ajax 相关的标签，将 Struts2 中的 `struts2-dojo-plugin-2.3.15.1.jar` 包增加到工程 struts-prj1 中，即复制到`%workspace%struts-prj1\\WebContent\\ WEB-INF\\lib`路径下，刷新工程； \n\n![](8.png)\n\n2、在工程 struts-prj1 中增加用户注册功能，新建 register.jsp 页面作为用户注册的 视图，页面使用 Struts2 的 UI 标签来生成表单元素，包括用户名、密码、确认密码、真实姓名、性别、生日、联系地址、联系电话和电子邮箱 \n\n![](9.png)\n\n3、在 struts-prj1 中新建 `regFail.jsp` 页面，作为注册失败的视图，在页面中显示“注册失败”； \n\n4、在 struts-prj1 中新建 `regSuccess.jsp` 页面，作为注册成功的视图，使用 Struts2 的数据标签和控制标签来生成注册成功的信息，并将登录用户信息保存在会话范围内 \n\n5、修改 `UserBean.java`，增加属性用于记录注册用户信息 \n\n![](10.png)\n \n6、修改 `UserService.java`，增加用户注册逻辑，为简化注册逻辑，将注册成功的条件设置为：用户名、密码和确认密码相同，而且不为空字串； \n\n![](11.png)\n \n7、修改 `UserAction.java` 中的 execute()方法，参照基础实验部分写入代码，用于调用注册逻辑，并根据注册成功与否而返回不同的内容； \n\n![](12.png)\n \n8、修改 `struts.xml` 文件，对用户注册进行配置并设置页面导航； \n\n![](13.png)\n \n9、将 struts-prj1 重新布署在 Tomcat 服务器上，通过浏览器访问 `register.jsp` 页面， 并记录运行结果； \n\n![](14.png)\n\n### 拓展实验\n\n1、在工程 struts-prj1 的 src 目录下新建一个 `cn.edu.zjut.local` 包，把所有的资源文件放置其中，如：`message_zh_CN.properties`、`message_en_US.properties` 等； \n\n![](15.png)\n  \n2、将工程 struts-prj1 中用户登录模块的三个 JSP 页面进行国际化处理，选择需要进行国际化的内容，以键值对的形式写入资源文件中 \n\n3、使用 JDK 中的 native2ASCII 工具，将 `message_zh_CN.properties` 重新编码，将中文字符都转化为 unicode 码，从而避免乱码问题； \n\n4、在工程 struts-prj1 的 src 目录中创建 `struts.properties` 文件，通过它加载资源文件,或者在JSP页面中临时加载资源文件  \n\n![](16.png)\n\n5、修改 `login.jsp`、`loginSuccess.jsp` 和 `loginFail.jsp` 页面，通过 Struts2 标签实现国际化； \n\n6、将 struts-prj1 重新布署在 Tomcat 服务器上； \n\n7、设置浏览器的首语言选项（如下图所示），通过浏览器访问 `login.jsp` 页面， 观察并记录运行结果；\n\n![](17.png)\n \n8、尝试修改用户注册模块，实现国际化，并记录运行结果。 \n\n![](18.png)\n\n![](19.png)\n\n> 注册中文页面\n\n![](20.png)\n\n> 注册英文页面\n","source":"_posts/Struts_Experiment.md","raw":"---\ntitle: Struts 2 应用实验\ndate: 2020-02-26 18:10:20\ntags: tech\n---\n\n# Struts 2 应用实验\n\n## 知识梳理\n\n1、Struts2 是从 WebWork 框架上发展起来的 MVC 框架； \n\n2、FilterDispatcher 是 Struts2 中的核心控制器，客户端对服务器端的请求将被 FilterDispatcher 过滤；若请求需要调用某个 Action，则框架将根据配置文件`struts.xml`，找到需要调用的 Action 类； \n\n3、Action 类是一个符合一定命名规范的 JavaSE 类，作为业务控制器使用； Action \n中的 execute()方法用于调用 Model 层的业务逻辑类，并根据返回结果决定页面导航； \n\n4、若 Action 类中需要使用表单提交的请求参数，那么必须在 Action 类中声明与 \n表单域的名字对应的变量，并为变量提供 getters/setters 方法； \n\n5、Action 类需要在 `struts.xml` 中进行配置才能使用； \n\n6、编译运行基于 Struts2 框架的 Web 工程，需要导入 struts2 的 8 个核心 jar 包： \n\n| 文件名 | 说明 |\n| --- | --- |\n| struts2-core-2.3.15.1.jar | Struts 2 框架的核心类库 |\n| xwork-core-2.3.15.1.jar | XWork 类库，Struts 2 的构建基础 |\n| Ognl-3.0.6.jar | Struts 2 使用的一种表达式语言类库 |\n| freemarker-2.3.19.jar | Struts 2 的标签模板使用类库 |\n| javassist-3.11.0.GA.jar | 代码生成工具包 |\n| commons-lang3-3.1.jar | Apache 语言包，是 java.lang 包的扩展 |\n| commons-io-2.0.1.jar | Apache IO 包 |\n| commons-fileupload-1.3.jar | Struts 2 文件上传依赖包 |\n\n7、使用 Struts2 标签的形式来表达页面逻辑，可以尽量避免在视图中使用 Java 代码，让逻辑与显示分离，提高视图的可维护性； \n\n8、Struts2 标签库的主要 tld 文件为 `struts-tags.tld`， 在 `struts2-core-2.3.15.1.jar` 包中， 另一个与 Ajax 相关的标签库 tld 文件为 `struts-dojo-tags.tld`，在 `struts2-dojo -plugin-2.3.15.1.jar` 包中； \n\n9、Struts2 标签的使用步骤和使用 JSTL 相同，只需在 JSP 页面中使用 taglib 指令 引入标签库中 tld 文件的 uri， 并指定前缀即可，例如： `<%@ taglib prefix=\"s\" uri=\"/struts-tags\"%>`； \n\n10、根据 Struts2 标签的主要作用，可以将其分为：用于生成页面元素的 UI 标签、 用于实现流程控制的控制类标签、用于控制数据的数据标签和用于支持Ajax的标签。\n\n11、通过将不同语言版本的字符保存在属性文件中，Struts2 的国际化机制能够在不需要修改程序主体的前提下，实现不同语言版本的应用； \n\n12、在 Web 应用中选择需要进行国际化的内容，不在页面中直接输出该信息，而是通过 Struts2 标签输出一个键值，该键值在不同语言环境下对应不同的字符串；如：`<s:textfield name=\"loginUser.account\" lable=\"请输入用户名\"/>`代码中的“请输入用户名”是需要国际化的内容,将其以键值代替为`<s:textfield name=\"loginUser.account\" key=\"login.account.lable\"/>` \n\n13、需要进行国际化的内容以键值对（key=value） 的形式写入 Struts2 的国际化资源文件中，如`login.account.lable=请输入用户名”；`该资源文件名可以自定义，但是后缀必须是 properties；资源文件应放在 Web 应用的类加载路径下； 每一个语言版本需要创建一个资源文件； \n\n14、通过 Struts2 的配置文件 `struts.properties 来配置资源文件的基础名，若资源文 件的基础名为 message，则 `message_zh_CN.properties` 是对应的中文资源文件， `message_en_US.properties` 是对应的美国英语资源文件； \n\n15、浏览器将根据其默认的语言版本，自动调用相应语言的资源文件，从而在页面中展示不同的语言效果。\n\n## 实验总结\n1、实验中各个文件的作用：\n\n(1)jsp页面：负责展示视图\n\n(2)Action类：负责处理业务逻辑\n\n(3)Service类：用于实现登录逻辑\n\n(4)JavaBean：用于定义用户信息\n\n(5)Filter：起中央控制器作用的过滤器\n\n(6)struts.xml：核心配置文件\n\n2、Struts2 应用中从请求到响应的完整流程\n\n客户端首先向Action发送一个请求Request,Container通过web.xml映射请求，并获得Controller的名字；Container调用控制StrutsPrepareAndExecuteFilter；Controller通过ActionMapper获得Action的信息，调用ActionProxy；ActionProxy读取struts.xml文件获取action和interceptor stack的信息，把request请求传递给ActionInvocation；ActionInvocation依次调用action和interceptor；根据action的配置信息，产生result，Result信息返回给ActionInvocation，产生一个HttpServletResponse响应，产生的响应行为发送给客户端。\n\n3、MVC框架体现：\n\nModel：JavaBean、Action类\n\nView：JSP页面\n\nController：FilterDispatcher\n\n4、表单参数与 Action 属性的赋值关系\n\n表单元素的action属性值对应了action的name属性值，Action只是一个逻辑控制器，他不直接对请求者生成任何响应，而是通过result子元素将指定的返回值呈现给客户端，如返回字符串为success则跳转至loginSuccess.jsp页面.\n\n5、Action 的 execute()方法的作用和特点\n\n作用：处理业务逻辑\n\n特点：无参数；不需要实现或者继承任何接口或者父类；execute方法一定要返回String类型的对象,每一个字符串都可以对应一个跳转的页面。\n\n6、struts.xml 里各元素及其属性的作用\n\n(1)package：管理Action、拦截器等核心组件。包含作为包名的name属性、用于继承的extends属性、用于设置命名空间的namespace属性、设置为抽象包的abstract属性。\n\n(2)action元素：定义与Action操作有关的一系列配置信息。包含作为Action名的name属性、具体处理请求类的class属性、指定调用Action中放发明的method属性、指定使用Action类型转换器converter属性。\n\n(3)result元素：将Action类返回的字符串转发给对应的是图，实现逻辑视图和物理视图资源的映射。包含制定配置逻辑视图名的name属性、指定结果类型的type属性。\n\n(4)constant元素：改变Struts2的一些默认行为。包含指定框架功能的name属性、与name配合使用的value属性。\n\n(5)interceptors元素：定义拦截器集合的元素\n\n(6)interceptor元素：用于配置拦截器。包含指定拦截器逻辑名称的name属性和指定具体处理拦截类的class属性。\n\n(7)interceptors-ref元素：在某个action中引用拦截器。\n\n(8)interceptors-stack元素：定义拦截器栈\n\n7、Struts2 中标签及其属性的作用和用法：\n\n(1)form标签：生成表单元素。包含提交Action名字的action属性、命名空间namespace属性、定义GET/POST的method属性等\n\n(2)textfield标签：用来输入一小段文字。包含定义可输入最大长度值的maxlength属性、定义字段尺寸size属性、用于标示元素的id属性等\n\n(3)password标签：默认不显示输入内容的textfield。包含确定是否显示内容的showPassword属性、字段最大长度maxlength属性、定义字段尺寸size属性等\n\n(4)if/elseif/else标签：通过逻辑值控制流程。包含决定标签内容是否显示的test属性、标示元素id的id属性。\n\n(5)iterator标签：用于遍历集合元素。包含产生IteratorStatus对象实例的status属性、标示元素id的id属性等\n\n8、配置文件 struts.properties 的作用\n\n定义了Struts 2框架的大量属性，开发者可以通过改变这些属性来满足应用的需求。其中`struts.configuration`属性指定加载Struts 2配置文件的配置文件管理器。struts.locale属性指定Web应用的默认`Locale。struts.i18n.encoding`指定Web应用的默认编码集。\n\n## 实验步骤\n### 基础实验\n\n1、登录 http://struts.apache.org/download.cgi 站点，下载 Struts2 的最新版（Full Distribution）； \n\n2、新建 Web 工程 struts-prj1； \n\n3、将 Struts2 中的 8 个核心包增加到 Web 应用中，即复制到“%workspace% \nstruts-prj1\\WebContent\\WEB-INF\\lib”路径下； \n\n4、在 struts-prj1 中新建 login.jsp 页面，作为用户登录的视图（代码片段如下）， 注意表单（form）中 action 属性的值，注意用户名与密码输入框中 name 属性的值； \n\n5、在 struts-prj1 中新建 loginSuccess.jsp 和 loginFail.jsp 页面，分别作为登录成功 或登录失败的视图，在页面中显示“登录成功”或“登录失败”；\n\n![](1.png)\n \n6、在 struts-prj1 中新建 cn.edu.zjut.bean 包，并在其中创建 UserBean.java，用于记录登录用户信息，注意该 JavaBean 中属性名的写法； \n\n![](2.png)\n \n7、在 struts-prj1 中新建 cn.edu.zjut.service 包，并在其中创建 UserService.java， 用于实现登录逻辑，为简化登录逻辑，将登录成功的条件设置为：用户名和密码相同\n\n![](3.png)\n \n8、在 struts-prj1 中新建 cn.edu.zjut.action 包，并在其中创建 UserAction.java，调 用登录逻辑，并根据登录结果不同而返回不同的内容，注意该 Action 中的属性名及相应的 getters 和 setters 方法、execute()方法及返回值；  \n\n![](4.png)\n\n9、在工程 struts-prj1 的 src 目录中创建 struts.xml 文件，用于配置 Action 并设置 页面导航，注意 action 标签中 name 属性和 class 属性的值， 以及 result 子标签的属性； \n\n![](5.png)\n \n10、编辑 Web 应用的 web.xml 文件，增加 Struts2 核心 Filter 的配置； \n\n![](6.png)\n \n11、将 struts-prj1 部署在 Tomcat 服务器上； \n\n12、通过浏览器访问 login.jsp 页面，并记录运行结果；\n\n![](7.png)\n\n### 提高实验\n\n1、为能使用与 Ajax 相关的标签，将 Struts2 中的 `struts2-dojo-plugin-2.3.15.1.jar` 包增加到工程 struts-prj1 中，即复制到`%workspace%struts-prj1\\WebContent\\ WEB-INF\\lib`路径下，刷新工程； \n\n![](8.png)\n\n2、在工程 struts-prj1 中增加用户注册功能，新建 register.jsp 页面作为用户注册的 视图，页面使用 Struts2 的 UI 标签来生成表单元素，包括用户名、密码、确认密码、真实姓名、性别、生日、联系地址、联系电话和电子邮箱 \n\n![](9.png)\n\n3、在 struts-prj1 中新建 `regFail.jsp` 页面，作为注册失败的视图，在页面中显示“注册失败”； \n\n4、在 struts-prj1 中新建 `regSuccess.jsp` 页面，作为注册成功的视图，使用 Struts2 的数据标签和控制标签来生成注册成功的信息，并将登录用户信息保存在会话范围内 \n\n5、修改 `UserBean.java`，增加属性用于记录注册用户信息 \n\n![](10.png)\n \n6、修改 `UserService.java`，增加用户注册逻辑，为简化注册逻辑，将注册成功的条件设置为：用户名、密码和确认密码相同，而且不为空字串； \n\n![](11.png)\n \n7、修改 `UserAction.java` 中的 execute()方法，参照基础实验部分写入代码，用于调用注册逻辑，并根据注册成功与否而返回不同的内容； \n\n![](12.png)\n \n8、修改 `struts.xml` 文件，对用户注册进行配置并设置页面导航； \n\n![](13.png)\n \n9、将 struts-prj1 重新布署在 Tomcat 服务器上，通过浏览器访问 `register.jsp` 页面， 并记录运行结果； \n\n![](14.png)\n\n### 拓展实验\n\n1、在工程 struts-prj1 的 src 目录下新建一个 `cn.edu.zjut.local` 包，把所有的资源文件放置其中，如：`message_zh_CN.properties`、`message_en_US.properties` 等； \n\n![](15.png)\n  \n2、将工程 struts-prj1 中用户登录模块的三个 JSP 页面进行国际化处理，选择需要进行国际化的内容，以键值对的形式写入资源文件中 \n\n3、使用 JDK 中的 native2ASCII 工具，将 `message_zh_CN.properties` 重新编码，将中文字符都转化为 unicode 码，从而避免乱码问题； \n\n4、在工程 struts-prj1 的 src 目录中创建 `struts.properties` 文件，通过它加载资源文件,或者在JSP页面中临时加载资源文件  \n\n![](16.png)\n\n5、修改 `login.jsp`、`loginSuccess.jsp` 和 `loginFail.jsp` 页面，通过 Struts2 标签实现国际化； \n\n6、将 struts-prj1 重新布署在 Tomcat 服务器上； \n\n7、设置浏览器的首语言选项（如下图所示），通过浏览器访问 `login.jsp` 页面， 观察并记录运行结果；\n\n![](17.png)\n \n8、尝试修改用户注册模块，实现国际化，并记录运行结果。 \n\n![](18.png)\n\n![](19.png)\n\n> 注册中文页面\n\n![](20.png)\n\n> 注册英文页面\n","slug":"Struts_Experiment","published":1,"updated":"2020-02-26T10:01:14.727Z","_id":"ck7359lit00037c6b68jqbo4u","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Struts-2-应用实验\"><a href=\"#Struts-2-应用实验\" class=\"headerlink\" title=\"Struts 2 应用实验\"></a>Struts 2 应用实验</h1><h2 id=\"知识梳理\"><a href=\"#知识梳理\" class=\"headerlink\" title=\"知识梳理\"></a>知识梳理</h2><p>1、Struts2 是从 WebWork 框架上发展起来的 MVC 框架； </p>\n<p>2、FilterDispatcher 是 Struts2 中的核心控制器，客户端对服务器端的请求将被 FilterDispatcher 过滤；若请求需要调用某个 Action，则框架将根据配置文件<code>struts.xml</code>，找到需要调用的 Action 类； </p>\n<p>3、Action 类是一个符合一定命名规范的 JavaSE 类，作为业务控制器使用； Action<br>中的 execute()方法用于调用 Model 层的业务逻辑类，并根据返回结果决定页面导航； </p>\n<p>4、若 Action 类中需要使用表单提交的请求参数，那么必须在 Action 类中声明与<br>表单域的名字对应的变量，并为变量提供 getters/setters 方法； </p>\n<p>5、Action 类需要在 <code>struts.xml</code> 中进行配置才能使用； </p>\n<p>6、编译运行基于 Struts2 框架的 Web 工程，需要导入 struts2 的 8 个核心 jar 包： </p>\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>struts2-core-2.3.15.1.jar</td>\n<td>Struts 2 框架的核心类库</td>\n</tr>\n<tr>\n<td>xwork-core-2.3.15.1.jar</td>\n<td>XWork 类库，Struts 2 的构建基础</td>\n</tr>\n<tr>\n<td>Ognl-3.0.6.jar</td>\n<td>Struts 2 使用的一种表达式语言类库</td>\n</tr>\n<tr>\n<td>freemarker-2.3.19.jar</td>\n<td>Struts 2 的标签模板使用类库</td>\n</tr>\n<tr>\n<td>javassist-3.11.0.GA.jar</td>\n<td>代码生成工具包</td>\n</tr>\n<tr>\n<td>commons-lang3-3.1.jar</td>\n<td>Apache 语言包，是 java.lang 包的扩展</td>\n</tr>\n<tr>\n<td>commons-io-2.0.1.jar</td>\n<td>Apache IO 包</td>\n</tr>\n<tr>\n<td>commons-fileupload-1.3.jar</td>\n<td>Struts 2 文件上传依赖包</td>\n</tr>\n</tbody></table>\n<p>7、使用 Struts2 标签的形式来表达页面逻辑，可以尽量避免在视图中使用 Java 代码，让逻辑与显示分离，提高视图的可维护性； </p>\n<p>8、Struts2 标签库的主要 tld 文件为 <code>struts-tags.tld</code>， 在 <code>struts2-core-2.3.15.1.jar</code> 包中， 另一个与 Ajax 相关的标签库 tld 文件为 <code>struts-dojo-tags.tld</code>，在 <code>struts2-dojo -plugin-2.3.15.1.jar</code> 包中； </p>\n<p>9、Struts2 标签的使用步骤和使用 JSTL 相同，只需在 JSP 页面中使用 taglib 指令 引入标签库中 tld 文件的 uri， 并指定前缀即可，例如： <code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>； </p>\n<p>10、根据 Struts2 标签的主要作用，可以将其分为：用于生成页面元素的 UI 标签、 用于实现流程控制的控制类标签、用于控制数据的数据标签和用于支持Ajax的标签。</p>\n<p>11、通过将不同语言版本的字符保存在属性文件中，Struts2 的国际化机制能够在不需要修改程序主体的前提下，实现不同语言版本的应用； </p>\n<p>12、在 Web 应用中选择需要进行国际化的内容，不在页面中直接输出该信息，而是通过 Struts2 标签输出一个键值，该键值在不同语言环境下对应不同的字符串；如：<code>&lt;s:textfield name=&quot;loginUser.account&quot; lable=&quot;请输入用户名&quot;/&gt;</code>代码中的“请输入用户名”是需要国际化的内容,将其以键值代替为<code>&lt;s:textfield name=&quot;loginUser.account&quot; key=&quot;login.account.lable&quot;/&gt;</code> </p>\n<p>13、需要进行国际化的内容以键值对（key=value） 的形式写入 Struts2 的国际化资源文件中，如<code>login.account.lable=请输入用户名”；</code>该资源文件名可以自定义，但是后缀必须是 properties；资源文件应放在 Web 应用的类加载路径下； 每一个语言版本需要创建一个资源文件； </p>\n<p>14、通过 Struts2 的配置文件 <code>struts.properties 来配置资源文件的基础名，若资源文 件的基础名为 message，则</code>message_zh_CN.properties<code>是对应的中文资源文件，</code>message_en_US.properties` 是对应的美国英语资源文件； </p>\n<p>15、浏览器将根据其默认的语言版本，自动调用相应语言的资源文件，从而在页面中展示不同的语言效果。</p>\n<h2 id=\"实验总结\"><a href=\"#实验总结\" class=\"headerlink\" title=\"实验总结\"></a>实验总结</h2><p>1、实验中各个文件的作用：</p>\n<p>(1)jsp页面：负责展示视图</p>\n<p>(2)Action类：负责处理业务逻辑</p>\n<p>(3)Service类：用于实现登录逻辑</p>\n<p>(4)JavaBean：用于定义用户信息</p>\n<p>(5)Filter：起中央控制器作用的过滤器</p>\n<p>(6)struts.xml：核心配置文件</p>\n<p>2、Struts2 应用中从请求到响应的完整流程</p>\n<p>客户端首先向Action发送一个请求Request,Container通过web.xml映射请求，并获得Controller的名字；Container调用控制StrutsPrepareAndExecuteFilter；Controller通过ActionMapper获得Action的信息，调用ActionProxy；ActionProxy读取struts.xml文件获取action和interceptor stack的信息，把request请求传递给ActionInvocation；ActionInvocation依次调用action和interceptor；根据action的配置信息，产生result，Result信息返回给ActionInvocation，产生一个HttpServletResponse响应，产生的响应行为发送给客户端。</p>\n<p>3、MVC框架体现：</p>\n<p>Model：JavaBean、Action类</p>\n<p>View：JSP页面</p>\n<p>Controller：FilterDispatcher</p>\n<p>4、表单参数与 Action 属性的赋值关系</p>\n<p>表单元素的action属性值对应了action的name属性值，Action只是一个逻辑控制器，他不直接对请求者生成任何响应，而是通过result子元素将指定的返回值呈现给客户端，如返回字符串为success则跳转至loginSuccess.jsp页面.</p>\n<p>5、Action 的 execute()方法的作用和特点</p>\n<p>作用：处理业务逻辑</p>\n<p>特点：无参数；不需要实现或者继承任何接口或者父类；execute方法一定要返回String类型的对象,每一个字符串都可以对应一个跳转的页面。</p>\n<p>6、struts.xml 里各元素及其属性的作用</p>\n<p>(1)package：管理Action、拦截器等核心组件。包含作为包名的name属性、用于继承的extends属性、用于设置命名空间的namespace属性、设置为抽象包的abstract属性。</p>\n<p>(2)action元素：定义与Action操作有关的一系列配置信息。包含作为Action名的name属性、具体处理请求类的class属性、指定调用Action中放发明的method属性、指定使用Action类型转换器converter属性。</p>\n<p>(3)result元素：将Action类返回的字符串转发给对应的是图，实现逻辑视图和物理视图资源的映射。包含制定配置逻辑视图名的name属性、指定结果类型的type属性。</p>\n<p>(4)constant元素：改变Struts2的一些默认行为。包含指定框架功能的name属性、与name配合使用的value属性。</p>\n<p>(5)interceptors元素：定义拦截器集合的元素</p>\n<p>(6)interceptor元素：用于配置拦截器。包含指定拦截器逻辑名称的name属性和指定具体处理拦截类的class属性。</p>\n<p>(7)interceptors-ref元素：在某个action中引用拦截器。</p>\n<p>(8)interceptors-stack元素：定义拦截器栈</p>\n<p>7、Struts2 中标签及其属性的作用和用法：</p>\n<p>(1)form标签：生成表单元素。包含提交Action名字的action属性、命名空间namespace属性、定义GET/POST的method属性等</p>\n<p>(2)textfield标签：用来输入一小段文字。包含定义可输入最大长度值的maxlength属性、定义字段尺寸size属性、用于标示元素的id属性等</p>\n<p>(3)password标签：默认不显示输入内容的textfield。包含确定是否显示内容的showPassword属性、字段最大长度maxlength属性、定义字段尺寸size属性等</p>\n<p>(4)if/elseif/else标签：通过逻辑值控制流程。包含决定标签内容是否显示的test属性、标示元素id的id属性。</p>\n<p>(5)iterator标签：用于遍历集合元素。包含产生IteratorStatus对象实例的status属性、标示元素id的id属性等</p>\n<p>8、配置文件 struts.properties 的作用</p>\n<p>定义了Struts 2框架的大量属性，开发者可以通过改变这些属性来满足应用的需求。其中<code>struts.configuration</code>属性指定加载Struts 2配置文件的配置文件管理器。struts.locale属性指定Web应用的默认<code>Locale。struts.i18n.encoding</code>指定Web应用的默认编码集。</p>\n<h2 id=\"实验步骤\"><a href=\"#实验步骤\" class=\"headerlink\" title=\"实验步骤\"></a>实验步骤</h2><h3 id=\"基础实验\"><a href=\"#基础实验\" class=\"headerlink\" title=\"基础实验\"></a>基础实验</h3><p>1、登录 <a href=\"http://struts.apache.org/download.cgi\" target=\"_blank\" rel=\"noopener\">http://struts.apache.org/download.cgi</a> 站点，下载 Struts2 的最新版（Full Distribution）； </p>\n<p>2、新建 Web 工程 struts-prj1； </p>\n<p>3、将 Struts2 中的 8 个核心包增加到 Web 应用中，即复制到“%workspace%<br>struts-prj1\\WebContent\\WEB-INF\\lib”路径下； </p>\n<p>4、在 struts-prj1 中新建 login.jsp 页面，作为用户登录的视图（代码片段如下）， 注意表单（form）中 action 属性的值，注意用户名与密码输入框中 name 属性的值； </p>\n<p>5、在 struts-prj1 中新建 loginSuccess.jsp 和 loginFail.jsp 页面，分别作为登录成功 或登录失败的视图，在页面中显示“登录成功”或“登录失败”；</p>\n<p><img src=\"1.png\" alt=\"\"></p>\n<p>6、在 struts-prj1 中新建 cn.edu.zjut.bean 包，并在其中创建 UserBean.java，用于记录登录用户信息，注意该 JavaBean 中属性名的写法； </p>\n<p><img src=\"2.png\" alt=\"\"></p>\n<p>7、在 struts-prj1 中新建 cn.edu.zjut.service 包，并在其中创建 UserService.java， 用于实现登录逻辑，为简化登录逻辑，将登录成功的条件设置为：用户名和密码相同</p>\n<p><img src=\"3.png\" alt=\"\"></p>\n<p>8、在 struts-prj1 中新建 cn.edu.zjut.action 包，并在其中创建 UserAction.java，调 用登录逻辑，并根据登录结果不同而返回不同的内容，注意该 Action 中的属性名及相应的 getters 和 setters 方法、execute()方法及返回值；  </p>\n<p><img src=\"4.png\" alt=\"\"></p>\n<p>9、在工程 struts-prj1 的 src 目录中创建 struts.xml 文件，用于配置 Action 并设置 页面导航，注意 action 标签中 name 属性和 class 属性的值， 以及 result 子标签的属性； </p>\n<p><img src=\"5.png\" alt=\"\"></p>\n<p>10、编辑 Web 应用的 web.xml 文件，增加 Struts2 核心 Filter 的配置； </p>\n<p><img src=\"6.png\" alt=\"\"></p>\n<p>11、将 struts-prj1 部署在 Tomcat 服务器上； </p>\n<p>12、通过浏览器访问 login.jsp 页面，并记录运行结果；</p>\n<p><img src=\"7.png\" alt=\"\"></p>\n<h3 id=\"提高实验\"><a href=\"#提高实验\" class=\"headerlink\" title=\"提高实验\"></a>提高实验</h3><p>1、为能使用与 Ajax 相关的标签，将 Struts2 中的 <code>struts2-dojo-plugin-2.3.15.1.jar</code> 包增加到工程 struts-prj1 中，即复制到<code>%workspace%struts-prj1\\WebContent\\ WEB-INF\\lib</code>路径下，刷新工程； </p>\n<p><img src=\"8.png\" alt=\"\"></p>\n<p>2、在工程 struts-prj1 中增加用户注册功能，新建 register.jsp 页面作为用户注册的 视图，页面使用 Struts2 的 UI 标签来生成表单元素，包括用户名、密码、确认密码、真实姓名、性别、生日、联系地址、联系电话和电子邮箱 </p>\n<p><img src=\"9.png\" alt=\"\"></p>\n<p>3、在 struts-prj1 中新建 <code>regFail.jsp</code> 页面，作为注册失败的视图，在页面中显示“注册失败”； </p>\n<p>4、在 struts-prj1 中新建 <code>regSuccess.jsp</code> 页面，作为注册成功的视图，使用 Struts2 的数据标签和控制标签来生成注册成功的信息，并将登录用户信息保存在会话范围内 </p>\n<p>5、修改 <code>UserBean.java</code>，增加属性用于记录注册用户信息 </p>\n<p><img src=\"10.png\" alt=\"\"></p>\n<p>6、修改 <code>UserService.java</code>，增加用户注册逻辑，为简化注册逻辑，将注册成功的条件设置为：用户名、密码和确认密码相同，而且不为空字串； </p>\n<p><img src=\"11.png\" alt=\"\"></p>\n<p>7、修改 <code>UserAction.java</code> 中的 execute()方法，参照基础实验部分写入代码，用于调用注册逻辑，并根据注册成功与否而返回不同的内容； </p>\n<p><img src=\"12.png\" alt=\"\"></p>\n<p>8、修改 <code>struts.xml</code> 文件，对用户注册进行配置并设置页面导航； </p>\n<p><img src=\"13.png\" alt=\"\"></p>\n<p>9、将 struts-prj1 重新布署在 Tomcat 服务器上，通过浏览器访问 <code>register.jsp</code> 页面， 并记录运行结果； </p>\n<p><img src=\"14.png\" alt=\"\"></p>\n<h3 id=\"拓展实验\"><a href=\"#拓展实验\" class=\"headerlink\" title=\"拓展实验\"></a>拓展实验</h3><p>1、在工程 struts-prj1 的 src 目录下新建一个 <code>cn.edu.zjut.local</code> 包，把所有的资源文件放置其中，如：<code>message_zh_CN.properties</code>、<code>message_en_US.properties</code> 等； </p>\n<p><img src=\"15.png\" alt=\"\"></p>\n<p>2、将工程 struts-prj1 中用户登录模块的三个 JSP 页面进行国际化处理，选择需要进行国际化的内容，以键值对的形式写入资源文件中 </p>\n<p>3、使用 JDK 中的 native2ASCII 工具，将 <code>message_zh_CN.properties</code> 重新编码，将中文字符都转化为 unicode 码，从而避免乱码问题； </p>\n<p>4、在工程 struts-prj1 的 src 目录中创建 <code>struts.properties</code> 文件，通过它加载资源文件,或者在JSP页面中临时加载资源文件  </p>\n<p><img src=\"16.png\" alt=\"\"></p>\n<p>5、修改 <code>login.jsp</code>、<code>loginSuccess.jsp</code> 和 <code>loginFail.jsp</code> 页面，通过 Struts2 标签实现国际化； </p>\n<p>6、将 struts-prj1 重新布署在 Tomcat 服务器上； </p>\n<p>7、设置浏览器的首语言选项（如下图所示），通过浏览器访问 <code>login.jsp</code> 页面， 观察并记录运行结果；</p>\n<p><img src=\"17.png\" alt=\"\"></p>\n<p>8、尝试修改用户注册模块，实现国际化，并记录运行结果。 </p>\n<p><img src=\"18.png\" alt=\"\"></p>\n<p><img src=\"19.png\" alt=\"\"></p>\n<blockquote>\n<p>注册中文页面</p>\n</blockquote>\n<p><img src=\"20.png\" alt=\"\"></p>\n<blockquote>\n<p>注册英文页面</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Struts-2-应用实验\"><a href=\"#Struts-2-应用实验\" class=\"headerlink\" title=\"Struts 2 应用实验\"></a>Struts 2 应用实验</h1><h2 id=\"知识梳理\"><a href=\"#知识梳理\" class=\"headerlink\" title=\"知识梳理\"></a>知识梳理</h2><p>1、Struts2 是从 WebWork 框架上发展起来的 MVC 框架； </p>\n<p>2、FilterDispatcher 是 Struts2 中的核心控制器，客户端对服务器端的请求将被 FilterDispatcher 过滤；若请求需要调用某个 Action，则框架将根据配置文件<code>struts.xml</code>，找到需要调用的 Action 类； </p>\n<p>3、Action 类是一个符合一定命名规范的 JavaSE 类，作为业务控制器使用； Action<br>中的 execute()方法用于调用 Model 层的业务逻辑类，并根据返回结果决定页面导航； </p>\n<p>4、若 Action 类中需要使用表单提交的请求参数，那么必须在 Action 类中声明与<br>表单域的名字对应的变量，并为变量提供 getters/setters 方法； </p>\n<p>5、Action 类需要在 <code>struts.xml</code> 中进行配置才能使用； </p>\n<p>6、编译运行基于 Struts2 框架的 Web 工程，需要导入 struts2 的 8 个核心 jar 包： </p>\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>struts2-core-2.3.15.1.jar</td>\n<td>Struts 2 框架的核心类库</td>\n</tr>\n<tr>\n<td>xwork-core-2.3.15.1.jar</td>\n<td>XWork 类库，Struts 2 的构建基础</td>\n</tr>\n<tr>\n<td>Ognl-3.0.6.jar</td>\n<td>Struts 2 使用的一种表达式语言类库</td>\n</tr>\n<tr>\n<td>freemarker-2.3.19.jar</td>\n<td>Struts 2 的标签模板使用类库</td>\n</tr>\n<tr>\n<td>javassist-3.11.0.GA.jar</td>\n<td>代码生成工具包</td>\n</tr>\n<tr>\n<td>commons-lang3-3.1.jar</td>\n<td>Apache 语言包，是 java.lang 包的扩展</td>\n</tr>\n<tr>\n<td>commons-io-2.0.1.jar</td>\n<td>Apache IO 包</td>\n</tr>\n<tr>\n<td>commons-fileupload-1.3.jar</td>\n<td>Struts 2 文件上传依赖包</td>\n</tr>\n</tbody></table>\n<p>7、使用 Struts2 标签的形式来表达页面逻辑，可以尽量避免在视图中使用 Java 代码，让逻辑与显示分离，提高视图的可维护性； </p>\n<p>8、Struts2 标签库的主要 tld 文件为 <code>struts-tags.tld</code>， 在 <code>struts2-core-2.3.15.1.jar</code> 包中， 另一个与 Ajax 相关的标签库 tld 文件为 <code>struts-dojo-tags.tld</code>，在 <code>struts2-dojo -plugin-2.3.15.1.jar</code> 包中； </p>\n<p>9、Struts2 标签的使用步骤和使用 JSTL 相同，只需在 JSP 页面中使用 taglib 指令 引入标签库中 tld 文件的 uri， 并指定前缀即可，例如： <code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>； </p>\n<p>10、根据 Struts2 标签的主要作用，可以将其分为：用于生成页面元素的 UI 标签、 用于实现流程控制的控制类标签、用于控制数据的数据标签和用于支持Ajax的标签。</p>\n<p>11、通过将不同语言版本的字符保存在属性文件中，Struts2 的国际化机制能够在不需要修改程序主体的前提下，实现不同语言版本的应用； </p>\n<p>12、在 Web 应用中选择需要进行国际化的内容，不在页面中直接输出该信息，而是通过 Struts2 标签输出一个键值，该键值在不同语言环境下对应不同的字符串；如：<code>&lt;s:textfield name=&quot;loginUser.account&quot; lable=&quot;请输入用户名&quot;/&gt;</code>代码中的“请输入用户名”是需要国际化的内容,将其以键值代替为<code>&lt;s:textfield name=&quot;loginUser.account&quot; key=&quot;login.account.lable&quot;/&gt;</code> </p>\n<p>13、需要进行国际化的内容以键值对（key=value） 的形式写入 Struts2 的国际化资源文件中，如<code>login.account.lable=请输入用户名”；</code>该资源文件名可以自定义，但是后缀必须是 properties；资源文件应放在 Web 应用的类加载路径下； 每一个语言版本需要创建一个资源文件； </p>\n<p>14、通过 Struts2 的配置文件 <code>struts.properties 来配置资源文件的基础名，若资源文 件的基础名为 message，则</code>message_zh_CN.properties<code>是对应的中文资源文件，</code>message_en_US.properties` 是对应的美国英语资源文件； </p>\n<p>15、浏览器将根据其默认的语言版本，自动调用相应语言的资源文件，从而在页面中展示不同的语言效果。</p>\n<h2 id=\"实验总结\"><a href=\"#实验总结\" class=\"headerlink\" title=\"实验总结\"></a>实验总结</h2><p>1、实验中各个文件的作用：</p>\n<p>(1)jsp页面：负责展示视图</p>\n<p>(2)Action类：负责处理业务逻辑</p>\n<p>(3)Service类：用于实现登录逻辑</p>\n<p>(4)JavaBean：用于定义用户信息</p>\n<p>(5)Filter：起中央控制器作用的过滤器</p>\n<p>(6)struts.xml：核心配置文件</p>\n<p>2、Struts2 应用中从请求到响应的完整流程</p>\n<p>客户端首先向Action发送一个请求Request,Container通过web.xml映射请求，并获得Controller的名字；Container调用控制StrutsPrepareAndExecuteFilter；Controller通过ActionMapper获得Action的信息，调用ActionProxy；ActionProxy读取struts.xml文件获取action和interceptor stack的信息，把request请求传递给ActionInvocation；ActionInvocation依次调用action和interceptor；根据action的配置信息，产生result，Result信息返回给ActionInvocation，产生一个HttpServletResponse响应，产生的响应行为发送给客户端。</p>\n<p>3、MVC框架体现：</p>\n<p>Model：JavaBean、Action类</p>\n<p>View：JSP页面</p>\n<p>Controller：FilterDispatcher</p>\n<p>4、表单参数与 Action 属性的赋值关系</p>\n<p>表单元素的action属性值对应了action的name属性值，Action只是一个逻辑控制器，他不直接对请求者生成任何响应，而是通过result子元素将指定的返回值呈现给客户端，如返回字符串为success则跳转至loginSuccess.jsp页面.</p>\n<p>5、Action 的 execute()方法的作用和特点</p>\n<p>作用：处理业务逻辑</p>\n<p>特点：无参数；不需要实现或者继承任何接口或者父类；execute方法一定要返回String类型的对象,每一个字符串都可以对应一个跳转的页面。</p>\n<p>6、struts.xml 里各元素及其属性的作用</p>\n<p>(1)package：管理Action、拦截器等核心组件。包含作为包名的name属性、用于继承的extends属性、用于设置命名空间的namespace属性、设置为抽象包的abstract属性。</p>\n<p>(2)action元素：定义与Action操作有关的一系列配置信息。包含作为Action名的name属性、具体处理请求类的class属性、指定调用Action中放发明的method属性、指定使用Action类型转换器converter属性。</p>\n<p>(3)result元素：将Action类返回的字符串转发给对应的是图，实现逻辑视图和物理视图资源的映射。包含制定配置逻辑视图名的name属性、指定结果类型的type属性。</p>\n<p>(4)constant元素：改变Struts2的一些默认行为。包含指定框架功能的name属性、与name配合使用的value属性。</p>\n<p>(5)interceptors元素：定义拦截器集合的元素</p>\n<p>(6)interceptor元素：用于配置拦截器。包含指定拦截器逻辑名称的name属性和指定具体处理拦截类的class属性。</p>\n<p>(7)interceptors-ref元素：在某个action中引用拦截器。</p>\n<p>(8)interceptors-stack元素：定义拦截器栈</p>\n<p>7、Struts2 中标签及其属性的作用和用法：</p>\n<p>(1)form标签：生成表单元素。包含提交Action名字的action属性、命名空间namespace属性、定义GET/POST的method属性等</p>\n<p>(2)textfield标签：用来输入一小段文字。包含定义可输入最大长度值的maxlength属性、定义字段尺寸size属性、用于标示元素的id属性等</p>\n<p>(3)password标签：默认不显示输入内容的textfield。包含确定是否显示内容的showPassword属性、字段最大长度maxlength属性、定义字段尺寸size属性等</p>\n<p>(4)if/elseif/else标签：通过逻辑值控制流程。包含决定标签内容是否显示的test属性、标示元素id的id属性。</p>\n<p>(5)iterator标签：用于遍历集合元素。包含产生IteratorStatus对象实例的status属性、标示元素id的id属性等</p>\n<p>8、配置文件 struts.properties 的作用</p>\n<p>定义了Struts 2框架的大量属性，开发者可以通过改变这些属性来满足应用的需求。其中<code>struts.configuration</code>属性指定加载Struts 2配置文件的配置文件管理器。struts.locale属性指定Web应用的默认<code>Locale。struts.i18n.encoding</code>指定Web应用的默认编码集。</p>\n<h2 id=\"实验步骤\"><a href=\"#实验步骤\" class=\"headerlink\" title=\"实验步骤\"></a>实验步骤</h2><h3 id=\"基础实验\"><a href=\"#基础实验\" class=\"headerlink\" title=\"基础实验\"></a>基础实验</h3><p>1、登录 <a href=\"http://struts.apache.org/download.cgi\" target=\"_blank\" rel=\"noopener\">http://struts.apache.org/download.cgi</a> 站点，下载 Struts2 的最新版（Full Distribution）； </p>\n<p>2、新建 Web 工程 struts-prj1； </p>\n<p>3、将 Struts2 中的 8 个核心包增加到 Web 应用中，即复制到“%workspace%<br>struts-prj1\\WebContent\\WEB-INF\\lib”路径下； </p>\n<p>4、在 struts-prj1 中新建 login.jsp 页面，作为用户登录的视图（代码片段如下）， 注意表单（form）中 action 属性的值，注意用户名与密码输入框中 name 属性的值； </p>\n<p>5、在 struts-prj1 中新建 loginSuccess.jsp 和 loginFail.jsp 页面，分别作为登录成功 或登录失败的视图，在页面中显示“登录成功”或“登录失败”；</p>\n<p><img src=\"1.png\" alt=\"\"></p>\n<p>6、在 struts-prj1 中新建 cn.edu.zjut.bean 包，并在其中创建 UserBean.java，用于记录登录用户信息，注意该 JavaBean 中属性名的写法； </p>\n<p><img src=\"2.png\" alt=\"\"></p>\n<p>7、在 struts-prj1 中新建 cn.edu.zjut.service 包，并在其中创建 UserService.java， 用于实现登录逻辑，为简化登录逻辑，将登录成功的条件设置为：用户名和密码相同</p>\n<p><img src=\"3.png\" alt=\"\"></p>\n<p>8、在 struts-prj1 中新建 cn.edu.zjut.action 包，并在其中创建 UserAction.java，调 用登录逻辑，并根据登录结果不同而返回不同的内容，注意该 Action 中的属性名及相应的 getters 和 setters 方法、execute()方法及返回值；  </p>\n<p><img src=\"4.png\" alt=\"\"></p>\n<p>9、在工程 struts-prj1 的 src 目录中创建 struts.xml 文件，用于配置 Action 并设置 页面导航，注意 action 标签中 name 属性和 class 属性的值， 以及 result 子标签的属性； </p>\n<p><img src=\"5.png\" alt=\"\"></p>\n<p>10、编辑 Web 应用的 web.xml 文件，增加 Struts2 核心 Filter 的配置； </p>\n<p><img src=\"6.png\" alt=\"\"></p>\n<p>11、将 struts-prj1 部署在 Tomcat 服务器上； </p>\n<p>12、通过浏览器访问 login.jsp 页面，并记录运行结果；</p>\n<p><img src=\"7.png\" alt=\"\"></p>\n<h3 id=\"提高实验\"><a href=\"#提高实验\" class=\"headerlink\" title=\"提高实验\"></a>提高实验</h3><p>1、为能使用与 Ajax 相关的标签，将 Struts2 中的 <code>struts2-dojo-plugin-2.3.15.1.jar</code> 包增加到工程 struts-prj1 中，即复制到<code>%workspace%struts-prj1\\WebContent\\ WEB-INF\\lib</code>路径下，刷新工程； </p>\n<p><img src=\"8.png\" alt=\"\"></p>\n<p>2、在工程 struts-prj1 中增加用户注册功能，新建 register.jsp 页面作为用户注册的 视图，页面使用 Struts2 的 UI 标签来生成表单元素，包括用户名、密码、确认密码、真实姓名、性别、生日、联系地址、联系电话和电子邮箱 </p>\n<p><img src=\"9.png\" alt=\"\"></p>\n<p>3、在 struts-prj1 中新建 <code>regFail.jsp</code> 页面，作为注册失败的视图，在页面中显示“注册失败”； </p>\n<p>4、在 struts-prj1 中新建 <code>regSuccess.jsp</code> 页面，作为注册成功的视图，使用 Struts2 的数据标签和控制标签来生成注册成功的信息，并将登录用户信息保存在会话范围内 </p>\n<p>5、修改 <code>UserBean.java</code>，增加属性用于记录注册用户信息 </p>\n<p><img src=\"10.png\" alt=\"\"></p>\n<p>6、修改 <code>UserService.java</code>，增加用户注册逻辑，为简化注册逻辑，将注册成功的条件设置为：用户名、密码和确认密码相同，而且不为空字串； </p>\n<p><img src=\"11.png\" alt=\"\"></p>\n<p>7、修改 <code>UserAction.java</code> 中的 execute()方法，参照基础实验部分写入代码，用于调用注册逻辑，并根据注册成功与否而返回不同的内容； </p>\n<p><img src=\"12.png\" alt=\"\"></p>\n<p>8、修改 <code>struts.xml</code> 文件，对用户注册进行配置并设置页面导航； </p>\n<p><img src=\"13.png\" alt=\"\"></p>\n<p>9、将 struts-prj1 重新布署在 Tomcat 服务器上，通过浏览器访问 <code>register.jsp</code> 页面， 并记录运行结果； </p>\n<p><img src=\"14.png\" alt=\"\"></p>\n<h3 id=\"拓展实验\"><a href=\"#拓展实验\" class=\"headerlink\" title=\"拓展实验\"></a>拓展实验</h3><p>1、在工程 struts-prj1 的 src 目录下新建一个 <code>cn.edu.zjut.local</code> 包，把所有的资源文件放置其中，如：<code>message_zh_CN.properties</code>、<code>message_en_US.properties</code> 等； </p>\n<p><img src=\"15.png\" alt=\"\"></p>\n<p>2、将工程 struts-prj1 中用户登录模块的三个 JSP 页面进行国际化处理，选择需要进行国际化的内容，以键值对的形式写入资源文件中 </p>\n<p>3、使用 JDK 中的 native2ASCII 工具，将 <code>message_zh_CN.properties</code> 重新编码，将中文字符都转化为 unicode 码，从而避免乱码问题； </p>\n<p>4、在工程 struts-prj1 的 src 目录中创建 <code>struts.properties</code> 文件，通过它加载资源文件,或者在JSP页面中临时加载资源文件  </p>\n<p><img src=\"16.png\" alt=\"\"></p>\n<p>5、修改 <code>login.jsp</code>、<code>loginSuccess.jsp</code> 和 <code>loginFail.jsp</code> 页面，通过 Struts2 标签实现国际化； </p>\n<p>6、将 struts-prj1 重新布署在 Tomcat 服务器上； </p>\n<p>7、设置浏览器的首语言选项（如下图所示），通过浏览器访问 <code>login.jsp</code> 页面， 观察并记录运行结果；</p>\n<p><img src=\"17.png\" alt=\"\"></p>\n<p>8、尝试修改用户注册模块，实现国际化，并记录运行结果。 </p>\n<p><img src=\"18.png\" alt=\"\"></p>\n<p><img src=\"19.png\" alt=\"\"></p>\n<blockquote>\n<p>注册中文页面</p>\n</blockquote>\n<p><img src=\"20.png\" alt=\"\"></p>\n<blockquote>\n<p>注册英文页面</p>\n</blockquote>\n"},{"title":"在Mac上配置OpenCV与Xcode开发环境","date":"2020-02-26T08:20:20.000Z","_content":"\n下学期选了数字图像处理课程，接下来的`OpenCV`学习过程我会从零开始记录，第零课是开发环境的配置。\n\n由于笔者使用的是Mac，相较于`C++`，笔者的`Python`功底不是很扎实，所以使用Xcode与`C++`实践`OpenCV`项目。在网络上搜寻了许多关于`OpenCV`与 Xcode 开发环境的配置资料均不是很完善,于是决定自己写一篇，希望对 Mac 用户有所帮助。\n\n## 准备工作\n\n### 1.安装 Xcode\n\n{% asset_img Xcode.png %}\n\n从 App Store 安装 Xcode。目前 Xcode（11.3）的安装后大小约为19 GB，因此可能需要近半小时的下载与安装时间，具体取决于互联网速度与设备运行速度。\n\n### 2.安装 Homebrew\n\n[Homebrew](https://brew.sh/) 是 Mac 上必备的包管理工具，诸多优点不复赘述。\n如果你还没有安装过 [Homebrew](https://brew.sh/) ，只需打开任意终端并粘贴以下代码并回车即可完成安装。\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n### 3.安装 OpenCV\n完成 Homebrew 的安装后， 即可使用`brew`命令完成`OpenCV`的安装部署。\n\n```\nbrew install opencv\n```\n\n### 4.安装 pkg-config\n\n`pkg-config`是在编译应用程序和库时使用的辅助工具，可以帮助我们找到找到正确的OpenCV 链接器符号 (Linker Flags) ，在后续的步骤中会用到。\n你需要使用如下命令完成对`pkg-config`的安装。\n\n```\nbrew install pkg-config\n```\n\n### 5.使用 pkg-config\n\n查看您的`opencv.pc`文件所在位置，一般`opencv.pc`文件所在位置为\n\n```\n/usr/local/Cellar/opencv/<版本号>/lib/pkgconfig/opencv.pc\n```\n\n如我安装的最新版本`OpenCV`的相关`opencv.pc`文件在\n```\n/usr/local/Cellar/opencv/4.2.0_1/lib/pkgconfig/opencv.pc\n```\n\n使用下面的命令查看`OpenCV`的链接器符号 (Linker Flags) ，请务必修改其中的版本信息。\n```\npkg-config --cflags --libs /usr/local/Cellar/opencv/<版本号>/lib/pkgconfig/opencv.pc\n```\n\n你会得到类似于如下的输出结果，我们需要参照输出结果在 Xcode 中进行配置。\n\n```\n-I/usr/local/Cellar/opencv/4.2.0_1/include/opencv4/opencv -I/usr/local/Cellar/opencv/4.2.0_1/include/opencv4 -L/usr/local/Cellar/opencv/4.2.0_1/lib -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core\n```\n\n## 配置 Xcode\n\n### 6.创建 Xcode 项目\n\n在正式运行 OpenCV C++代码之前，首先需要在 Xcode 中创建一个空的`C++`项目。具体创建过程不在这里叙述。\n\n{% asset_img Project.png %}\n\n需要注意的是项目的 *Language* 应选择为 C++。\n\n### 7.设置 Header Search Paths\n\n{% asset_img Headers.png %}\n\n在 Xcode 中设置 *Header Search Paths*，先单击 Xco​​de 项目，然后点击 *Build Settings*，然后搜索“Header Search Paths”。将 *Header Search Paths* 路径设置为刚才得到的输出结果“-I”之后的路径，如我需要对如下路径进行添加。\n\n```\n/usr/local/Cellar/opencv/4.2.0_1/include/opencv4/opencv \n/usr/local/Cellar/opencv/4.2.0_1/include/opencv4\n```\n\n### 8.设置 Library Search Paths\n\n{% asset_img Library.png %}\n\n类似地，在 *Build Settings* 中搜索“Library Search Paths”，将 *Library Search Paths* 路径设置为刚才得到的输出结果“-L”之后的路径，如我需要对如下路径进行添加。\n\n```\n/usr/local/Cellar/opencv/4.2.0_1/lib \n```\n\n### 9.设置 Other Linker Flags\n\n{% asset_img linker.png %}\n\n同样，在 *Build Settings* 中搜索“Other Linker Flags”，将 *Other Linker Flags* 路径设置为刚才得到的输出结果中的其他内容，即 Linker Flags，我需要对如下 Linker Flags 进行添加。（无需手动输入，只需单击输入框粘贴相关内容）\n\n```\n -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core\n```\n\n### 9.测试运行\n配置到这一步 Xcode 相关内容已经结束。可以尝试运行简单的`OpenCV`程序判断是否能够正常运行，以下给出简单的示例程序，功能仅为打开图片与退出。\n\n你需要按照后文中“使用相对路径”方法配置相对路径并添加图片`test.jpeg`到项目文件夹。\n\n```\n#include<opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main()\n{\n    Mat image= imread(\"test.jpeg\");// 读取图片\n    if(!image.data)             // 检查非法输入\n      {\n          cout <<  \"无法读取照片\" << endl ;\n          return -1;\n      }\n\n    namedWindow(\"Display window\",WINDOW_AUTOSIZE);   // 创建图片显示自动调整大小的窗口\n    imshow(\"img\",image);    // 在窗口显示图片\n    \n    waitKey(0); // 按键等待，需要在窗口任意输入字符退出，0代表永久等待\n    return 0;\n}\n```\n\n若运行过程出现问题请检查上述步骤是否正确，后文中给出了部分问题的解决方案，可能对您有帮助。\n\n## 其他设置\n\n### 使用相对路径\n\n{% asset_img dir.png %}\n\nXcode使用图像或资源的绝对路径。为了设置相对路径需要设置*Working Directory*。依次点击 `菜单栏Product > Scheme > Edit Scheme ` 中转到*Run*中的*check Use Custom Working Directory*选项，然后自定义项目目录。\n\n## 可能出现的错误\n\n### 出现 “Not a Doxygen trailing comment” 错误\n\n{% asset_img documention.png %}\n\n在 *Build Settings* 中搜索 \"Documentation Comments\"，将 *Documentation Comments* 设置为\"No\"即可解决该问题。`Doxygen` 只是一种格式可以选择跳过检查。\n\n### 出现 \"dyld: Library not loaded...\" 错误\n\n{% asset_img signature.png %}\n\n在 *Signing & Capabilities* 中打开*Disable Library Validation*，即可解决该问题。问题的原因是`brew`安装的`OpenCV`存在签名问题，暂且可以先认可没有被签名的 Library。\n\n## 参考\n[Setting up OpenCV and C++ development environment in Xcode for Computer Vision projects](https://medium.com/@jaskaranvirdi/setting-up-opencv-and-c-development-environment-in-xcode-b6027728003)\n\n[Xcode in macox 10.15 beta library code signature problem](https://github.com/opencv/opencv/issues/15645#issuecomment-554495051)\n\n[Not a Doxygen trailing comment](https://stackoverflow.com/questions/39929199/not-a-doxygen-trailing-comment)\n\n[Load and Display an Image](https://docs.opencv.org/2.4/doc/tutorials/introduction/display_image/display_image.html)\n","source":"_posts/Setting_up_OpenCV_environment_in_Xcode.md","raw":"---\ntitle: 在Mac上配置OpenCV与Xcode开发环境\ndate: 2020-02-26 16:20:20\ntags: tech\n---\n\n下学期选了数字图像处理课程，接下来的`OpenCV`学习过程我会从零开始记录，第零课是开发环境的配置。\n\n由于笔者使用的是Mac，相较于`C++`，笔者的`Python`功底不是很扎实，所以使用Xcode与`C++`实践`OpenCV`项目。在网络上搜寻了许多关于`OpenCV`与 Xcode 开发环境的配置资料均不是很完善,于是决定自己写一篇，希望对 Mac 用户有所帮助。\n\n## 准备工作\n\n### 1.安装 Xcode\n\n{% asset_img Xcode.png %}\n\n从 App Store 安装 Xcode。目前 Xcode（11.3）的安装后大小约为19 GB，因此可能需要近半小时的下载与安装时间，具体取决于互联网速度与设备运行速度。\n\n### 2.安装 Homebrew\n\n[Homebrew](https://brew.sh/) 是 Mac 上必备的包管理工具，诸多优点不复赘述。\n如果你还没有安装过 [Homebrew](https://brew.sh/) ，只需打开任意终端并粘贴以下代码并回车即可完成安装。\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n### 3.安装 OpenCV\n完成 Homebrew 的安装后， 即可使用`brew`命令完成`OpenCV`的安装部署。\n\n```\nbrew install opencv\n```\n\n### 4.安装 pkg-config\n\n`pkg-config`是在编译应用程序和库时使用的辅助工具，可以帮助我们找到找到正确的OpenCV 链接器符号 (Linker Flags) ，在后续的步骤中会用到。\n你需要使用如下命令完成对`pkg-config`的安装。\n\n```\nbrew install pkg-config\n```\n\n### 5.使用 pkg-config\n\n查看您的`opencv.pc`文件所在位置，一般`opencv.pc`文件所在位置为\n\n```\n/usr/local/Cellar/opencv/<版本号>/lib/pkgconfig/opencv.pc\n```\n\n如我安装的最新版本`OpenCV`的相关`opencv.pc`文件在\n```\n/usr/local/Cellar/opencv/4.2.0_1/lib/pkgconfig/opencv.pc\n```\n\n使用下面的命令查看`OpenCV`的链接器符号 (Linker Flags) ，请务必修改其中的版本信息。\n```\npkg-config --cflags --libs /usr/local/Cellar/opencv/<版本号>/lib/pkgconfig/opencv.pc\n```\n\n你会得到类似于如下的输出结果，我们需要参照输出结果在 Xcode 中进行配置。\n\n```\n-I/usr/local/Cellar/opencv/4.2.0_1/include/opencv4/opencv -I/usr/local/Cellar/opencv/4.2.0_1/include/opencv4 -L/usr/local/Cellar/opencv/4.2.0_1/lib -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core\n```\n\n## 配置 Xcode\n\n### 6.创建 Xcode 项目\n\n在正式运行 OpenCV C++代码之前，首先需要在 Xcode 中创建一个空的`C++`项目。具体创建过程不在这里叙述。\n\n{% asset_img Project.png %}\n\n需要注意的是项目的 *Language* 应选择为 C++。\n\n### 7.设置 Header Search Paths\n\n{% asset_img Headers.png %}\n\n在 Xcode 中设置 *Header Search Paths*，先单击 Xco​​de 项目，然后点击 *Build Settings*，然后搜索“Header Search Paths”。将 *Header Search Paths* 路径设置为刚才得到的输出结果“-I”之后的路径，如我需要对如下路径进行添加。\n\n```\n/usr/local/Cellar/opencv/4.2.0_1/include/opencv4/opencv \n/usr/local/Cellar/opencv/4.2.0_1/include/opencv4\n```\n\n### 8.设置 Library Search Paths\n\n{% asset_img Library.png %}\n\n类似地，在 *Build Settings* 中搜索“Library Search Paths”，将 *Library Search Paths* 路径设置为刚才得到的输出结果“-L”之后的路径，如我需要对如下路径进行添加。\n\n```\n/usr/local/Cellar/opencv/4.2.0_1/lib \n```\n\n### 9.设置 Other Linker Flags\n\n{% asset_img linker.png %}\n\n同样，在 *Build Settings* 中搜索“Other Linker Flags”，将 *Other Linker Flags* 路径设置为刚才得到的输出结果中的其他内容，即 Linker Flags，我需要对如下 Linker Flags 进行添加。（无需手动输入，只需单击输入框粘贴相关内容）\n\n```\n -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core\n```\n\n### 9.测试运行\n配置到这一步 Xcode 相关内容已经结束。可以尝试运行简单的`OpenCV`程序判断是否能够正常运行，以下给出简单的示例程序，功能仅为打开图片与退出。\n\n你需要按照后文中“使用相对路径”方法配置相对路径并添加图片`test.jpeg`到项目文件夹。\n\n```\n#include<opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main()\n{\n    Mat image= imread(\"test.jpeg\");// 读取图片\n    if(!image.data)             // 检查非法输入\n      {\n          cout <<  \"无法读取照片\" << endl ;\n          return -1;\n      }\n\n    namedWindow(\"Display window\",WINDOW_AUTOSIZE);   // 创建图片显示自动调整大小的窗口\n    imshow(\"img\",image);    // 在窗口显示图片\n    \n    waitKey(0); // 按键等待，需要在窗口任意输入字符退出，0代表永久等待\n    return 0;\n}\n```\n\n若运行过程出现问题请检查上述步骤是否正确，后文中给出了部分问题的解决方案，可能对您有帮助。\n\n## 其他设置\n\n### 使用相对路径\n\n{% asset_img dir.png %}\n\nXcode使用图像或资源的绝对路径。为了设置相对路径需要设置*Working Directory*。依次点击 `菜单栏Product > Scheme > Edit Scheme ` 中转到*Run*中的*check Use Custom Working Directory*选项，然后自定义项目目录。\n\n## 可能出现的错误\n\n### 出现 “Not a Doxygen trailing comment” 错误\n\n{% asset_img documention.png %}\n\n在 *Build Settings* 中搜索 \"Documentation Comments\"，将 *Documentation Comments* 设置为\"No\"即可解决该问题。`Doxygen` 只是一种格式可以选择跳过检查。\n\n### 出现 \"dyld: Library not loaded...\" 错误\n\n{% asset_img signature.png %}\n\n在 *Signing & Capabilities* 中打开*Disable Library Validation*，即可解决该问题。问题的原因是`brew`安装的`OpenCV`存在签名问题，暂且可以先认可没有被签名的 Library。\n\n## 参考\n[Setting up OpenCV and C++ development environment in Xcode for Computer Vision projects](https://medium.com/@jaskaranvirdi/setting-up-opencv-and-c-development-environment-in-xcode-b6027728003)\n\n[Xcode in macox 10.15 beta library code signature problem](https://github.com/opencv/opencv/issues/15645#issuecomment-554495051)\n\n[Not a Doxygen trailing comment](https://stackoverflow.com/questions/39929199/not-a-doxygen-trailing-comment)\n\n[Load and Display an Image](https://docs.opencv.org/2.4/doc/tutorials/introduction/display_image/display_image.html)\n","slug":"Setting_up_OpenCV_environment_in_Xcode","published":1,"updated":"2020-02-26T08:44:32.121Z","_id":"ck735cgs200057c6b1plke8p6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>下学期选了数字图像处理课程，接下来的<code>OpenCV</code>学习过程我会从零开始记录，第零课是开发环境的配置。</p>\n<p>由于笔者使用的是Mac，相较于<code>C++</code>，笔者的<code>Python</code>功底不是很扎实，所以使用Xcode与<code>C++</code>实践<code>OpenCV</code>项目。在网络上搜寻了许多关于<code>OpenCV</code>与 Xcode 开发环境的配置资料均不是很完善,于是决定自己写一篇，希望对 Mac 用户有所帮助。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"1-安装-Xcode\"><a href=\"#1-安装-Xcode\" class=\"headerlink\" title=\"1.安装 Xcode\"></a>1.安装 Xcode</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Xcode.png\" class=\"\">\n\n<p>从 App Store 安装 Xcode。目前 Xcode（11.3）的安装后大小约为19 GB，因此可能需要近半小时的下载与安装时间，具体取决于互联网速度与设备运行速度。</p>\n<h3 id=\"2-安装-Homebrew\"><a href=\"#2-安装-Homebrew\" class=\"headerlink\" title=\"2.安装 Homebrew\"></a>2.安装 Homebrew</h3><p><a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a> 是 Mac 上必备的包管理工具，诸多优点不复赘述。<br>如果你还没有安装过 <a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a> ，只需打开任意终端并粘贴以下代码并回车即可完成安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-安装-OpenCV\"><a href=\"#3-安装-OpenCV\" class=\"headerlink\" title=\"3.安装 OpenCV\"></a>3.安装 OpenCV</h3><p>完成 Homebrew 的安装后， 即可使用<code>brew</code>命令完成<code>OpenCV</code>的安装部署。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install opencv</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-安装-pkg-config\"><a href=\"#4-安装-pkg-config\" class=\"headerlink\" title=\"4.安装 pkg-config\"></a>4.安装 pkg-config</h3><p><code>pkg-config</code>是在编译应用程序和库时使用的辅助工具，可以帮助我们找到找到正确的OpenCV 链接器符号 (Linker Flags) ，在后续的步骤中会用到。<br>你需要使用如下命令完成对<code>pkg-config</code>的安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pkg-config</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-使用-pkg-config\"><a href=\"#5-使用-pkg-config\" class=\"headerlink\" title=\"5.使用 pkg-config\"></a>5.使用 pkg-config</h3><p>查看您的<code>opencv.pc</code>文件所在位置，一般<code>opencv.pc</code>文件所在位置为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;&lt;版本号&gt;&#x2F;lib&#x2F;pkgconfig&#x2F;opencv.pc</span><br></pre></td></tr></table></figure>\n\n<p>如我安装的最新版本<code>OpenCV</code>的相关<code>opencv.pc</code>文件在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;lib&#x2F;pkgconfig&#x2F;opencv.pc</span><br></pre></td></tr></table></figure>\n\n<p>使用下面的命令查看<code>OpenCV</code>的链接器符号 (Linker Flags) ，请务必修改其中的版本信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg-config --cflags --libs &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;&lt;版本号&gt;&#x2F;lib&#x2F;pkgconfig&#x2F;opencv.pc</span><br></pre></td></tr></table></figure>\n\n<p>你会得到类似于如下的输出结果，我们需要参照输出结果在 Xcode 中进行配置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-I&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4&#x2F;opencv -I&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4 -L&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;lib -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-Xcode\"><a href=\"#配置-Xcode\" class=\"headerlink\" title=\"配置 Xcode\"></a>配置 Xcode</h2><h3 id=\"6-创建-Xcode-项目\"><a href=\"#6-创建-Xcode-项目\" class=\"headerlink\" title=\"6.创建 Xcode 项目\"></a>6.创建 Xcode 项目</h3><p>在正式运行 OpenCV C++代码之前，首先需要在 Xcode 中创建一个空的<code>C++</code>项目。具体创建过程不在这里叙述。</p>\n<img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Project.png\" class=\"\">\n\n<p>需要注意的是项目的 <em>Language</em> 应选择为 C++。</p>\n<h3 id=\"7-设置-Header-Search-Paths\"><a href=\"#7-设置-Header-Search-Paths\" class=\"headerlink\" title=\"7.设置 Header Search Paths\"></a>7.设置 Header Search Paths</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Headers.png\" class=\"\">\n\n<p>在 Xcode 中设置 <em>Header Search Paths<em>，先单击 Xco​​de 项目，然后点击 *Build Settings</em>，然后搜索“Header Search Paths”。将 *Header Search Paths</em> 路径设置为刚才得到的输出结果“-I”之后的路径，如我需要对如下路径进行添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4&#x2F;opencv </span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-设置-Library-Search-Paths\"><a href=\"#8-设置-Library-Search-Paths\" class=\"headerlink\" title=\"8.设置 Library Search Paths\"></a>8.设置 Library Search Paths</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Library.png\" class=\"\">\n\n<p>类似地，在 <em>Build Settings</em> 中搜索“Library Search Paths”，将 <em>Library Search Paths</em> 路径设置为刚才得到的输出结果“-L”之后的路径，如我需要对如下路径进行添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;lib</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-设置-Other-Linker-Flags\"><a href=\"#9-设置-Other-Linker-Flags\" class=\"headerlink\" title=\"9.设置 Other Linker Flags\"></a>9.设置 Other Linker Flags</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/linker.png\" class=\"\">\n\n<p>同样，在 <em>Build Settings</em> 中搜索“Other Linker Flags”，将 <em>Other Linker Flags</em> 路径设置为刚才得到的输出结果中的其他内容，即 Linker Flags，我需要对如下 Linker Flags 进行添加。（无需手动输入，只需单击输入框粘贴相关内容）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-测试运行\"><a href=\"#9-测试运行\" class=\"headerlink\" title=\"9.测试运行\"></a>9.测试运行</h3><p>配置到这一步 Xcode 相关内容已经结束。可以尝试运行简单的<code>OpenCV</code>程序判断是否能够正常运行，以下给出简单的示例程序，功能仅为打开图片与退出。</p>\n<p>你需要按照后文中“使用相对路径”方法配置相对路径并添加图片<code>test.jpeg</code>到项目文件夹。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;opencv2&#x2F;opencv.hpp&gt;</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace cv;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Mat image&#x3D; imread(&quot;test.jpeg&quot;);&#x2F;&#x2F; 读取图片</span><br><span class=\"line\">    if(!image.data)             &#x2F;&#x2F; 检查非法输入</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          cout &lt;&lt;  &quot;无法读取照片&quot; &lt;&lt; endl ;</span><br><span class=\"line\">          return -1;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    namedWindow(&quot;Display window&quot;,WINDOW_AUTOSIZE);   &#x2F;&#x2F; 创建图片显示自动调整大小的窗口</span><br><span class=\"line\">    imshow(&quot;img&quot;,image);    &#x2F;&#x2F; 在窗口显示图片</span><br><span class=\"line\">    </span><br><span class=\"line\">    waitKey(0); &#x2F;&#x2F; 按键等待，需要在窗口任意输入字符退出，0代表永久等待</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>若运行过程出现问题请检查上述步骤是否正确，后文中给出了部分问题的解决方案，可能对您有帮助。</p>\n<h2 id=\"其他设置\"><a href=\"#其他设置\" class=\"headerlink\" title=\"其他设置\"></a>其他设置</h2><h3 id=\"使用相对路径\"><a href=\"#使用相对路径\" class=\"headerlink\" title=\"使用相对路径\"></a>使用相对路径</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/dir.png\" class=\"\">\n\n<p>Xcode使用图像或资源的绝对路径。为了设置相对路径需要设置<em>Working Directory</em>。依次点击 <code>菜单栏Product &gt; Scheme &gt; Edit Scheme</code> 中转到<em>Run</em>中的<em>check Use Custom Working Directory</em>选项，然后自定义项目目录。</p>\n<h2 id=\"可能出现的错误\"><a href=\"#可能出现的错误\" class=\"headerlink\" title=\"可能出现的错误\"></a>可能出现的错误</h2><h3 id=\"出现-“Not-a-Doxygen-trailing-comment”-错误\"><a href=\"#出现-“Not-a-Doxygen-trailing-comment”-错误\" class=\"headerlink\" title=\"出现 “Not a Doxygen trailing comment” 错误\"></a>出现 “Not a Doxygen trailing comment” 错误</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/documention.png\" class=\"\">\n\n<p>在 <em>Build Settings</em> 中搜索 “Documentation Comments”，将 <em>Documentation Comments</em> 设置为”No”即可解决该问题。<code>Doxygen</code> 只是一种格式可以选择跳过检查。</p>\n<h3 id=\"出现-“dyld-Library-not-loaded…”-错误\"><a href=\"#出现-“dyld-Library-not-loaded…”-错误\" class=\"headerlink\" title=\"出现 “dyld: Library not loaded…” 错误\"></a>出现 “dyld: Library not loaded…” 错误</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/signature.png\" class=\"\">\n\n<p>在 <em>Signing &amp; Capabilities</em> 中打开<em>Disable Library Validation</em>，即可解决该问题。问题的原因是<code>brew</code>安装的<code>OpenCV</code>存在签名问题，暂且可以先认可没有被签名的 Library。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://medium.com/@jaskaranvirdi/setting-up-opencv-and-c-development-environment-in-xcode-b6027728003\" target=\"_blank\" rel=\"noopener\">Setting up OpenCV and C++ development environment in Xcode for Computer Vision projects</a></p>\n<p><a href=\"https://github.com/opencv/opencv/issues/15645#issuecomment-554495051\" target=\"_blank\" rel=\"noopener\">Xcode in macox 10.15 beta library code signature problem</a></p>\n<p><a href=\"https://stackoverflow.com/questions/39929199/not-a-doxygen-trailing-comment\" target=\"_blank\" rel=\"noopener\">Not a Doxygen trailing comment</a></p>\n<p><a href=\"https://docs.opencv.org/2.4/doc/tutorials/introduction/display_image/display_image.html\" target=\"_blank\" rel=\"noopener\">Load and Display an Image</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>下学期选了数字图像处理课程，接下来的<code>OpenCV</code>学习过程我会从零开始记录，第零课是开发环境的配置。</p>\n<p>由于笔者使用的是Mac，相较于<code>C++</code>，笔者的<code>Python</code>功底不是很扎实，所以使用Xcode与<code>C++</code>实践<code>OpenCV</code>项目。在网络上搜寻了许多关于<code>OpenCV</code>与 Xcode 开发环境的配置资料均不是很完善,于是决定自己写一篇，希望对 Mac 用户有所帮助。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"1-安装-Xcode\"><a href=\"#1-安装-Xcode\" class=\"headerlink\" title=\"1.安装 Xcode\"></a>1.安装 Xcode</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Xcode.png\" class=\"\">\n\n<p>从 App Store 安装 Xcode。目前 Xcode（11.3）的安装后大小约为19 GB，因此可能需要近半小时的下载与安装时间，具体取决于互联网速度与设备运行速度。</p>\n<h3 id=\"2-安装-Homebrew\"><a href=\"#2-安装-Homebrew\" class=\"headerlink\" title=\"2.安装 Homebrew\"></a>2.安装 Homebrew</h3><p><a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a> 是 Mac 上必备的包管理工具，诸多优点不复赘述。<br>如果你还没有安装过 <a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a> ，只需打开任意终端并粘贴以下代码并回车即可完成安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-安装-OpenCV\"><a href=\"#3-安装-OpenCV\" class=\"headerlink\" title=\"3.安装 OpenCV\"></a>3.安装 OpenCV</h3><p>完成 Homebrew 的安装后， 即可使用<code>brew</code>命令完成<code>OpenCV</code>的安装部署。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install opencv</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-安装-pkg-config\"><a href=\"#4-安装-pkg-config\" class=\"headerlink\" title=\"4.安装 pkg-config\"></a>4.安装 pkg-config</h3><p><code>pkg-config</code>是在编译应用程序和库时使用的辅助工具，可以帮助我们找到找到正确的OpenCV 链接器符号 (Linker Flags) ，在后续的步骤中会用到。<br>你需要使用如下命令完成对<code>pkg-config</code>的安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pkg-config</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-使用-pkg-config\"><a href=\"#5-使用-pkg-config\" class=\"headerlink\" title=\"5.使用 pkg-config\"></a>5.使用 pkg-config</h3><p>查看您的<code>opencv.pc</code>文件所在位置，一般<code>opencv.pc</code>文件所在位置为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;&lt;版本号&gt;&#x2F;lib&#x2F;pkgconfig&#x2F;opencv.pc</span><br></pre></td></tr></table></figure>\n\n<p>如我安装的最新版本<code>OpenCV</code>的相关<code>opencv.pc</code>文件在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;lib&#x2F;pkgconfig&#x2F;opencv.pc</span><br></pre></td></tr></table></figure>\n\n<p>使用下面的命令查看<code>OpenCV</code>的链接器符号 (Linker Flags) ，请务必修改其中的版本信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg-config --cflags --libs &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;&lt;版本号&gt;&#x2F;lib&#x2F;pkgconfig&#x2F;opencv.pc</span><br></pre></td></tr></table></figure>\n\n<p>你会得到类似于如下的输出结果，我们需要参照输出结果在 Xcode 中进行配置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-I&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4&#x2F;opencv -I&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4 -L&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;lib -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-Xcode\"><a href=\"#配置-Xcode\" class=\"headerlink\" title=\"配置 Xcode\"></a>配置 Xcode</h2><h3 id=\"6-创建-Xcode-项目\"><a href=\"#6-创建-Xcode-项目\" class=\"headerlink\" title=\"6.创建 Xcode 项目\"></a>6.创建 Xcode 项目</h3><p>在正式运行 OpenCV C++代码之前，首先需要在 Xcode 中创建一个空的<code>C++</code>项目。具体创建过程不在这里叙述。</p>\n<img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Project.png\" class=\"\">\n\n<p>需要注意的是项目的 <em>Language</em> 应选择为 C++。</p>\n<h3 id=\"7-设置-Header-Search-Paths\"><a href=\"#7-设置-Header-Search-Paths\" class=\"headerlink\" title=\"7.设置 Header Search Paths\"></a>7.设置 Header Search Paths</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Headers.png\" class=\"\">\n\n<p>在 Xcode 中设置 <em>Header Search Paths<em>，先单击 Xco​​de 项目，然后点击 *Build Settings</em>，然后搜索“Header Search Paths”。将 *Header Search Paths</em> 路径设置为刚才得到的输出结果“-I”之后的路径，如我需要对如下路径进行添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4&#x2F;opencv </span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;include&#x2F;opencv4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-设置-Library-Search-Paths\"><a href=\"#8-设置-Library-Search-Paths\" class=\"headerlink\" title=\"8.设置 Library Search Paths\"></a>8.设置 Library Search Paths</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/Library.png\" class=\"\">\n\n<p>类似地，在 <em>Build Settings</em> 中搜索“Library Search Paths”，将 <em>Library Search Paths</em> 路径设置为刚才得到的输出结果“-L”之后的路径，如我需要对如下路径进行添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;opencv&#x2F;4.2.0_1&#x2F;lib</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-设置-Other-Linker-Flags\"><a href=\"#9-设置-Other-Linker-Flags\" class=\"headerlink\" title=\"9.设置 Other Linker Flags\"></a>9.设置 Other Linker Flags</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/linker.png\" class=\"\">\n\n<p>同样，在 <em>Build Settings</em> 中搜索“Other Linker Flags”，将 <em>Other Linker Flags</em> 路径设置为刚才得到的输出结果中的其他内容，即 Linker Flags，我需要对如下 Linker Flags 进行添加。（无需手动输入，只需单击输入框粘贴相关内容）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_highgui -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_sfm -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-测试运行\"><a href=\"#9-测试运行\" class=\"headerlink\" title=\"9.测试运行\"></a>9.测试运行</h3><p>配置到这一步 Xcode 相关内容已经结束。可以尝试运行简单的<code>OpenCV</code>程序判断是否能够正常运行，以下给出简单的示例程序，功能仅为打开图片与退出。</p>\n<p>你需要按照后文中“使用相对路径”方法配置相对路径并添加图片<code>test.jpeg</code>到项目文件夹。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;opencv2&#x2F;opencv.hpp&gt;</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace cv;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Mat image&#x3D; imread(&quot;test.jpeg&quot;);&#x2F;&#x2F; 读取图片</span><br><span class=\"line\">    if(!image.data)             &#x2F;&#x2F; 检查非法输入</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          cout &lt;&lt;  &quot;无法读取照片&quot; &lt;&lt; endl ;</span><br><span class=\"line\">          return -1;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    namedWindow(&quot;Display window&quot;,WINDOW_AUTOSIZE);   &#x2F;&#x2F; 创建图片显示自动调整大小的窗口</span><br><span class=\"line\">    imshow(&quot;img&quot;,image);    &#x2F;&#x2F; 在窗口显示图片</span><br><span class=\"line\">    </span><br><span class=\"line\">    waitKey(0); &#x2F;&#x2F; 按键等待，需要在窗口任意输入字符退出，0代表永久等待</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>若运行过程出现问题请检查上述步骤是否正确，后文中给出了部分问题的解决方案，可能对您有帮助。</p>\n<h2 id=\"其他设置\"><a href=\"#其他设置\" class=\"headerlink\" title=\"其他设置\"></a>其他设置</h2><h3 id=\"使用相对路径\"><a href=\"#使用相对路径\" class=\"headerlink\" title=\"使用相对路径\"></a>使用相对路径</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/dir.png\" class=\"\">\n\n<p>Xcode使用图像或资源的绝对路径。为了设置相对路径需要设置<em>Working Directory</em>。依次点击 <code>菜单栏Product &gt; Scheme &gt; Edit Scheme</code> 中转到<em>Run</em>中的<em>check Use Custom Working Directory</em>选项，然后自定义项目目录。</p>\n<h2 id=\"可能出现的错误\"><a href=\"#可能出现的错误\" class=\"headerlink\" title=\"可能出现的错误\"></a>可能出现的错误</h2><h3 id=\"出现-“Not-a-Doxygen-trailing-comment”-错误\"><a href=\"#出现-“Not-a-Doxygen-trailing-comment”-错误\" class=\"headerlink\" title=\"出现 “Not a Doxygen trailing comment” 错误\"></a>出现 “Not a Doxygen trailing comment” 错误</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/documention.png\" class=\"\">\n\n<p>在 <em>Build Settings</em> 中搜索 “Documentation Comments”，将 <em>Documentation Comments</em> 设置为”No”即可解决该问题。<code>Doxygen</code> 只是一种格式可以选择跳过检查。</p>\n<h3 id=\"出现-“dyld-Library-not-loaded…”-错误\"><a href=\"#出现-“dyld-Library-not-loaded…”-错误\" class=\"headerlink\" title=\"出现 “dyld: Library not loaded…” 错误\"></a>出现 “dyld: Library not loaded…” 错误</h3><img src=\"/2020/02/26/Setting_up_OpenCV_environment_in_Xcode/signature.png\" class=\"\">\n\n<p>在 <em>Signing &amp; Capabilities</em> 中打开<em>Disable Library Validation</em>，即可解决该问题。问题的原因是<code>brew</code>安装的<code>OpenCV</code>存在签名问题，暂且可以先认可没有被签名的 Library。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://medium.com/@jaskaranvirdi/setting-up-opencv-and-c-development-environment-in-xcode-b6027728003\" target=\"_blank\" rel=\"noopener\">Setting up OpenCV and C++ development environment in Xcode for Computer Vision projects</a></p>\n<p><a href=\"https://github.com/opencv/opencv/issues/15645#issuecomment-554495051\" target=\"_blank\" rel=\"noopener\">Xcode in macox 10.15 beta library code signature problem</a></p>\n<p><a href=\"https://stackoverflow.com/questions/39929199/not-a-doxygen-trailing-comment\" target=\"_blank\" rel=\"noopener\">Not a Doxygen trailing comment</a></p>\n<p><a href=\"https://docs.opencv.org/2.4/doc/tutorials/introduction/display_image/display_image.html\" target=\"_blank\" rel=\"noopener\">Load and Display an Image</a></p>\n"},{"title":"Design+Code 的 Vue.js 课程学习摘录","date":"2020-02-10T17:20:20.000Z","_content":"\n## 配置组件的data属性\n\n课程初提及的定义**data**的方法经过测试不可行，即如下代码片段。\n\n```\n<script>\nexport default {\n  name: \"SignIn\",\n  data: {\n    isDarkMode: true\n  },\n  methods: {\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n    }\n  }\n};\n</script>\n```\n\n**data** 包含可以在触发组件更新的数据。\n**methods** 包含可以触发数据更改的函数。\n\n后文中解释了需要作出的更改：\n\n>为了让效果工作，我们需要的data属性是一个函数。这是 Vue组件的规则，并不是`App.vue`的规则。因此需要将当前数据属性替换为：\n\n```\ndata() {\n  return {\n      isDarkMode: true\n  }\n},\n```\n\n经查阅官方文档，了解到 data 必须是一个函数。\n\n>当我们定义 <button-counter> 组件时，你可能会发现它的 data 并不是直接提供一个对象，取而代之的是，一个组件的 data 选项必须是一个函数，因此每个实例可以维护一份被返回对象的独立的拷贝。如果 Vue 没有这条规则，点击一个按钮就可能会影响到其它所有实例。\n\n解释得非常清楚，学习 `Vue.js` 等前端技术或许可以速成，但文档一定是不可或缺的一块。\n\n## 配置全局样式\n\n可以在CSS `<style> `的开头导入`.css`文件，但对其进行配置可以使其用于整个项目的 Vue 文件。\n`vue.config.js` 是一个可选的配置文件，如果项目的 (和 `package.json` 同级的) 根目录中存在这个文件，那么它会被 `@vue/cli-service` 自动加载。[官方文档](https://cli.vuejs.org/zh/config/#chainwebpack)详细解释了全局 CLI 配置方法。\n教程指导做的是在项目的根目录中创建一个名为`vue.config.js`的文件，并且在此输入以下配置：\n\n```\n// vue.config.js\nmodule.exports = {\n    css: {\n        loaderOptions: {\n            sass: {\n                data: `\n                    @import \"@/global-styles/colors.scss\";\n                    @import \"@/global-styles/typography.scss\";\n                `\n            }\n        }\n    }\n}\n```\n\n如果使用的是最新版本的 `Vue CLI`，尽管进行了到 **Vue CLI > in Project Tasks > serve** 重新运行任务，还是会提示报错无法运行。\n\n新版本的 `Vue CLI` 提供了 `Dart Sass` 与 `node-sass` 两种类型的 Sass 配置，在`sass-loader`的[implementation](https://github.com/webpack-contrib/sass-loader)中两者有所不同。\n\n原因在于在 `sass-loader ` v7 中，`prependData`选项名是 \"data”，已经不适用。\n默认情况下 `sass` 选项会同时对 `sass` 和 `scss` 语法同时生效，因为 `scss` 语法在内部也是由 sass-loader 处理的，但是在配置 `data` 选项的时候，`scss` 语法会要求语句结尾必须有分号，`sass` 则要求必须没有分号。在这种情况下，我们可以使用 `scss` 选项，对 `scss` 语法进行单独配置。实例代码来自[官方文档](https://cli.vuejs.org/zh/guide/css.html#css-modules)。\n\n```\n// vue.config.js\nmodule.exports = {\n  css: {\n    loaderOptions: {\n      // 给 sass-loader 传递选项\n      sass: {\n        // @/ 是 src/ 的别名\n        // 假设存在 `src/variables.sass` 这个文件\n        prependData: `@import \"~@/variables.sass\"`\n      },\n      scss: {\n        prependData: `@import \"~@/variables.scss\";`\n      }\n    }\n  }\n}\n```\n\n## 未完待续","source":"_posts/Design+Code_Vue.js_Learning.md","raw":"---\ntitle: Design+Code 的 Vue.js 课程学习摘录\ndate: 2020-02-11 01:20:20\ntags: tech\n---\n\n## 配置组件的data属性\n\n课程初提及的定义**data**的方法经过测试不可行，即如下代码片段。\n\n```\n<script>\nexport default {\n  name: \"SignIn\",\n  data: {\n    isDarkMode: true\n  },\n  methods: {\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n    }\n  }\n};\n</script>\n```\n\n**data** 包含可以在触发组件更新的数据。\n**methods** 包含可以触发数据更改的函数。\n\n后文中解释了需要作出的更改：\n\n>为了让效果工作，我们需要的data属性是一个函数。这是 Vue组件的规则，并不是`App.vue`的规则。因此需要将当前数据属性替换为：\n\n```\ndata() {\n  return {\n      isDarkMode: true\n  }\n},\n```\n\n经查阅官方文档，了解到 data 必须是一个函数。\n\n>当我们定义 <button-counter> 组件时，你可能会发现它的 data 并不是直接提供一个对象，取而代之的是，一个组件的 data 选项必须是一个函数，因此每个实例可以维护一份被返回对象的独立的拷贝。如果 Vue 没有这条规则，点击一个按钮就可能会影响到其它所有实例。\n\n解释得非常清楚，学习 `Vue.js` 等前端技术或许可以速成，但文档一定是不可或缺的一块。\n\n## 配置全局样式\n\n可以在CSS `<style> `的开头导入`.css`文件，但对其进行配置可以使其用于整个项目的 Vue 文件。\n`vue.config.js` 是一个可选的配置文件，如果项目的 (和 `package.json` 同级的) 根目录中存在这个文件，那么它会被 `@vue/cli-service` 自动加载。[官方文档](https://cli.vuejs.org/zh/config/#chainwebpack)详细解释了全局 CLI 配置方法。\n教程指导做的是在项目的根目录中创建一个名为`vue.config.js`的文件，并且在此输入以下配置：\n\n```\n// vue.config.js\nmodule.exports = {\n    css: {\n        loaderOptions: {\n            sass: {\n                data: `\n                    @import \"@/global-styles/colors.scss\";\n                    @import \"@/global-styles/typography.scss\";\n                `\n            }\n        }\n    }\n}\n```\n\n如果使用的是最新版本的 `Vue CLI`，尽管进行了到 **Vue CLI > in Project Tasks > serve** 重新运行任务，还是会提示报错无法运行。\n\n新版本的 `Vue CLI` 提供了 `Dart Sass` 与 `node-sass` 两种类型的 Sass 配置，在`sass-loader`的[implementation](https://github.com/webpack-contrib/sass-loader)中两者有所不同。\n\n原因在于在 `sass-loader ` v7 中，`prependData`选项名是 \"data”，已经不适用。\n默认情况下 `sass` 选项会同时对 `sass` 和 `scss` 语法同时生效，因为 `scss` 语法在内部也是由 sass-loader 处理的，但是在配置 `data` 选项的时候，`scss` 语法会要求语句结尾必须有分号，`sass` 则要求必须没有分号。在这种情况下，我们可以使用 `scss` 选项，对 `scss` 语法进行单独配置。实例代码来自[官方文档](https://cli.vuejs.org/zh/guide/css.html#css-modules)。\n\n```\n// vue.config.js\nmodule.exports = {\n  css: {\n    loaderOptions: {\n      // 给 sass-loader 传递选项\n      sass: {\n        // @/ 是 src/ 的别名\n        // 假设存在 `src/variables.sass` 这个文件\n        prependData: `@import \"~@/variables.sass\"`\n      },\n      scss: {\n        prependData: `@import \"~@/variables.scss\";`\n      }\n    }\n  }\n}\n```\n\n## 未完待续","slug":"Design+Code_Vue.js_Learning","published":1,"updated":"2020-02-10T18:11:14.294Z","_id":"ck735dlve00077c6b1cbs68th","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"配置组件的data属性\"><a href=\"#配置组件的data属性\" class=\"headerlink\" title=\"配置组件的data属性\"></a>配置组件的data属性</h2><p>课程初提及的定义<strong>data</strong>的方法经过测试不可行，即如下代码片段。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;SignIn&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    isDarkMode: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    toggleDarkMode() &#123;</span><br><span class=\"line\">      this.isDarkMode &#x3D; !this.isDarkMode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>data</strong> 包含可以在触发组件更新的数据。<br><strong>methods</strong> 包含可以触发数据更改的函数。</p>\n<p>后文中解释了需要作出的更改：</p>\n<blockquote>\n<p>为了让效果工作，我们需要的data属性是一个函数。这是 Vue组件的规则，并不是<code>App.vue</code>的规则。因此需要将当前数据属性替换为：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">  return &#123;</span><br><span class=\"line\">      isDarkMode: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>经查阅官方文档，了解到 data 必须是一个函数。</p>\n<blockquote>\n<p>当我们定义 <button-counter> 组件时，你可能会发现它的 data 并不是直接提供一个对象，取而代之的是，一个组件的 data 选项必须是一个函数，因此每个实例可以维护一份被返回对象的独立的拷贝。如果 Vue 没有这条规则，点击一个按钮就可能会影响到其它所有实例。</p>\n</blockquote>\n<p>解释得非常清楚，学习 <code>Vue.js</code> 等前端技术或许可以速成，但文档一定是不可或缺的一块。</p>\n<h2 id=\"配置全局样式\"><a href=\"#配置全局样式\" class=\"headerlink\" title=\"配置全局样式\"></a>配置全局样式</h2><p>可以在CSS <code>&lt;style&gt;</code>的开头导入<code>.css</code>文件，但对其进行配置可以使其用于整个项目的 Vue 文件。<br><code>vue.config.js</code> 是一个可选的配置文件，如果项目的 (和 <code>package.json</code> 同级的) 根目录中存在这个文件，那么它会被 <code>@vue/cli-service</code> 自动加载。<a href=\"https://cli.vuejs.org/zh/config/#chainwebpack\" target=\"_blank\" rel=\"noopener\">官方文档</a>详细解释了全局 CLI 配置方法。<br>教程指导做的是在项目的根目录中创建一个名为<code>vue.config.js</code>的文件，并且在此输入以下配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; vue.config.js</span><br><span class=\"line\">module.exports &#x3D; &#123;</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        loaderOptions: &#123;</span><br><span class=\"line\">            sass: &#123;</span><br><span class=\"line\">                data: &#96;</span><br><span class=\"line\">                    @import &quot;@&#x2F;global-styles&#x2F;colors.scss&quot;;</span><br><span class=\"line\">                    @import &quot;@&#x2F;global-styles&#x2F;typography.scss&quot;;</span><br><span class=\"line\">                &#96;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果使用的是最新版本的 <code>Vue CLI</code>，尽管进行了到 <strong>Vue CLI &gt; in Project Tasks &gt; serve</strong> 重新运行任务，还是会提示报错无法运行。</p>\n<p>新版本的 <code>Vue CLI</code> 提供了 <code>Dart Sass</code> 与 <code>node-sass</code> 两种类型的 Sass 配置，在<code>sass-loader</code>的<a href=\"https://github.com/webpack-contrib/sass-loader\" target=\"_blank\" rel=\"noopener\">implementation</a>中两者有所不同。</p>\n<p>原因在于在 <code>sass-loader</code> v7 中，<code>prependData</code>选项名是 “data”，已经不适用。<br>默认情况下 <code>sass</code> 选项会同时对 <code>sass</code> 和 <code>scss</code> 语法同时生效，因为 <code>scss</code> 语法在内部也是由 sass-loader 处理的，但是在配置 <code>data</code> 选项的时候，<code>scss</code> 语法会要求语句结尾必须有分号，<code>sass</code> 则要求必须没有分号。在这种情况下，我们可以使用 <code>scss</code> 选项，对 <code>scss</code> 语法进行单独配置。实例代码来自<a href=\"https://cli.vuejs.org/zh/guide/css.html#css-modules\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; vue.config.js</span><br><span class=\"line\">module.exports &#x3D; &#123;</span><br><span class=\"line\">  css: &#123;</span><br><span class=\"line\">    loaderOptions: &#123;</span><br><span class=\"line\">      &#x2F;&#x2F; 给 sass-loader 传递选项</span><br><span class=\"line\">      sass: &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; @&#x2F; 是 src&#x2F; 的别名</span><br><span class=\"line\">        &#x2F;&#x2F; 假设存在 &#96;src&#x2F;variables.sass&#96; 这个文件</span><br><span class=\"line\">        prependData: &#96;@import &quot;~@&#x2F;variables.sass&quot;&#96;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      scss: &#123;</span><br><span class=\"line\">        prependData: &#96;@import &quot;~@&#x2F;variables.scss&quot;;&#96;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"配置组件的data属性\"><a href=\"#配置组件的data属性\" class=\"headerlink\" title=\"配置组件的data属性\"></a>配置组件的data属性</h2><p>课程初提及的定义<strong>data</strong>的方法经过测试不可行，即如下代码片段。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;SignIn&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    isDarkMode: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    toggleDarkMode() &#123;</span><br><span class=\"line\">      this.isDarkMode &#x3D; !this.isDarkMode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>data</strong> 包含可以在触发组件更新的数据。<br><strong>methods</strong> 包含可以触发数据更改的函数。</p>\n<p>后文中解释了需要作出的更改：</p>\n<blockquote>\n<p>为了让效果工作，我们需要的data属性是一个函数。这是 Vue组件的规则，并不是<code>App.vue</code>的规则。因此需要将当前数据属性替换为：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">  return &#123;</span><br><span class=\"line\">      isDarkMode: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>经查阅官方文档，了解到 data 必须是一个函数。</p>\n<blockquote>\n<p>当我们定义 <button-counter> 组件时，你可能会发现它的 data 并不是直接提供一个对象，取而代之的是，一个组件的 data 选项必须是一个函数，因此每个实例可以维护一份被返回对象的独立的拷贝。如果 Vue 没有这条规则，点击一个按钮就可能会影响到其它所有实例。</p>\n</blockquote>\n<p>解释得非常清楚，学习 <code>Vue.js</code> 等前端技术或许可以速成，但文档一定是不可或缺的一块。</p>\n<h2 id=\"配置全局样式\"><a href=\"#配置全局样式\" class=\"headerlink\" title=\"配置全局样式\"></a>配置全局样式</h2><p>可以在CSS <code>&lt;style&gt;</code>的开头导入<code>.css</code>文件，但对其进行配置可以使其用于整个项目的 Vue 文件。<br><code>vue.config.js</code> 是一个可选的配置文件，如果项目的 (和 <code>package.json</code> 同级的) 根目录中存在这个文件，那么它会被 <code>@vue/cli-service</code> 自动加载。<a href=\"https://cli.vuejs.org/zh/config/#chainwebpack\" target=\"_blank\" rel=\"noopener\">官方文档</a>详细解释了全局 CLI 配置方法。<br>教程指导做的是在项目的根目录中创建一个名为<code>vue.config.js</code>的文件，并且在此输入以下配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; vue.config.js</span><br><span class=\"line\">module.exports &#x3D; &#123;</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        loaderOptions: &#123;</span><br><span class=\"line\">            sass: &#123;</span><br><span class=\"line\">                data: &#96;</span><br><span class=\"line\">                    @import &quot;@&#x2F;global-styles&#x2F;colors.scss&quot;;</span><br><span class=\"line\">                    @import &quot;@&#x2F;global-styles&#x2F;typography.scss&quot;;</span><br><span class=\"line\">                &#96;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果使用的是最新版本的 <code>Vue CLI</code>，尽管进行了到 <strong>Vue CLI &gt; in Project Tasks &gt; serve</strong> 重新运行任务，还是会提示报错无法运行。</p>\n<p>新版本的 <code>Vue CLI</code> 提供了 <code>Dart Sass</code> 与 <code>node-sass</code> 两种类型的 Sass 配置，在<code>sass-loader</code>的<a href=\"https://github.com/webpack-contrib/sass-loader\" target=\"_blank\" rel=\"noopener\">implementation</a>中两者有所不同。</p>\n<p>原因在于在 <code>sass-loader</code> v7 中，<code>prependData</code>选项名是 “data”，已经不适用。<br>默认情况下 <code>sass</code> 选项会同时对 <code>sass</code> 和 <code>scss</code> 语法同时生效，因为 <code>scss</code> 语法在内部也是由 sass-loader 处理的，但是在配置 <code>data</code> 选项的时候，<code>scss</code> 语法会要求语句结尾必须有分号，<code>sass</code> 则要求必须没有分号。在这种情况下，我们可以使用 <code>scss</code> 选项，对 <code>scss</code> 语法进行单独配置。实例代码来自<a href=\"https://cli.vuejs.org/zh/guide/css.html#css-modules\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; vue.config.js</span><br><span class=\"line\">module.exports &#x3D; &#123;</span><br><span class=\"line\">  css: &#123;</span><br><span class=\"line\">    loaderOptions: &#123;</span><br><span class=\"line\">      &#x2F;&#x2F; 给 sass-loader 传递选项</span><br><span class=\"line\">      sass: &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; @&#x2F; 是 src&#x2F; 的别名</span><br><span class=\"line\">        &#x2F;&#x2F; 假设存在 &#96;src&#x2F;variables.sass&#96; 这个文件</span><br><span class=\"line\">        prependData: &#96;@import &quot;~@&#x2F;variables.sass&quot;&#96;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      scss: &#123;</span><br><span class=\"line\">        prependData: &#96;@import &quot;~@&#x2F;variables.scss&quot;;&#96;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h2>"}],"PostAsset":[{"_id":"source/_posts/Struts_Experiment/1.png","slug":"1.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/10.png","slug":"10.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/11.png","slug":"11.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/12.png","slug":"12.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/13.png","slug":"13.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/14.png","slug":"14.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/15.png","slug":"15.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/16.png","slug":"16.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/17.png","slug":"17.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/18.png","slug":"18.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/19.png","slug":"19.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/2.png","slug":"2.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/20.png","slug":"20.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/3.png","slug":"3.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/4.png","slug":"4.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/5.png","slug":"5.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/6.png","slug":"6.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/7.png","slug":"7.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/8.png","slug":"8.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Struts_Experiment/9.png","slug":"9.png","post":"ck7359lit00037c6b68jqbo4u","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Headers.png","slug":"Headers.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Library.png","slug":"Library.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Project.png","slug":"Project.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/Xcode.png","slug":"Xcode.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/dir.png","slug":"dir.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/documention.png","slug":"documention.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/linker.png","slug":"linker.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0},{"_id":"source/_posts/Setting_up_OpenCV_environment_in_Xcode/signature.png","slug":"signature.png","post":"ck735cgs200057c6b1plke8p6","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ck6grd6v50000up6b6ks90kmf","tag_id":"ck6grd6vc0004up6b7eqh6a5a","_id":"ck6grd6ve0009up6bc7zl2kre"},{"post_id":"ck6grolyv00000i6b4dywb26w","tag_id":"ck6grolyz00010i6b62bxgpq7","_id":"ck6grolz000020i6bdaq7bp4o"},{"post_id":"ck7359lit00037c6b68jqbo4u","tag_id":"ck6grd6ve0007up6b2v5537t5","_id":"ck735akk400047c6bapdc1ar0"},{"post_id":"ck735cgs200057c6b1plke8p6","tag_id":"ck6grd6ve0007up6b2v5537t5","_id":"ck735cgs300067c6b27ind8kf"},{"post_id":"ck735dlve00077c6b1cbs68th","tag_id":"ck6grd6ve0007up6b2v5537t5","_id":"ck735dlvf00087c6b71kzhxu7"}],"Tag":[{"name":"design","_id":"ck6grd6vc0004up6b7eqh6a5a"},{"name":"tech","_id":"ck6grd6ve0007up6b2v5537t5"},{"name":"about","_id":"ck6grolyz00010i6b62bxgpq7"}]}}