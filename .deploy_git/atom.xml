<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StephenFang&#39;s Blog</title>
  
  
  <link href="https://stephenfang.me/atom.xml" rel="self"/>
  
  <link href="https://stephenfang.me/"/>
  <updated>2023-12-08T05:15:37.909Z</updated>
  <id>https://stephenfang.me/</id>
  
  <author>
    <name>Stephen Fang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《宝贵的人生建议》阅读摘录</title>
    <link href="https://stephenfang.me/2023/12/03/Book36530548/"/>
    <id>https://stephenfang.me/2023/12/03/Book36530548/</id>
    <published>2023-12-02T16:04:12.000Z</published>
    <updated>2023-12-08T05:15:37.909Z</updated>
    
    <content type="html"><![CDATA[<p>在跑步的时候收听了播客《快乐30分》的第110期节目「极好的生活建议」介绍了这本书，由于我之前读过 Kelvin Kelly 的其他书籍，也看过他的一些访谈，所以对这本书也产生了浓厚的兴趣。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/36530548/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/a2c32190813ab822fg014a9a">微信读书</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%87%AF%E6%96%87%C2%B7%E5%87%AF%E5%88%A9">凯文·凯利-维基百科</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在68岁生日那天，凯文·凯利开始动笔为他的子女写下一些人生建议，他希望子女们能早点知道这些智慧。他在几年间不断写下新的建议，当这些建议足够多了，他决定写下这本书，以便读者能与朋友和希望改善自身生活的人，分享这些建议。</p><p>这些建议有些基于他特定的人生经验，但大多数建议基于亘古不变的价值观和美德，不管科技如何创新，它们都不会改变，包括感恩、善良、乐观等。</p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h2 id="中文版独家40条人生建议"><a href="#中文版独家40条人生建议" class="headerlink" title="中文版独家40条人生建议"></a>中文版独家40条人生建议</h2><p>毫不犹豫地自我投资——花钱上课，学习新技能。这些不起眼的投资，能产生丰厚的回报。</p><p>趁着父母还在世，用录音设备（或应用），采访他们。不停地问问题。你会有惊人的收获。<br>请人把他们的经历，做成口述史、纪录片，或者写成书。对他们，对你的家庭来说，这将成为一份厚礼。</p><blockquote><p>有了 VisionPro 这类可以拍摄三维信息的设备之后，或许能够让这份经历更加真实。</p></blockquote><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>对已经发生的事进行假设，是浪费时间。对未来进行假设，则大有裨益。</p><blockquote><p>往者不可谏，来者犹可追。</p></blockquote><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>大量阅读历史，你就会明白过去发生过多少怪事；<br>这样，对于未来的怪事，你将见怪不怪。</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>面对重要的事，允许改变想法。这是智慧，而不是不道德。</p><p>在博物馆里，你需要花至少10分钟，才能真正地欣赏一件艺术品。<br>哪怕看5件展品，每件花10分钟，也不要看100件展品，每件花30秒。</p><blockquote><p>很有意思的一条建议。</p></blockquote><p>要获得持续的满足感，努力把苦日子过好，胜过好日子锦上添花。</p><blockquote><p>就把这段话送给入职新公司的自己。</p></blockquote><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>你没喜欢每一个人的义务，你有厌恶任何一个人的自由。<br>但对每个人，你都要给予基本的尊重，包括你厌恶的人。</p><h3 id="1-1"><a href="#1-1" class="headerlink" title="1"></a>1</h3><p>不要用别人的尺子丈量自己的人生。</p><blockquote><p>同样的，在社交平台上推荐给你的那些美好生活帖子并不属于你。</p></blockquote><p>只有当你把收藏品放在显眼的地方展示，愉快地与他人分享时，对你而言收藏才是一件好事。否则，你只是在囤积。</p><blockquote><p>“收藏”与“囤积”。</p></blockquote><p>请客吃饭永远是有效的方法，而且简单易行。这对老朋友很有效，也是结交新朋友的好方法。</p><blockquote><p>这一点与中国人的传统文化相符。</p></blockquote><h3 id="2-1"><a href="#2-1" class="headerlink" title="2"></a>2</h3><p>学习的最好方法是，试着把你会的东西教给别人。</p><p>我们缺少成长的仪式感。当你的孩子达到法定成年年龄，即18~21岁时，举办一场令人难忘的家庭仪式。那一刻将会成为他们人生中重要的试金石。</p><blockquote><p>回想起来，我的成人礼是以高考倒计时100天的名义举行的，还是很感激有这么一个机会让我们有机会思考成长的意义。</p></blockquote><h3 id="3-1"><a href="#3-1" class="headerlink" title="3"></a>3</h3><p>别人拒绝你时，不要觉得被冒犯。<br>想想看，他们和你一样：诸事繁忙，心烦意乱。<br>过段时间再尝试。第二次请求成功的概率，高得惊人。</p><p>养成习惯的好处是，在行动时，不必再进行内心的权衡。不再消耗能量去思考是否要做这件事。<br>你只管去做。好习惯很多，从说真话到使用牙线。</p><blockquote><p>一个习惯成为自然的分界点就是不再需要经过内心的思考直接去做🤔。</p></blockquote><p>年轻时，至少花半年到一年时间，尽可能俭朴地生活，<br>拥有的东西越少越好，住在小房间或帐篷里，吃豆子和米饭。<br>这样，当你未来不得不冒险时，你就不会害怕“最坏”的情况。</p><blockquote><p>有一种生活方式叫做“极简主义”。</p></blockquote><p>开始，购买你能找到的最便宜的工具。升级那些你常用的工具。<br>如果你最终在工作中使用某种工具，购买你买得起的最好的。</p><blockquote><p>所谓“工欲善其事，必先利其器”。</p></blockquote><h3 id="4-1"><a href="#4-1" class="headerlink" title="4"></a>4</h3><p>对自己犯的错误承担责任，是提升一个人境界的最好方式。<br>如果你把事情搞砸了，就坦率承认。勇于承担责任，你会变得无比强大。</p><p>也许宇宙间最反直觉的真理是：你给予的越多，你得到的就越多。理解这一点，是智慧的开端。</p><blockquote><p>给予的越多你反而会觉得更加踏实。</p></blockquote><p>宽恕，就是接受那个你永远得不到的道歉。</p><p>慷慨一些，再慷慨一些。<br>没有人在临终时后悔给予太多。做墓地里最富有的人没有任何意义。</p><blockquote><p>“做墓地里最富有的人没有任何意义”</p></blockquote><p>度假时，先去你行程上最偏远的地方，略过普通城市，最后回到大城市。<br>偏远地区的另类风情，将带给你最大的震撼，而在回来的路上，你会喜欢繁忙的城市中熟悉的便利。</p><blockquote><p>每次露营返回城区的时候都会能感受到城市的好。</p></blockquote><p>你是什么样的人，取决于你做什么。不在于你说什么，不在于你信什么，给谁投票，而在于，你把时间花在什么上面。</p><blockquote><p>同样的，你的职业也决定了你在社会的地位。</p></blockquote><p>当有人对你恶毒、憎恨、刻薄时，你就把他们的行为看作一种病。这样你就更容易与他们共情，缓和冲突。</p><p>清除杂物，为你真正珍惜的东西留出空间。</p><blockquote><p>“极简主义”、“断舍离”。</p></blockquote><p>小时候你的古怪之处，能让你在成年后变得了不起——假如你没有失去它。</p><p>学习如何心安理得地小睡20分钟。</p><blockquote><p>“心安理得”</p></blockquote><p>不要等到给别人写悼词的时候，才给予别人最真诚的赞美。在他们还活着的时候就赞美他们，才有意义。把赞美写在信里，以便他们保存。</p><blockquote><p>事实上对别人的夸奖确实能够让对方心情愉悦并感受到尊重。</p></blockquote><p>好好培养员工，让他们具备找到下一份工作的能力。但也要善待员工，让他们永远不想换工作。</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>不要试图让别人喜欢你，要让他们尊重你。</p><blockquote><p>这句话类似的版本已经有很多了。</p></blockquote><p>背后称赞别人，最终将惠及你自己。</p><blockquote><p>相反的，背后诋毁别人，最终问题将波及你自己。</p></blockquote><p>大多数一夜之间取得的成功，都需要至少五年的努力，事实上，任何重大成功都是如此。明白这一点，你就知道如何规划你的生活了。</p><p>对侮辱的最好回答是：“你可能是对的。”他们往往可能是对的。</p><p>年轻时，结交比你年长的朋友；年老时，结交比你年轻的朋友。</p><p>创造真正的新事物，通常并不需要很多钱。否则新发明将由亿万富翁垄断，而实情并非如此。相反，几乎所有突破都是由缺钱的人创造的。<br>假如用钱就能买到突破，富人为何不买呢？相反，发明新事物需要的是激情、坚持、信念和独创性。穷人和年轻人往往富于这些品质。保持饥饿感。</p><blockquote><p>激情、坚持、信念和独创性</p></blockquote><p>不要按掉闹钟。那只会让你养成睡过头的习惯。</p><blockquote><p>🤦</p></blockquote><p>任何有价值的事都需要无尽的工作。你无法给工作设定上限，所以你必须给工作时间设限。<strong>你唯一能管理的是时间，而不是工作。</strong></p><p>当你陷入困境时，睡一觉。当你睡觉时，把问题交给你的潜意识。第二天早上你就会得到答案。</p><blockquote><p>确实是一条感同身受的建议。</p></blockquote><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>拧螺栓或螺钉时，记住：向右是拧紧，向左是拧松。</p><blockquote><p>很实用的一条建议。</p></blockquote><p>坏事可能飞速发生，但几乎所有好事都是慢慢展开的。</p><p>如果你只有目标而没有实现目标的计划，那目标就只是一个梦。</p><p>培养一种对平庸的厌恶感。</p><blockquote><p>“对平庸的厌恶感”</p></blockquote><p>你不是与一个人结婚，你是与一家人结婚。</p><p>凡事都要有节制，除了你热爱的事。选择几项让你痴迷的兴趣爱好。<br>事实上，要全面节制，以便你能全情投入地去做热爱的事。</p><p>制做任何东西，都要额外多做一些准备，<br>比如额外的材料、零件、空间、装饰。这些额外的东西是应对错误的保障，<br>能减轻压力，防范未来的风险。这是最便宜的保险。</p><blockquote><p>也包括对于个人数据的备份。</p></blockquote><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>大多数美妙的事，如果太频繁地重复，就会变得平淡无奇。<br>一生仅一次，往往是最佳的频率。</p><blockquote><p>保持仪式感。</p></blockquote><p>当你打开油漆罐时，即使只打开一点点，<br>无论多么小心，油漆也总是会溅到你的衣服上。所以此类场合下，穿颜色与之相似的衣服。</p><blockquote><p>实用建议+1</p></blockquote><p>如果你停下来，听音乐家或街头表演者演唱超过一分钟，你就应该给他们一美元。</p><p>当你领导时，你真正的工作是培养更多领导者，而不是更多追随者。</p><p>说话时要自信，如同你是对的，<br>倾听时要仔细，如同你是错的。</p><p>旅行的乐趣与行李的多少成反比。<br>在背包旅行中，这是绝对正确的。<br>如果能意识到真正需要的东西非常少，那会让你很解脱。</p><blockquote><p>关注了B站上一个up主<a href="https://space.bilibili.com/522825797?spm_id_from=333.337.search-card.all.click">啊聪zuo</a>的旅行视频，他甚至还有24小时不花钱挑战这类题材的视频，属于是把极简主义发挥到了极致。</p></blockquote><p>不要在深夜买任何东西。你需要买的任何东西，都可以等到第二天早上再买。</p><blockquote><p>冲动消费确实是一件很可怕的事情。</p></blockquote><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p>在任何谈判中，你都应该说出最有力的一句话：“你能给出更好的条件吗？”</p><p>对你的家庭来说，最好的良药是：经常在一起吃饭，不开电视。</p><blockquote><p>应该还有一句是“不开手机”。</p></blockquote><p>在诸事不顺的日子里做什么，比在顺风顺水的日子里做什么，要重要得多。</p><blockquote><p>在阅读这本书的时候看到这段话给予了我很大的触动，我认为辞去工作出来读书对我来说是一笔投资，而不是一种逃避。</p></blockquote><p>住酒店时，把所有东西都放在显眼的地方，或集中在一起，不要放在抽屉里。这样你走时就不会落下任何东西。<br>如果你需要把某个东西放在一边，比如充电器，那就在它旁边放两个别的大件物品，因为你一下子落下三件东西的概率较低。</p><p>请人完成某项任务时，如果你不知道该付对方多少钱，可以这么问：“你觉得公平的价格是多少？”他们回答的价格通常就是公平的价格。</p><blockquote><p>不知道在中国是否仍然适用。</p></blockquote><p>让他人觉得自己很重要；这将让他们开心，也将让你开心。</p><p>最好的工作是一个你不够格的工作，因为它会迫使你挖掘潜力。事实上，要只去应聘那些你不够格的工作。</p><p>最好的投资建议：追求平均的回报，持有超过平均水平的时间，这将创造非凡的结果。买入并持有。</p><p>你真正为某个东西付出的钱，可能是标价的两倍，因为你需要精力、时间和金钱，来安装、学习、维护、修理，用完还要处理掉，这些都有成本。标签上的价格并不代表全部。</p><p>回到家乡时，购买最新的当地旅游指南。每年把自己当一回游客，你将有很大收获。</p><blockquote><p>同样适用于再次出发去一个熟悉的地方旅行。</p></blockquote><h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p>不要排队去吃某个有名的美食。它通常不值得你花这么长的等待时间。</p><p>做一个专业人士。备份之后还要再备份。至少要有一个物理备份和一个云端备份。每一种都要多个备份。如果你丢失了数据、照片或笔记，你愿意付多少钱找回来？与后悔相比，备份是廉价的。</p><blockquote><p>“与后悔相比，备份是廉价的。”</p></blockquote><p>你的时间和空间是有限的。那些不能再给你带来快乐的东西，要移走、送人、扔掉，给能给你带来快乐的东西腾出时间和空间。</p><p>当有人跟你谈论人类历史的巅峰时期时，那个时候一切都好，然后就开始走下坡路，那一年往往是他们十岁的那一年——那是人的生存状态的巅峰。<br>听他们说话时，你要记住这一点。</p><blockquote><p>就像90后会觉得2000-2010是最好的年代。</p></blockquote><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>要多做对他人来说是工作、对你来说像玩儿一样的事。</p><p>当你面对一项可以在两分钟之内完成的任务时，立马去做。</p><blockquote><p>有时候我会把这种事情放在待办事项里面，如果是这样的逻辑确实填写GTD信息毫无意义。</p></blockquote><p>专注于你喜欢的东西，而不是一味贬损你讨厌的东西，你会变得更好，也会让别人变得更好。人生短暂，把注意力集中在美好的事物上。</p><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p>不快乐源自想要别人拥有的东西。快乐源自想要自己已经拥有的东西。</p><blockquote><p>很通透。</p></blockquote><p>注意和谁在一起时你感觉最好。多和他们在一起。</p><blockquote><p>感觉好是一种很本能的感觉，但是很难去描述。</p></blockquote><p>你能为孩子做的最好的事就是爱你的配偶。</p><p>冥想时，静坐，关注呼吸。脑海中会浮现各种想法。<br>然后把注意力拉回到呼吸上面，这时大脑就不想了。走神了，就拉回来。<br>始终让注意力回到呼吸上，而不是关注想法。就这么简单。</p><blockquote><p>曾经我也认为冥想是伪科学，但是在我开始尝试冥想之后，我发现它确实能够让我更加专注。</p></blockquote><p>你无法改变过去，但你可以改变对过去的叙述。<br>重要的不是你经历了什么，而是你怎么对待这些事。</p><p>孩子犯错时，让他自己选择惩罚方式。他会比你更严厉。</p><p>在人生的每个关键时刻，都要完全接受这个问题：“可能发生的最坏情况是什么？”<br>演练你对“最坏”情况的反应，等那种情况发生时，那就会像是一场冒险，而不至于让你裹足不前。</p><blockquote><p>假定每天的下班时间都是十点，如果你碰巧早于这个点下班，工作就不会让你感觉那么失落。</p></blockquote><p>衣服染上污渍时，在污渍未干时清除，成功概率更高。污渍干后清除难度就大了。</p><p>做出承诺时要格外吝啬，因为履行承诺时，必须慷慨。</p><p>给年轻人忠告的最好方式是：弄明白他们真正想做什么，然后建议他们放手去做。</p><p>对不感兴趣的东西保持高度的好奇，能获得丰厚的回报。</p><p>即使你什么也不说，只要认真听，<br>人们也会认为你是一个很好的谈话对象。</p><blockquote><p>只要认真听，</p></blockquote><p>当你让别人等你时，他们就开始想到你所有的缺点。</p><blockquote><p>太真实了，失望程度和等待时间正相关。</p></blockquote><p>人生三分之一的时间是躺在床上睡觉，<br>几乎另外三分之一，是在椅子上坐着。<br>花钱买好床、好椅子，是物有所值的投资。</p><p><strong>幸福的最大杀手就是比较。</strong><br>如果非要比较，就和昨天的自己比较。</p><p>20多岁的大好年华，可以做一些非同寻常、稀奇古怪、大胆冒险、不可理喻、疯狂愚蠢、无利可图、看起来与“成功”不沾边的事。在余生里，这些经历将成为你的灵感缪斯。</p><p>如果你限于人生困境，去一个你从未听说过的地方旅行。</p><p>所有财产都需要修理和保养以保持其自然状态。<br>你拥有的东西，最终会左右你。所以要精心选择。</p><blockquote><p>最近看了一本佛学的书，里面提到的一个观点是你不会真正完全拥有一件物品，你只是暂时的使用它。</p></blockquote><p>每周留出一天，不工作，不做生意，不赚钱。把这一天称为“放空日”（或叫别的名字）。利用这一天休息、充电、思考人生中最重要的事。<br>令人意外的是，你将发现过这个放空日是你一周里做的最有成效的事。</p><blockquote><p>我认为我或许可以在周日留出一天时间来放空。</p></blockquote><p>生活忙碌，但别忘了艺术。</p><p>人生中只有很少的遗憾，是遗憾自己做了什么。几乎所有的遗憾都是遗憾自己没有做什么。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在跑步的时候收听了播客《快乐30分》的第110期节目「极好的生活建议」介绍了这本书，由于我之前读过 Kelvin Kelly 的其他书籍，也看过他的一些访谈，所以对这本书也产生了浓厚的兴趣。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="总结" scheme="https://stephenfang.me/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="人生" scheme="https://stephenfang.me/tags/%E4%BA%BA%E7%94%9F/"/>
    
    <category term="凯文·凯利" scheme="https://stephenfang.me/tags/%E5%87%AF%E6%96%87%C2%B7%E5%87%AF%E5%88%A9/"/>
    
    <category term="KK" scheme="https://stephenfang.me/tags/KK/"/>
    
    <category term="建议" scheme="https://stephenfang.me/tags/%E5%BB%BA%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>《好代码，坏代码》阅读摘录</title>
    <link href="https://stephenfang.me/2023/09/03/GoodCode-BadCode/"/>
    <id>https://stephenfang.me/2023/09/03/GoodCode-BadCode/</id>
    <published>2023-09-03T15:23:20.000Z</published>
    <updated>2023-09-03T16:22:51.249Z</updated>
    
    <content type="html"><![CDATA[<p>记得初入公司的时候mentor在审核我的代码的时候会评价“这个代码还有更好的解决方案”，组长给我的建议是“还需要多写代码才所提升”。诚然，有些能力是能够在写需求的时候积累的，但是有些能力是需要在归纳和总结之中习得的，比如代码层级的抽象、错误处理方式、单元测试规范等等。</p><p>这本书可以作为一种简单的扫盲工具，内容上没有特别多新颖的内容，结合具体的用例作者的观点能够被更好理解。在读这本书的时候有一些痛点是我在开发过程也遇到过的，我结合目录和内容做了简单的思维导图的梳理。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35414931/">豆瓣</a></li></ul><h2 id="整理"><a href="#整理" class="headerlink" title="整理"></a>整理</h2><p>目前看到这本书的中文版也出版了，由于我看的是英文原版书，在整理的时候自己的翻译难免会存在一些错误，欢迎在下面评论指正。<br><a href="https://image.stephenfang.me/GoodCode.jpg">https://image.stephenfang.me/GoodCode.jpg</a></p><p><img src="https://image.stephenfang.me/GoodCode.jpg" alt="GoodCode"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记得初入公司的时候mentor在审核我的代码的时候会评价“这个代码还有更好的解决方案”，组长给我的建议是“还需要多写代码才所提升”。诚然，有些能力是能够在写需求的时候积累的，但是有些能力是需要在归纳和总结之中习得的，比如代码层级的抽象、错误处理方式、单元测试规范等等。&lt;/p&gt;
&lt;p&gt;这本书可以作为一种简单的扫盲工具，内容上没有特别多新颖的内容，结合具体的用例作者的观点能够被更好理解。在读这本书的时候有一些痛点是我在开发过程也遇到过的，我结合目录和内容做了简单的思维导图的梳理。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://stephenfang.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="代码" scheme="https://stephenfang.me/tags/%E4%BB%A3%E7%A0%81/"/>
    
    <category term="软件工程" scheme="https://stephenfang.me/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="代码质量" scheme="https://stephenfang.me/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="软件测试" scheme="https://stephenfang.me/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    <category term="设计模式" scheme="https://stephenfang.me/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="Java" scheme="https://stephenfang.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>《一往无前》阅读摘录</title>
    <link href="https://stephenfang.me/2023/08/21/Book35174681/"/>
    <id>https://stephenfang.me/2023/08/21/Book35174681/</id>
    <published>2023-08-21T01:04:12.000Z</published>
    <updated>2023-09-03T16:52:28.112Z</updated>
    
    <content type="html"><![CDATA[<p>这本书的推荐序中这样写道“小米的10年就是一群最简单执着的工程师，怀着最简单纯粹的想法，用最简单专注的方式，追求最简单坦诚的信任。因为简单纯粹，所以无所畏惧；因为无所畏惧，所以一往无前！”</p><p>在雷军的演讲视频评论中时常可以看到“你可以黑小米但不该黑雷军”，我不得不承认在阅读了这本书之后，我对于雷军和小米模式又有了全新的认识。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35174681/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/50732ef071f827db507bad1">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="第一章-雷军的重新出发"><a href="#第一章-雷军的重新出发" class="headerlink" title="第一章 雷军的重新出发"></a>第一章 雷军的重新出发</h3><p>2007年之后，雷军就给自己立下了一个规矩，那就是在办公室和家里都不再使用电脑，所有的信息处理都尽量只用手机完成。在这个过程中，他体会着即将到来的移动时代一点一滴的演进。</p><blockquote><p>互联网人确实是会自己给自己定KPI的。</p></blockquote><p>以前，技术的发展是由军队、大企业推动的，只有这些资金雄厚的实体才买得起零部件。但是现在情况变了，技术的发展由普通消费者推动。</p><p>雷军这门课的成绩尤为突出，拿到了满分。第二年，雷军的课后作业被编进了“曹汇编”新写的教材里。后来这种情况不断出现，在邢馥生教授编写的Pascal程序语言教材里，雷军的名字也出现过几次。</p><blockquote><p>读这本书之前不曾知道雷军在学生时代是一名出色的程序员，甚至还会如此硬核的汇编。</p></blockquote><p>面对陡峭的雪道，人的本能就是恐惧，但是他们知道，越是恐惧越要往下冲。恐惧可能会使人本能地向后仰，而越向后仰就越会摔跤。</p><h3 id="第二章-为发烧而生"><a href="#第二章-为发烧而生" class="headerlink" title="第二章 为发烧而生"></a>第二章 为发烧而生</h3><p>后来，雷军进一步阐释了这个名字的含义：小米中米的拼音是MI，可以进一步阐释为Mobile Internet，即移动互联网；MI也可以理解为Mission Impossible，表示小米要完成不可能完成的任务；同时，雷军也希望用小米加步枪的革命浪漫主义精神来征服世界。</p><blockquote><p>MI解释为Mobile Internet属实有点牵强，最开始的Logo设计是一个“心”字确实从长远来看确实一个很值得思考的设计。</p></blockquote><p>MIUI团队里的工程师很多都来自微软的Windows Mobile团队，以前囿于大公司的流程，工程师们很多事情无法自主，很多想法也无从实现。而现在，他们一改往日的克制，仿佛来到了广阔天地，每天都在自由世界翱翔着。</p><blockquote><p>或许也是Windows Mobile会失败的一个原因。</p></blockquote><p>当候选人终于答应进入小米，双方开始谈薪资待遇的时候，雷军发现，这位候选人不仅不愿意放弃外企的薪水，还特别在意自己一年休假的天数，对股票和期权却抱着无所谓的态度。这让雷军最终选择了放弃。雷军坚信，一<strong>个不具备创业心态的人，技术上再优秀，也不是他想要的人</strong>。他需要一个能够全情投入的创业者。</p><p>这是一只被外界形容为卧虎藏龙的超豪华团队，其中5位有工程师背景、两位有设计师背景，而且5人是海归。他们来自微软、金山、谷歌和摩托罗拉，大多数人都管理过几百人的团队。从此刻开始，这些人希望为中国市场打造一款与以往完全不同的产品的野心，有了可以施展的天地。</p><p>2010年，安卓在美国成为第一智能手机平台。到2010年第三季度，安卓在亚洲击败了一直领先的塞班系统，排名手机操作系统第一位。摩托罗拉在这一年推出了Defy，HTC推出了搭载安卓系统的G7，成为HTC有史以来最畅销的智能机型。Galaxy S成为三星安卓智能手机一个很重要的起点，它让三星从此成为安卓阵营里不可忽视的一股力量。</p><blockquote><p>作为体验过那个时代产品的人，我觉得那个时代是移动互联网创业的黄金时代。</p></blockquote><h3 id="第三章-新物种诞生"><a href="#第三章-新物种诞生" class="headerlink" title="第三章 新物种诞生"></a>第三章 新物种诞生</h3><p>比如，一名叫彭涛的产品经理，面试的时候直接告诉黎万强，她可以经受住强度最大的工作，但是每年都要允许她去日本看彩虹乐队的演唱会，她才会入职。类似这样的要求，黎万强都答应了。</p><blockquote><p>果然初创团队的氛围都是很不错的。</p></blockquote><p>在2008年，雷军就总结出了互联网的七字诀：<strong>专注、极致、口碑、快</strong>。</p><p>小米设置了一个叫作“爆米花”的奖项来激励那些得票最高的功能开发者。周五下午，这些得票最高的工程师会得到一桶管颖智购买的爆米花作为奖励。通常，得奖者会把爆米花桶捧在手里，然后绕着办公室游走一圈，这对于开发者来说是最高的荣誉。</p><p>那个时候，行政专员管颖智每天中午都给雷军订沙县小吃，偶尔会加个鸡腿。而几乎所有的同事也都在同一家小馆下单。</p><blockquote><p>“加鸡腿”</p></blockquote><p>王翔拜访客户时有两个重要的使命，一是介绍自己的技术，二是了解客户对于趋势的判断，从而决定如何调拨自己的资源。</p><p>路上看见谁都像亲人，整个世界都特别美好，是爱心大满贯、大爆棚的感觉，<strong>当你的心里有一个特别想全身心倾注的事业时，你感觉浑身有使不完的劲。</strong></p><p>他平时在办公室就喜欢穿几十块钱的凡客诚品出的黑色T恤和牛仔裤，还有同样几十元的乐淘网出品的帆布鞋。这并不是一个财务早已自由的人特意营造的勤俭节约的个人形象，这是他最贵的穿着之一。</p><blockquote><p>雷军应该是中国创业圈子里比较著名的践行极简主义的人。</p></blockquote><h3 id="第四章-高歌猛进"><a href="#第四章-高歌猛进" class="headerlink" title="第四章 高歌猛进"></a>第四章 高歌猛进</h3><p>他永远热爱乔布斯，但是，一个真正的创业者，并不希望完全去复制另一个人。</p><blockquote><p>“雷布斯”这个名号对于雷军来说是一种褒义词还是贬义词呢？</p></blockquote><p>小米网的技术人员通过一折卖可乐这个活动测试出了很多问题，这些问题在电商正式上线之前都得到了解决。</p><p>米聊的发展最终还是受到了一些资源上的掣肘，导致在和腾讯贴身肉搏时，逐渐处于弱势。</p><blockquote><p>微信在这个时候崛起了。</p></blockquote><p>我们当时的基础设施真的很差，甚至有一个很好笑的笑话，说小米是用Excel表格治天下的，所有的单子刚开始都是填写在Excel表格里，后来才慢慢有了后台工具。</p><blockquote><p>“Excel表格治天下”</p></blockquote><p>随着时间的推进，这些巨头的努力最终似乎都没有达到理想的效果。这和<strong>强大的互联网公司始终缺乏硬件基因</strong>不无关系。</p><h3 id="第五章-生态链起航"><a href="#第五章-生态链起航" class="headerlink" title="第五章 生态链起航"></a>第五章 生态链起航</h3><p>这个景象非常符合小米最初做手机，进而改变中国制造业的理想。与小米手机大量使用跟苹果、三星相同的供应商不同，红米开始大量使用国产的元器件，从而带动了国产手机供应链的发展。雷军认为，<strong>这是小米社会责任的一种体现</strong>。</p><p>小米商业模式的神奇效应——<strong>极致的工业设计，极高的产品性能，极具杀伤力的价格，用电商解决商业效率的问题</strong>。</p><h3 id="第六章-手机登顶和隐忧初现"><a href="#第六章-手机登顶和隐忧初现" class="headerlink" title="第六章 手机登顶和隐忧初现"></a>第六章 手机登顶和隐忧初现</h3><p>雷军要去机场，卢伟冰惊讶地发现知名企业家雷军竟然没有助理，也没有司机，就让自己的司机去给雷军送机。</p><blockquote><p>雷军也曾被人拍到飞机高铁坐的都是经济舱，和苹果给员工报销商务舱的做法截然不同，暴露了两家公司的行事风格。</p></blockquote><p>灯泡等IoT设备与云端的通信协议和链接方式，很大程度上来自他在腾讯开发QQ后台时的经验，让他决定在那么小的芯片里先不用TCP（传输控制协议），而是用UDP（用户数据报协议），实现和云端的握手，以保证控制设备的快速响应。</p><blockquote><p>小米生态链的这把火是从这个时候引燃的。</p></blockquote><h3 id="第七章-低谷到来，危机初现"><a href="#第七章-低谷到来，危机初现" class="headerlink" title="第七章 低谷到来，危机初现"></a>第七章 低谷到来，危机初现</h3><p>小米插线板最初要求拔模的角度最好是零。但是林海峰发现，这样做会导致插线板的废品率太高，出现成本问题。于是插线板的拔模角度被放宽到1.5度，而即便是这样的自我要求，依然是插线板这个行业里<strong>一场前所未有的革命</strong>，它对制造提出了很高的要求。</p><p>小米认为，独角兽企业就像是一棵孤立的竹子，如果没有生长在竹林里，就没有强大而发达的根系，就不能进行新陈代谢，很容易大起大落。而现在，生态链企业逐渐形成了一个生态系统，<strong>他们的根系交织在一起，一边不断向外延伸，一边为竹笋的快速成长提供肥沃的土壤。</strong></p><h3 id="第八章-狂风暴雨中的一年"><a href="#第八章-狂风暴雨中的一年" class="headerlink" title="第八章 狂风暴雨中的一年"></a>第八章 狂风暴雨中的一年</h3><p>每周最核心的订货会上，供应链、生产、销售三个部门分别抱着三台电脑，打开各自的Excel表格进行比照。听到这一奇闻，任何一个业内人士都不敢相信自己的耳朵，小米一年几千万台的出货量难道是靠这样的方法管理出来的吗？</p><p>这时候的小米，经历着多重文化相互冲突的震荡。手机硬件团队与公司互联网企业文化的冲撞、互联网产品体验主义与互联网变现冲动的博弈，都让小米公司深刻地感知着什么才是成长路上真实的痛。</p><p>一个公司特别棒，肯定不是因为它的厨师特别好，但是一个好的公司需要好的厨师，让大家机体健康，精神愉悦。你总不能搞一次食物中毒，让整个公司瘫痪吧。”</p><p>为了学习全球设计最好的体验店，让小米尽快掌握线下的“语言”，她成了苹果体验店的一名常客。全国42家苹果体验店，她几乎全部走了一遍。用她的话说，“当时看店已经进入了如痴如醉的状态”。</p><blockquote><p>当时体量如此大的小米在开出第一家直营店的时候也是从简单的学习模仿开始的。</p></blockquote><h3 id="第九章-逆转向上"><a href="#第九章-逆转向上" class="headerlink" title="第九章 逆转向上"></a>第九章 逆转向上</h3><p>蒂姆还告诉林斌，苹果店的设计理念是受到贝聿铭设计的卢浮宫广场的玻璃金字塔的启发。乔布斯希望人们站在苹果店里和站在玻璃金字塔中的感受是一样的。在他看来，艺术与设计一脉相通。</p><h3 id="第十章-一波三折的上市之旅"><a href="#第十章-一波三折的上市之旅" class="headerlink" title="第十章 一波三折的上市之旅"></a>第十章 一波三折的上市之旅</h3><p>处理如此繁杂而庞大的业务，是周受资有生以来面临过的最大挑战。这个新加坡男孩在回忆这一切时说，自己是新加坡的“国家富二代”，他的父亲曾经在20世纪60年代创立一家建筑公司并取得了巨大成功。然而，由于管理不善，这家企业后来遭遇了困境。从一夜暴富到一无所有，这个过程曾经给年轻的周受资以巨大的心理冲击。他暗暗下定决心，这一生一定要参与建设一家伟大的企业，并要让它立于不败之地。</p><blockquote><p>目前在字节跳动担任COO的周受资，也是小米的创始团队成员之一。</p></blockquote><p>企业家带领人们去做的事情并不总是可以用金钱来计算，正如（斯坦福大学教授）阿德·马卜贡杰所说的那样：“你只有感动了他们，才能领导他们。<strong>企业家是一个讲故事的人，他帮助人们为了信念冒险</strong>。”“如果你去询问硅谷或者其他类似地方的初创团队的成员，问他们为什么选择了现在的工作，你会发现，驱使他们行为的，是超理性动机。”</p><blockquote><p>企业的目标就是讲好故事</p></blockquote><h3 id="第十一章-新时代，新征程"><a href="#第十一章-新时代，新征程" class="headerlink" title="第十一章 新时代，新征程"></a>第十一章 新时代，新征程</h3><p>Redmi品牌的产品线要比以前清晰许多，三大系列分别是旗舰的K系列、中端的Note系列，以及入门级的数字系列。其中K系列覆盖2000<del>3000元档位，Redmi Note覆盖1000</del>2000元的售价范围，数字系列则在千元以下。</p><blockquote><p>作为K40的用户不得不承认卢伟冰团队的营销能力确实很强。</p></blockquote><p>卢伟冰制造的话题取得的成效，很好地阐释了一款科技产品诞生之前互联网预热的重要作用：<strong>互联网的民主性可以将产品性能透明地展示给民众</strong>，让大家自己做出判断。</p><p>小米手机在追求不断创新的同时，不但给供应链提供了大量的订单，也用创新促进了供应链的技术进步。</p><p>在小米的AIoT的蓝图中，形成了“1+4+X”的品类战略，1指传统控制中心智能手机，4指电视、智能音箱、笔记本电脑和路由器，X则是小米海量的IoT产品。</p><p><strong>雷军曾经这样表达自己这一代的成长历程：“我们从小接受的是集体主义教育，但是转过头，满眼看见的都是自我。”</strong></p><p>最关键的一点是，当一个财富早已自由的人开始创业时，他可以真正放下对赚钱和利润的执念，把克制贪婪的理念融会贯通在自己的创业过程中，这让企业家可以大胆放手去追寻商业的本质。</p><p>过去10年催生出许多独角兽公司，它们在庞大的消费市场中历经磨炼，又将其收获的经验复制到其他市场去。人们发现，“Copy to China”（中国复制）已经逐渐减少，“To copy China”（复制中国）却渐渐成风。</p><blockquote><p>目前Temu等公司的出海又是一个新的发展方向。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这本书的推荐序中这样写道“小米的10年就是一群最简单执着的工程师，怀着最简单纯粹的想法，用最简单专注的方式，追求最简单坦诚的信任。因为简单纯粹，所以无所畏惧；因为无所畏惧，所以一往无前！”&lt;/p&gt;
&lt;p&gt;在雷军的演讲视频评论中时常可以看到“你可以黑小米但不该黑雷军”，我不得不承认在阅读了这本书之后，我对于雷军和小米模式又有了全新的认识。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="范海涛" scheme="https://stephenfang.me/tags/%E8%8C%83%E6%B5%B7%E6%B6%9B/"/>
    
    <category term="雷军" scheme="https://stephenfang.me/tags/%E9%9B%B7%E5%86%9B/"/>
    
    <category term="xiaomi" scheme="https://stephenfang.me/tags/xiaomi/"/>
    
    <category term="小米公司" scheme="https://stephenfang.me/tags/%E5%B0%8F%E7%B1%B3%E5%85%AC%E5%8F%B8/"/>
    
  </entry>
  
  <entry>
    <title>Effective Objective-C 总结</title>
    <link href="https://stephenfang.me/2023/07/24/EffectiveObjcTips/"/>
    <id>https://stephenfang.me/2023/07/24/EffectiveObjcTips/</id>
    <published>2023-07-24T13:38:31.402Z</published>
    <updated>2023-07-24T13:38:31.402Z</updated>
    
    <content type="html"><![CDATA[<p>准备开始写 Objective-C 之前花了一些时间重新阅读这本经典的《Effective Objective-C》，在阅读的过程中对重点内容进行了一些摘录，在方便自己复习的同时将相关内容在博客分享出来供参考。</p><span id="more"></span><h2 id="第一节"><a href="#第一节" class="headerlink" title="第一节"></a>第一节</h2><ul><li>Objective-C 采用了动态绑定的消息结构，在运行时检查对象的类型，运行期环境决定了接受消息后需要执行的代码。</li><li>Objective-C 对象所占内存分配在堆空间中，分配在堆空间中的内存必须直接管理。</li><li>定义中不含*的变量分配在栈空间上，分配在栈的用于保存变量的内存会在栈帧弹出时自动清理。</li><li>如果需要存储int、float、double、char等非对象类型推荐使用结构体。</li></ul><h2 id="第二节"><a href="#第二节" class="headerlink" title="第二节"></a>第二节</h2><ul><li>在 .h 文件中使用@class 标识需要引入的类并且在 .m 文件中引入相关头文件，该种方式被称为向前声明，简单的说，将引入头文件的时机尽量向后可以减短编译的时间，并且能够解决互相引用问题。尽量不要引入头文件，降低类之间的耦合。</li><li>有时无法使用向前声明，比如要声明某个类遵循一项协议。此时应尽量把“该类遵循某协议〞的这条声明移至“class-continuation 分类” 中。如果不行就把协议单独放在一个头文件中然后将其引人。</li></ul><h2 id="第三节"><a href="#第三节" class="headerlink" title="第三节"></a>第三节</h2><ul><li>尽量使用字面量语法创建字符串、数值、数组、字典</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSNumber</span> *intNumber = @<span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSNumber</span> *floatNumber = @<span class="number">1.1</span>f;</span><br><span class="line"><span class="built_in">NSNumber</span> *doubleNumber = @<span class="number">1.123456</span>;</span><br><span class="line"><span class="built_in">NSNumber</span> *boolNumber = @YES;</span><br><span class="line"><span class="built_in">NSNumber</span> *charNumber = @<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> numberInt = <span class="number">5</span>;</span><br><span class="line"><span class="type">float</span> numberFloat = <span class="number">1.23</span>f;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *animals = @[<span class="string">@&quot;cat&quot;</span>, <span class="string">@&quot;dog&quot;</span>, <span class="string">@&quot;mouse&quot;</span>];</span><br><span class="line"><span class="built_in">NSString</span> *dog = <span class="string">@&quot;shiba&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *personData = @&#123;<span class="string">@&quot;firstName&quot;</span> : <span class="string">@&quot;Stephen&quot;</span>,</span><br><span class="line"> <span class="string">@&quot;lastName&quot;</span> : <span class="string">@&quot;Fang&quot;</span>,</span><br><span class="line"> <span class="string">@&quot;gender&quot;</span> : <span class="string">@&quot;male&quot;</span>&#125;;</span><br></pre></td></tr></table></figure><ul><li>NSArray 的 arrayWithObjects 方法依次处理各个参数直到发现nil，而如果使用字面量的方法在创建时就会抛出异常终止程序执行，需要确保创建的数组与字典中不含有nil</li><li>尽量使用取下标的方式来访问数组或字典中的元素</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *dog = animals[<span class="number">1</span>];</span><br><span class="line"><span class="built_in">NSString</span> *lastName = personData[<span class="string">@&quot;lastName&quot;</span>];</span><br></pre></td></tr></table></figure><h2 id="第四节"><a href="#第四节" class="headerlink" title="第四节"></a>第四节</h2><ul><li>#define预处理指令声明全局变量尽量少用，编译器只会执行查找和替换操作，不会产生重复定义的警告信息</li><li>尽量使用 static const 声明的方式来完成变量的声明，static表示该变量在定义此变量的编译单元中可见，而static const不会创建符号，只是将变量替换为常量</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">NSTimeInterval</span> kAnimationDuration = <span class="number">0.3</span>;</span><br></pre></td></tr></table></figure><ul><li>编译器看到extern关键字得知全局符号表中包含该符号无需查看该定义就允许只用该常量，该类常量只可以定义一次，命名最好使用与之相关的类名作为前缀</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In the header file</span></span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> EOCStringConstant;</span><br><span class="line"></span><br><span class="line"><span class="comment">// In the implementation file </span></span><br><span class="line"><span class="built_in">NSString</span> *<span class="keyword">const</span> EOCStringConstant = <span class="string">@&quot;DEMO&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="第五节"><a href="#第五节" class="headerlink" title="第五节"></a>第五节</h2><ul><li>保证枚举由底层数据类型实现，不采用编译器所选类型</li><li>凡是需要以按位或操作来组合的枚举都应使用NS_OPTIONS定义，若枚举不需要相互组合应使用NS_ENUM来定义</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, STFFeedPageType) &#123;</span><br><span class="line">    STFFeedPageTypeNone = <span class="number">0</span>,             <span class="comment">// 未知</span></span><br><span class="line">    STFFeedPageTypeFollow = <span class="number">1</span>,           <span class="comment">// 关注页</span></span><br><span class="line">    STFFeedPageTypeRecommend = <span class="number">2</span>,        <span class="comment">// 推荐页</span></span><br><span class="line">    STFFeedPageTypeFeatured = <span class="number">3</span>,         <span class="comment">// 精选页</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSUInteger</span>, AgoraAudioSessionOperationRestriction) &#123;</span><br><span class="line">    <span class="comment">/** No restriction, the SDK has full control of the audio session operations. */</span></span><br><span class="line">    AgoraAudioSessionOperationRestrictionNone              = <span class="number">0</span>,</span><br><span class="line">    <span class="comment">/** The SDK does not change the audio session category. */</span></span><br><span class="line">    AgoraAudioSessionOperationRestrictionSetCategory       = <span class="number">1</span>,</span><br><span class="line">    <span class="comment">/** The SDK does not change any setting of the audio session (category, mode, categoryOptions). */</span></span><br><span class="line">    AgoraAudioSessionOperationRestrictionConfigureSession  = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,</span><br><span class="line">    <span class="comment">/** The SDK keeps the audio session active when leaving a channel. */</span></span><br><span class="line">    AgoraAudioSessionOperationRestrictionDeactivateSession = <span class="number">1</span> &lt;&lt; <span class="number">2</span>,</span><br><span class="line">    <span class="comment">/** The SDK does not configure the audio session anymore. */</span></span><br><span class="line">    AgoraAudioSessionOperationRestrictionAll               = <span class="number">1</span> &lt;&lt; <span class="number">7</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>处理枚举类型的switch语句不要实现default分支</li></ul><h2 id="第六节"><a href="#第六节" class="headerlink" title="第六节"></a>第六节</h2><ul><li>在iOS中一般不使用atomic，因为同步锁会带来较大的开销，且无法保证线程安全</li><li>尽量使用@property语法定义对象封装的数据</li><li>在设置属性对应的实例变量时需要遵从属性声明的语义</li><li>针对CGFloat、NSInteger此类纯量类型采用assign声明即可</li><li>copy类型用于保护NSString*类型的封装性，在ARC下直接访问一个声明为copy的属性并不会直接拷贝而是保留新值释放旧值</li></ul><h2 id="第七节"><a href="#第七节" class="headerlink" title="第七节"></a>第七节</h2><ul><li>在对象内部尽量直接访问实例变量<ul><li>速度更快且生成的代码会直接访问对象实例变量的那块内存</li><li>不会调用“设置方法”</li><li>不会触发KVO，但需要确定是否会产生问题</li><li>通过给getter、setter设置断点可以进行监控和确定访问时机</li></ul></li><li>在写入实例变量时可以通过属性写入，读取实例变量时直接访问，可以作为一种折中方案</li><li>在初始化方法及dealloc方法中，应该直接通过实例变量读取数据，即_</li><li>懒加载方式中必须使用getter的方式访问属性，如果在没有用getter的情况下直接访问实例变量会导致得到是尚未设置好的变量</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (STFComponent*)component &#123;</span><br><span class="line"><span class="keyword">if</span> (!_component) &#123;</span><br><span class="line">_component = [SFComponent new];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> _component;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第八节"><a href="#第八节" class="headerlink" title="第八节"></a>第八节</h2><ul><li>&#x3D;&#x3D; 操作符对比的是两个指针本身并非所指对象</li><li>NSString类实现了一个等同判断方法即isEqualToString，执行该方法的速度快于执行isEqual</li><li>检测对象的等同性需要提供 isEqual 与 hash 方法，NSObject对于两个方法默认实现是仅当指针值完全相等才返回相等，需要针对具体的需求制定检测方案</li><li>编写hash方法时需要使用计算速度快且哈希碰撞低的算法</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- （<span class="type">BOOL</span>）isEqual:(<span class="type">id</span>)object &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">self</span> == object) <span class="keyword">return</span> <span class="literal">YES</span>; <span class="comment">// 指向同一个对象必然相等</span></span><br><span class="line"><span class="keyword">if</span> ([<span class="keyword">self</span> <span class="keyword">class</span>] != [object <span class="keyword">class</span>]) <span class="keyword">return</span> <span class="literal">NO</span>; <span class="comment">//不属于同一个类不相等</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 检测每一个属性是否相等</span></span><br><span class="line">STFPerson *someone = (STFPerson*) object;</span><br><span class="line"><span class="keyword">if</span> (![_firstName isEqualToString:someone.firstName])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line"><span class="keyword">if</span> (![_lastName isEqualToString:someone.lastName])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line"><span class="keyword">if</span> (![_age != someone.age])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> - (<span class="built_in">NSUInteger</span>)hash &#123;</span><br><span class="line"><span class="built_in">NSUInteger</span> firstNameHash = [_firstName hash]；</span><br><span class="line"><span class="built_in">NSUInteger</span> lastNameHash = [_lastName hash]；</span><br><span class="line"><span class="built_in">NSUInteger</span> ageHash = [_ageHash hash]；</span><br><span class="line"><span class="keyword">return</span> firstNameHash ^ lastNameHash ^ ageHash；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>NSArray有等同性判定方法”isEqualToArray:”，而NSDictionary有等同性判定方法”isEqualToDictionary:”， NSArray检测方式为首先核对两个数组包含对象的个数是否相等，若相等在每个对应位置调用”isEqual:”方法</li><li>在编写判定方法时应一并覆写”isEqual:”方法，如果接收该消息的对象与受测参数来自一个类就调用自己编写的判定方法，负责交由超类判定</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-  (<span class="type">BOOL</span>)isEqual:(<span class="type">id</span>)object &#123;</span><br><span class="line"><span class="keyword">if</span> ([<span class="keyword">self</span> <span class="keyword">class</span>] == [object <span class="keyword">class</span>]) </span><br><span class="line"><span class="keyword">return</span> [<span class="keyword">self</span> isEqualToPerson:(STFPerson*)object];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="variable language_">super</span> isEqual: object];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九节"><a href="#第九节" class="headerlink" title="第九节"></a>第九节</h2><ul><li>UIButton类使用者无需关系创建出来的按钮属于哪个子类也无需考虑按钮绘制方式等细节</li><li>类族的使用需要遵循以下原则<ul><li>子类应该继承自类族的抽象基类</li><li>子类应该定义自己的数据存储方式</li><li>子类应该覆写超类文档中需要覆写的方法</li></ul></li></ul><h2 id="第十节"><a href="#第十节" class="headerlink" title="第十节"></a>第十节</h2><ul><li>在其他做法不可行的条件下可以选用关联对象，因为这种做法同样会引入难以查找的bug（不建议使用）</li></ul><h2 id="第十一节"><a href="#第十一节" class="headerlink" title="第十一节"></a>第十一节</h2><ul><li>在编译期就能决定运行时所需要调用的函数为静态绑定，而所需要调用的函数直到运行期才能确定为动态绑定</li><li>runtime决定了对象收到消息后调用哪个方法，甚至在程序运行时可以改变。发送给对象的所有消息都由动态信息派发系统处理</li><li>objc_msgSend函数根据receive和selector的类型调用适当的方法，通过查找每个类中的“表格”查找需要执行的方法并跳转至相应的实现</li><li>尾调用优化在函数的最后一项是调用另一个函数时生效，编译器生成跳转至另一个函数所需的指令码</li></ul><h2 id="第十二节"><a href="#第十二节" class="headerlink" title="第十二节"></a>第十二节</h2><ul><li><p>消息转发分为两个阶段</p><ul><li>第一阶段：动态方法解析</li><li>第二阶段：消息转发机制</li></ul><p>  <img src="http://image.stephenfang.me/mweb/Untitled.png"></p></li><li><p>receiver在每一步都有机会处理消息且步骤越往后处理消息的代价越大</p></li><li><p>如果对象没有办法响应某个selector则进入消息转发流程,runtime的动态方法解析可以在需要某个方法时将其加入类中，对象可以将无法解析的selector转交给其他对象处理。这一步结束后若仍然无法处理selector则启动消息转发机制</p></li></ul><h2 id="第十三节"><a href="#第十三节" class="headerlink" title="第十三节"></a>第十三节</h2><ul><li>在runtime中可以向类中新增或替换selector对应的方法实现，但一般只用于调试</li><li>method swizzling，即使用另一份实现替换原有的方法实现，可以用于向原有的实现中添加新功能</li></ul><h2 id="第十四节"><a href="#第十四节" class="headerlink" title="第十四节"></a>第十四节</h2><ul><li>每个Objective-C对象实例都有指向Class对象的指针，每个对象结构体的首个成员是Class类的变量，该变量定义了对象所属的类，通常称为”is a”指针</li><li>isMemberOfClass 判断对象是否为某个特定类的实例，isKindOfClass 判断对象是否是某类或派生类的实例</li><li>动态类型特性可以用于从 collection 中获取对象（类型信息查询方法）</li><li>假设名为SomeClass的子类继承自NSObject可以得到以下继承体系</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled1.png"></p><h2 id="第十五节"><a href="#第十五节" class="headerlink" title="第十五节"></a>第十五节</h2><ul><li>类名、分类名都应该加上相应的前缀，如果使用三方库编写自己的代码并分发尤其需要注意重复符号问题</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled2.png"></p><h2 id="第十六节"><a href="#第十六节" class="headerlink" title="第十六节"></a>第十六节</h2><ul><li>在类中实现一个designated initializer，尽量在文档中指明初始化需要调用该方法</li><li>若designated initializer不同于超类则需覆写超类对应方法</li><li>如果超类的初始化方法不适用于子类应覆写超类方法并抛出异常</li></ul><h2 id="第十七节"><a href="#第十七节" class="headerlink" title="第十七节"></a>第十七节</h2><ul><li>实现description方法能够返回一个有意义的字符串来描述实例，需要打印出类的名字和指针地址因为有时候会用到</li><li>使用NSDictionary来编写description方法使代码更容易维护</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled3.png"></p><ul><li>在调试时打印更为详尽的对象描述信息应实现debugDescription方法</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled4.png"></p><h2 id="第十八节"><a href="#第十八节" class="headerlink" title="第十八节"></a>第十八节</h2><ul><li>尽量创建不可变对象，把对外公开的属性设置为只读且在必要时对外公布属性</li><li>某属性仅用于对象内部修改应将其从readonly改为readwrite属性</li><li>可变的collection不应作为属性公开，而应提供相关方法修改可变的collection</li></ul><h2 id="第十九节"><a href="#第十九节" class="headerlink" title="第十九节"></a>第十九节</h2><p>如果从其他框架中继承子类务必遵循命名惯例，如从UIView中继承自定义子类则类名末尾词为View，若创建自定义委托协议末尾应跟上Delegate一词。</p><p><img src="http://image.stephenfang.me/mweb/Untitled5.png"></p><h2 id="第二十节"><a href="#第二十节" class="headerlink" title="第二十节"></a>第二十节</h2><ul><li>适当给私有方法加上前缀可以很容易将其与公共方法进行区分</li><li>不应使用一个下划线做私有方法的前缀，如 _resetViewController 方法已经被苹果实现</li></ul><h2 id="第二十一节"><a href="#第二十一节" class="headerlink" title="第二十一节"></a>第二十一节</h2><ul><li>Objective-C对于异常采取的态度为：只有在极为罕见的情况下才抛出异常，并在异常抛出后无需考虑恢复问题，应用程序此时应该退出。异常应该运用于极其严重的问题</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled6.png"></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">BOOL</span>)doSomething:(<span class="built_in">NSError</span>**) error</span><br><span class="line"></span><br><span class="line">- (<span class="type">BOOL</span>)doSomething:(<span class="built_in">NSError</span>**) error &#123;</span><br><span class="line"><span class="comment">// do something that may cause an error</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="comment">/* there was an error */</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> (error) &#123;</span><br><span class="line">*error = [<span class="built_in">NSErrorerrorwithDomain</span>:domain code:code userInfo:userInfo];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSError</span> *error = <span class="literal">nil</span>;</span><br><span class="line"><span class="type">BOOL</span> ret = [object doSomething: &amp;error];</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">     <span class="comment">// handle error </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.stephenfang.me/mweb/Untitled7.png"></p><p>传递给方法的是个指针，指针本身指向另一个指向NSError对象的指针，或认为其为一个直接指向NSError对象的指针。在 ARC 中，指针所指向的对象会在方法执行完毕后自动释放。</p><h2 id="第二十二节"><a href="#第二十二节" class="headerlink" title="第二十二节"></a>第二十二节</h2><ul><li>使自己的类支持拷贝操作需要实现NSCopying协议，该协议只有一个方法且不必担心zone参数。覆写copy方法真正需要实现的是copyWithZone方法。</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">id</span>)copyWithZone:(<span class="built_in">NSZone</span>*)zone</span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>)copyWithZone:(<span class="built_in">NSZone</span>*)zone &#123;</span><br><span class="line">STFPerson *<span class="keyword">copy</span> = [[<span class="keyword">self</span> <span class="keyword">class</span>] allocWithZone:zone]initWithFirstName:_firstName andLastName:_lastName];</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">copy</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在可变对象上调用copy会返回一个不可变类的实例，可能会把NSMutableArray对象当作NSArray返回，为了安全起见使用copy和mutableCopy这两个方法复制对象</p></li><li><p>深拷贝与浅拷贝</p><ul><li>深拷贝：拷贝对象自身时一并拷贝其底层数据，需要新增一个专门执行深拷贝的方法</li><li>浅拷贝：只拷贝容器对象本身不拷贝其中数据；Foundation框架所有collection类执行拷贝的默认情况；实现copyWithZone方法</li><li>图解：</li></ul><p> <img src="http://image.stephenfang.me/mweb/Untitled8.png"></p></li></ul><h2 id="第二十三节"><a href="#第二十三节" class="headerlink" title="第二十三节"></a>第二十三节</h2><p>   <img src="http://image.stephenfang.me/mweb/Untitled9.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled10.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled11.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled12.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled13.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled14.png"></p><p>存放委托对象的属性需要为weak（在对象销毁时自动清空）或unsafe_unretained（不需要自动清空）。</p><p>   <img src="http://image.stephenfang.me/mweb/Untitled15.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled16.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled17.png"></p><ul><li>某个对象从另一个对象获取数据可以使用委托模式，亦成为数据源模式，数据的流动如上图所示</li><li>如果有必要可以实现有段位的结构体将委托对象是否能响应相关协议的信息缓存至其中</li></ul><h2 id="第二十四条"><a href="#第二十四条" class="headerlink" title="第二十四条"></a>第二十四条</h2><ul><li><p>通过分类机制将代码划分为易于管理的小块</p><p> <img src="http://image.stephenfang.me/mweb/Untitled18.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled19.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled20.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled21.png"></p></li><li><p>可以创建名为Private的分类并将私有方法放在里面，这个分类的方法只在类和框架内部使用无需对外公布</p></li></ul><h2 id="第二十五条"><a href="#第二十五条" class="headerlink" title="第二十五条"></a>第二十五条</h2><ul><li><p>向第三方类中添加分类时给分类名与方法名加上前缀</p><p> <img src="http://image.stephenfang.me/mweb/Untitled22.png"></p></li></ul><h2 id="第二十六条"><a href="#第二十六条" class="headerlink" title="第二十六条"></a>第二十六条</h2><ul><li><p>在实现分类时所有属性都应该定义在主接口内，类所封装的所有数据都应该定义在主接口内</p><p> <img src="http://image.stephenfang.me/mweb/Untitled23.png"></p></li></ul><h2 id="第二十七条"><a href="#第二十七条" class="headerlink" title="第二十七条"></a>第二十七条</h2><ul><li><p>class-continuation 分类中可以定义方法和实例变量，如下方式中_anotherInstanceVariable 是隐藏的状态</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">STFPerson</span>() </span>&#123;</span><br><span class="line"><span class="built_in">NSString</span> *_anInstanceVariable;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Methods declaration</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">STFPerson</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> _anotherInstanceVariable;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Methods implementation </span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p> <img src="http://image.stephenfang.me/mweb/Untitled24.png"></p></li><li><p>WebKit、CoreAnimation 底层大部分代码用C++编写，对外展示的为Objective-C接口</p><p> <img src="http://image.stephenfang.me/mweb/Untitled25.png"></p></li><li><p>上图方式可以随意调用setFirstName与setLastName方法与点语法设置属性，同时外界无法修改对象，完成了类型的拓展</p><p> <img src="http://image.stephenfang.me/mweb/Untitled26.png"></p><ul><li>不需要在公共接口中声明类遵从了私有协议，而应该改到 class-continuation 分类内进行声明</li></ul></li></ul><h2 id="第二十八条"><a href="#第二十八条" class="headerlink" title="第二十八条"></a>第二十八条</h2><ul><li><p>协议可以在某种程度上提供匿名类型，具体的对象类型淡化成为遵从某个协议的id类型，协议离规定对象应该实现的方法。下图中与数据库连接相关的类名称就无法泄漏</p><p>  <img src="http://image.stephenfang.me/mweb/Untitled27.png"></p></li><li><p>使用匿名对象实现类型名称的隐藏，需要注意的是对象需要能够响应定义在协议中的方法</p></li><li><p>下图中其中sectionInfo为匿名对象，把section数组中返回的内部状态对象视为遵从NSFetchedResultsSectionInfo的匿名对象，隐藏了相关实现细节。</p><p>  <img src="http://image.stephenfang.me/mweb/Untitled28.png"></p></li></ul><h2 id="第二十九条"><a href="#第二十九条" class="headerlink" title="第二十九条"></a>第二十九条</h2><ul><li><p>对象创建完成后引用计数至少为1，如果需要保留该对象需要调用retain方法，如果不再需要该对象则调用release、autorelease方法，当引用计数归零时对象被回收</p><p>  <img src="http://image.stephenfang.me/mweb/Untitled29.png"></p></li><li><p>为了避免使用无效对象一般在完成调用release之后清空指针，保证不会出现指向无效对象的指针</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSNumber</span> *number = [[<span class="built_in">NSNumber</span> alloc]initWithInt: <span class="number">1234</span>];</span><br><span class="line">[array addObject: number];</span><br><span class="line">[number release];</span><br><span class="line">number = <span class="literal">nil</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="第三十条"><a href="#第三十条" class="headerlink" title="第三十条"></a>第三十条</h2><ul><li>ARC会自动执行retain、release、autorelease等操作，不能直接对这些方法（还包括dealloc）进行调用</li><li>ARC在调用这些方法并不通过Objective-C消息派发机制，而是直接调用底层C语言版本，能够带来更好的性能</li><li>若方法名以以下的几个四个词语开头则表示返回的对象归调用者所有，反之返回的对象会自动释放<ul><li>copy</li><li>mutableCopy</li><li>new</li><li>alloc</li></ul></li></ul><h2 id="第三十一条"><a href="#第三十一条" class="headerlink" title="第三十一条"></a>第三十一条</h2><p>   <img src="http://image.stephenfang.me/mweb/Untitled30.png"></p><ul><li>如果对象持有文件描述符等系统资源，应该专门写一个方法释放此类资源，用完使用close方法</li><li>执行异步任务的方法和只能在正常状态下执行的方法不应在dealloc中调用</li></ul><h2 id="第三十二条"><a href="#第三十二条" class="headerlink" title="第三十二条"></a>第三十二条</h2><ul><li><p>ARC不生成安全处理异常所需的清理代码，开启编译器标志后可以生成这种代码但是会导致应用程序变大，且会降低运行效率</p><p> <img src="http://image.stephenfang.me/mweb/Untitled31.png"></p></li></ul><h2 id="第三十三条"><a href="#第三十三条" class="headerlink" title="第三十三条"></a>第三十三条</h2><ul><li><p>当指向EOCClassA的实例引用移除后unsafe_unretained属性仍然指向已经回收的实例，而weak属性指向nil</p><p>  <img src="http://image.stephenfang.me/mweb/Untitled32.png"></p></li></ul><h2 id="第三十四条"><a href="#第三十四条" class="headerlink" title="第三十四条"></a>第三十四条</h2><p>系统会自动创建一些线程，如主线程或GCD机制中的线程都有自动释放池，这些线程都有autoreleasepool，每次执行event loop就会将其清空</p><p>   <img src="http://image.stephenfang.me/mweb/Untitled33.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled34.png"></p><h2 id="第三十五条"><a href="#第三十五条" class="headerlink" title="第三十五条"></a>第三十五条</h2><ul><li>系统在回收对象时可以将其转化为僵尸对象，通过环境变量NSZombieEnabled可以开启该功能，或在Xcode中开启</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled35.png"></p><ul><li>系统修改对象的isa指针指向特殊的僵尸类可以时该对象成为僵尸对鲜花，僵尸类能够响应所有的selector，在打印一条包含消息内容及接受者的消息后终止应用程序</li></ul><h2 id="第三十六条"><a href="#第三十六条" class="headerlink" title="第三十六条"></a>第三十六条</h2><p>在 ARC 下调用查询对象当前引用计数的方法会触发崩溃</p><pre><code><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSUInteger</span>)retainCount</span><br></pre></td></tr></table></figure></code></pre><p>事实上该方法不应该调用，方法返回的retainCount是某个给定时间点上的数值，并未考虑系统会稍后清空自动释放池，无法反应对象生命期的全貌。</p><h2 id="第三十七条"><a href="#第三十七条" class="headerlink" title="第三十七条"></a>第三十七条</h2><ul><li><p>Block与定义它的函数共享同一个范围内的信息，块自有其相关类型，可以将块赋值给变量并使用它</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> (^someBlock) () = ^ &#123;</span><br><span class="line"><span class="comment">// Block implementation</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> other = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> (^addBlock) (<span class="type">int</span> a, <span class="type">int</span> b) = ^ (<span class="type">int</span> a, <span class="type">int</span> b) &#123;</span><br><span class="line"><span class="keyword">return</span> other + a + b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> sum = addBlock(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><ul><li>需要在Block内修改的变量需要加上 _block 修饰符，如果将块定义在Objective-C类的实例方法中，除了可以访问类的所有的实例变量外还可以使用self变量且无需添加_block。</li><li>定义Block的时候分配的内存区域在栈上，即块只在定义的范围内有效，可以创建不会捕捉任何状态的全局块</li></ul></li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled36.png"></p><p><img src="http://image.stephenfang.me/mweb/Untitled37.png"></p><h2 id="第三十八条"><a href="#第三十八条" class="headerlink" title="第三十八条"></a>第三十八条</h2><p><img src="http://image.stephenfang.me/mweb/Untitled38.png"></p><ul><li><p>以下展示了SDWebImage中Block的写法</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">void</span>(^SDWebImageDownloaderProgressBlock)(<span class="built_in">NSUInteger</span> receivedSize, <span class="type">long</span> <span class="type">long</span> expectedSize);</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">void</span>(^SDWebImageDownloaderCompletedBlock)(<span class="built_in">UIImage</span> *image, <span class="built_in">NSData</span> *data, <span class="built_in">NSError</span> *error, <span class="type">BOOL</span> finished);</span><br><span class="line"></span><br><span class="line">****- (<span class="type">void</span>)setImageWithURL:(<span class="built_in">NSURL</span> *)url placeholderImage:(<span class="built_in">UIImage</span> *)placeholder options:(SDWebImageOptions)options progress:(SDWebImageDownloaderProgressBlock)progressBlock completed:(SDWebImageCompletedBlock)completedBlock;</span><br><span class="line">- (<span class="type">id</span>&lt;SDWebImageOperation&gt;)downloadImageWithURL:(<span class="built_in">NSURL</span> *)url</span><br><span class="line">                                        options:(SDWebImageDownloaderOptions)options</span><br><span class="line">                                       progress:(SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                                      completed:(SDWebImageDownloaderCompletedBlock)completedBlock;</span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>&lt;SDWebImageOperation&gt;)downloadImageWithURL:(<span class="built_in">NSURL</span> *)url</span><br><span class="line">                                timeOutInterval:(<span class="built_in">NSTimeInterval</span>)timeOutInterval</span><br><span class="line">                                        options:(SDWebImageDownloaderOptions)options</span><br><span class="line">                                       progress:(SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                                      completed:(SDWebImageDownloaderCompletedBlock)completedBlock;</span><br></pre></td></tr></table></figure></li></ul><h2 id="第三十九条"><a href="#第三十九条" class="headerlink" title="第三十九条"></a>第三十九条</h2><ul><li><p>简洁程度上Delegate与Block的对比</p><p> <img src="http://image.stephenfang.me/mweb/Untitled39.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled40.png"></p></li><li><p>处理多个请求时Delegate与Block的对比</p><p> <img src="http://image.stephenfang.me/mweb/Untitled41.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled42.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled43.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled44.png"></p></li><li><p>在处理请求时采用两个独立的处理Block（1&#x2F;2）</p><p> <img src="http://image.stephenfang.me/mweb/Untitled45.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled46.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled47.png"></p></li><li><p>在处理请求时采用同一个处理Block，令Block更为灵活但更为冗长</p><p> <img src="http://image.stephenfang.me/mweb/Untitled48.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled49.png"></p></li></ul><h2 id="第四十条"><a href="#第四十条" class="headerlink" title="第四十条"></a>第四十条</h2><p>大部分网络通信库写法</p><p>   <img src="http://image.stephenfang.me/mweb/Untitled50.png"></p><p>为了使得在下载完成后通过以下方法执行调用者指定的Block，需要将completion handler保存至实例变量，一旦运行完completion handler之后没有必要对其进行保留，从而避免出现retain cycle</p><p>   <img src="http://image.stephenfang.me/mweb/Untitled51.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled52.png"></p><h2 id="第四十一条"><a href="#第四十一条" class="headerlink" title="第四十一条"></a>第四十一条</h2><ul><li><p>串行队列，将读取操作与写入操作安排到同个队列中保证数据同步，可以将设置方法由同步派发改为异步执派发</p><p> <img src="http://image.stephenfang.me/mweb/Untitled53.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled54.png"></p><ul><li>并发队列，读取与写入操作可以随时执行</li></ul><p> <img src="http://image.stephenfang.me/mweb/Untitled55.png"></p><p>  创建栅栏使得barrier块单独执行不与其他Block并行，对并发队列有意义，因为串行Block按顺序逐个执行</p><p> <img src="http://image.stephenfang.me/mweb/Untitled56.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled57.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled58.png"></p></li></ul><h2 id="第四十二条"><a href="#第四十二条" class="headerlink" title="第四十二条"></a>第四十二条</h2><ul><li><p>performSelector接受的参数类型为id，限定了传入参数必须是对象，不能是整数或者浮点数，并且最多只能接受两个参数</p><p> <img src="http://image.stephenfang.me/mweb/Untitled59.png"></p></li><li><p>延后执行某项任务，优先使用GCD的方式</p><p> <img src="http://image.stephenfang.me/mweb/Untitled60.png"></p></li><li><p>把任务放到主线程上执行，把任务封装至Block中用GCD相关方法更为合适</p><p> <img src="http://image.stephenfang.me/mweb/Untitled61.png"></p></li><li><p>performSelector在内存管理方面存在缺失，无法确定将执行的Selector具体是什么</p></li></ul><h2 id="第四十三条"><a href="#第四十三条" class="headerlink" title="第四十三条"></a>第四十三条</h2><ul><li><p>GCD是纯C的API，操作队列是Objective-C的对象</p></li><li><p>Block是轻量级的书籍结构而Operation是重量级的Objective-C对象</p></li><li><p>在执行后台任务时GCD并不一定是最佳方式</p></li><li><p>使用NSOperation与NSOperationQueue有以下好处，能够实现纯GCD具备的绝大部分功能</p><p> <img src="http://image.stephenfang.me/mweb/Untitled62.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled63.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled64.png"></p></li><li><p>NSNotificationCenter 的 addObserverForName: 方法接受的参数是块而不是Selector</p><p> <img src="http://image.stephenfang.me/mweb/Untitled65.png"></p></li><li><p>确定哪一种方法的最好方式是测试性能</p><h2 id="第四十四条"><a href="#第四十四条" class="headerlink" title="第四十四条"></a>第四十四条</h2></li><li><p>dispatch group 能够将任务分组，调用者可以等待这组任务执行完毕同时也可以在提供回调函数之后继续执行</p></li><li><p>如下函数是dispatch_async的变体</p></li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled66.png"></p><ul><li>如下函数用于等待 dispatch group 执行完毕，timeout 参数表示阻塞时间，若执行时间短于timeout返回0</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled67.png"></p><ul><li>如下函数中可以传入在特定线程上执行的Block</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled68.png"></p><ul><li>令数组每个对象都执行某个任务，并且等待每个任务都执行完毕可以使用如下GCD特性</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled69.png"></p><ul><li>若当前线程不阻塞可以使用notify函数取代wait</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled70.png"></p><ul><li>区分任务的优先级放置于不同的线程执行，同时将所有任务归于一个dispatch group，并且在执行完毕后获得通知（并发队列）</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled71.png"></p><ul><li>将任务提交到串行队列中并用dispatch group 跟踪执行情况</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled72.png"></p><p><img src="http://image.stephenfang.me/mweb/Untitled73.png"></p><h2 id="第四十五条"><a href="#第四十五条" class="headerlink" title="第四十五条"></a>第四十五条</h2><ul><li><p>常用的一种共享单例的方法</p><p> <img src="http://image.stephenfang.me/mweb/Untitled74.png"></p></li><li><p>使用GCD实现共享单例的方法</p><p> <img src="http://image.stephenfang.me/mweb/Untitled75.png"></p></li><li><p>使用 dispatch_once 能够简化代码并且彻底保证线程安全开发者无需关心加锁或同步，所有问题都由GCD在底层进行处理，static 作用域能够保证编译器在每次执行该方法时复用该变量而不是重复创建</p></li></ul><h2 id="第四十六条"><a href="#第四十六条" class="headerlink" title="第四十六条"></a>第四十六条</h2><ul><li>dispatch_get_current_queue 函数尽量不要使用</li></ul><h2 id="第四十七条"><a href="#第四十七条" class="headerlink" title="第四十七条"></a>第四十七条</h2><ul><li><p>框架指一系列代码被封装为动态库，并且在其中放入描述接口的头文件，iOS平台的系统框架仍然采用了动态库</p></li><li><p>iOS应用程序不允许在其中包含动态库于是就出现了静态库</p></li><li><p>关于静态库与动态库的了解可以参考 <a href="https://juejin.cn/post/6844904031937101838">细说iOS静态库和动态库</a></p></li><li><p>Cocoa 本身并不是框架而是集成了一批创建应用程序时需要用到的框架</p></li><li><p>Objective-C编程的一个重要特点是经常需要用到底层的C语言级API</p></li><li><p>CoreAnimation 使用Objective-C进行编写，而 CoreGraphics 框架采用C语言进行编写，两者均为 UI 框架之下的一等框架</p></li></ul><h2 id="第四十八条"><a href="#第四十八条" class="headerlink" title="第四十八条"></a>第四十八条</h2><ul><li><p>遍历方式</p><ul><li>for循环</li></ul><p> <img src="http://image.stephenfang.me/mweb/Untitled76.png"></p><p>  字典与 set 均无顺序，无法根据下标访问数值。于是需要获取字典内所有键或 set 内所有对象，从而产生空间上的额外开销。然而执行反向遍历时 for 循环会更为方便。</p><ul><li>NSEnumerator</li></ul>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dictionary</span></span><br><span class="line"><span class="built_in">NSDictionary</span> *dict = <span class="comment">/* ... */</span>;</span><br><span class="line"><span class="built_in">NSEnumerator</span> *enumerator = [dict keyEnumerator];</span><br><span class="line"><span class="type">id</span> key;</span><br><span class="line"><span class="keyword">while</span> ((key = [enumerator nextObject]) != <span class="literal">nil</span>) &#123;</span><br><span class="line"><span class="type">id</span> value = dict[key];</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set</span></span><br><span class="line"><span class="built_in">NSSet</span> *set = <span class="comment">/* ... */</span>;</span><br><span class="line"><span class="built_in">NSEnumerator</span> *enumerator = [set objectEnumerator];</span><br><span class="line"><span class="type">id</span> object;</span><br><span class="line"><span class="keyword">while</span> ((object = [enumerator nextObject]) != <span class="literal">nil</span>) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array</span></span><br><span class="line"><span class="built_in">NSArray</span> *array = <span class="comment">/* ... */</span>;</span><br><span class="line"><span class="built_in">NSEnumerator</span> *enumerator = [array reverseObjectEnumerator];</span><br><span class="line"><span class="type">id</span> object;</span><br><span class="line"><span class="keyword">while</span> ((object = [enumerator nextObject]) != <span class="literal">nil</span>) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  对于所有的collection都可以采用这套语法，在读法上更容易被理解</p><ul><li>for in 快速遍历</li></ul>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dictionary</span></span><br><span class="line"><span class="built_in">NSDictionary</span> *dict = <span class="comment">/* ... */</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">id</span> key <span class="keyword">in</span> dict) &#123;</span><br><span class="line"><span class="type">id</span> value = dict[key];</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set</span></span><br><span class="line"><span class="built_in">NSSet</span> *set = <span class="comment">/* ... */</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">id</span> object <span class="keyword">in</span> set) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array</span></span><br><span class="line"><span class="built_in">NSArray</span> *array = <span class="comment">/* ... */</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">id</span> object <span class="keyword">in</span> array) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">id</span> object <span class="keyword">in</span> [array reverseObjectEnumerator]) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  某个支持快速遍历的类的对象遵从 NSFastEnumeration 协议可以实现对象的迭代，而NSEnumerator 也实现了该协议，该遍历方法无法获取遍历操作针对的下标。</p><ul><li>基于Block的遍历</li></ul>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dictionary</span></span><br><span class="line"><span class="built_in">NSDictionary</span> *dict = <span class="comment">/* ... */</span>;</span><br><span class="line">[array enumerateKeysAndObjectsUsingBlock:</span><br><span class="line">^(<span class="type">id</span> key, <span class="type">id</span> object, <span class="type">BOOL</span> *stop) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line"><span class="keyword">if</span> (shouldStopHere) &#123;</span><br><span class="line">*stop = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set</span></span><br><span class="line"><span class="built_in">NSSet</span> *set = <span class="comment">/* ... */</span>;</span><br><span class="line">[array enumerateObjectsUsingBlock:</span><br><span class="line">^(<span class="type">id</span> object, <span class="type">BOOL</span> *stop) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line"><span class="keyword">if</span> (shouldStopHere) &#123;</span><br><span class="line">*stop = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array</span></span><br><span class="line"><span class="built_in">NSArray</span> *array = <span class="comment">/* ... */</span>;</span><br><span class="line">[array enumerateObjectsUsingBlock:</span><br><span class="line">^(<span class="type">id</span> object, <span class="built_in">NSUInteger</span> idx, <span class="type">BOOL</span> *stop) &#123;</span><br><span class="line"><span class="comment">// do something here</span></span><br><span class="line"><span class="keyword">if</span> (shouldStopHere) &#123;</span><br><span class="line">*stop = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>  使得遍历能够从Block中获取信息，并且可以在遍历数组获取数组的下标。</p><p>  NSEnumerationOptions 类型为enum，如果开启了NSEnumerationConcurrent 底层会使用GCD处理出发执行事宜，采用其他方法很难实现。</p></li></ul><h2 id="第四十九条"><a href="#第四十九条" class="headerlink" title="第四十九条"></a>第四十九条</h2><ul><li><p>使用桥接技术可以实现定义在Foundation框架内的Objective-C类与CoreFoundation 框架中的 C 数据结构的相互转换</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *anNSArray = @[@<span class="number">1</span>, @<span class="number">2</span>, @<span class="number">3</span>, @<span class="number">4</span>, @<span class="number">5</span>];</span><br><span class="line"><span class="built_in">CFArrayRef</span> *aCGArray = (__bridge <span class="built_in">CFArrayRef</span>)anNSArray;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@&quot;size of array = %li&quot;</span>, <span class="built_in">CFArrayGetCount</span>(aCFArray)); </span><br><span class="line"></span><br><span class="line">gradientLayer.colors = @[(__bridge <span class="type">id</span>)[<span class="built_in">UIColor</span> ne_colorWithHexString:<span class="string">@&quot;000000&quot;</span> alpha:<span class="number">0.95</span>].CGColor,</span><br><span class="line">                                            (__bridge <span class="type">id</span>)[<span class="built_in">UIColor</span> ne_colorWithHexString:<span class="string">@&quot;000000&quot;</span> alpha:<span class="number">0.95</span>].CGColor,</span><br><span class="line">                                            (__bridge <span class="type">id</span>)[<span class="built_in">UIColor</span> ne_colorWithHexString:<span class="string">@&quot;000000&quot;</span> alpha:<span class="number">0.72</span>].CGColor,</span><br><span class="line">                                            (__bridge <span class="type">id</span>)[<span class="built_in">UIColor</span> ne_colorWithHexString:<span class="string">@&quot;000000&quot;</span> alpha:<span class="number">0.45</span>].CGColor,</span><br><span class="line">                                            (__bridge <span class="type">id</span>)[<span class="built_in">UIColor</span> ne_colorWithHexString:<span class="string">@&quot;000000&quot;</span> alpha:<span class="number">0.28</span>].CGColor,</span><br><span class="line">                                            ]; </span><br></pre></td></tr></table></figure></li><li><p>__bridge 含义为ARC具备该对象的所有权，__bridge_retained表示ARC交出该对象的所有权， 通过__bridge告诉ARC如何处理转换涉及的Objective-C对象</p></li><li><p>Foundation 框架中的 Objective-C 类具备的某些功能是 CoreFoundation 框架中的 C语言数据结构不具备的</p></li></ul><h2 id="第五十条"><a href="#第五十条" class="headerlink" title="第五十条"></a>第五十条</h2><ul><li>NSCache 在系统资源耗尽时能够自动删减缓存，采用LRU策略</li><li>NSCache并不会直接拷贝键，而是保留键</li><li>NSCache是线程安全的，多个线程可以同时访问NSCache</li><li>NSCache可以设置针对对象个数以及总成本的上限</li></ul><p>缓存的一般用法</p><p>   <img src="http://image.stephenfang.me/mweb/Untitled77.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled78.png"></p><p>加入 NSPurgeable 的缓存用法</p><p>   <img src="http://image.stephenfang.me/mweb/Untitled79.png"></p><p>   <img src="http://image.stephenfang.me/mweb/Untitled80.png"></p><ul><li>重复计算会带来性能开销的数据值得被放入缓存，从而提高应用程序的响应速度</li><li>NSPurgeableData 与 NSCache 一起使用能够实现自动清除数据的功能</li></ul><h2 id="第五十一条"><a href="#第五十一条" class="headerlink" title="第五十一条"></a>第五十一条</h2><ul><li>load 方法并不像普通的方法那样，她不遵从继承规则，如果某个类本身不实现load方法那么无论其各级超类是否实现此方法系统都不会调用</li><li>load 与 initialize 方法务必精简实现，因为会产生阻塞从而使得应用程序无响应</li><li>initialize 方法在程序首次用该类前调用一次，并且使用runtime进行调用，只应该用来设置内部数据而不应该调用其他方法</li><li>如果某个类本身不实现 initialize 方法然而超类完成了就会调用超类的实现方法，如下图中初始化子类后由于该类未覆写该方法于是需要执行父类的实现代码，于是得到了通常的子类实现方法</li></ul><p><img src="http://image.stephenfang.me/mweb/Untitled81.png"></p><p><img src="http://image.stephenfang.me/mweb/Untitled82.png"></p><p><img src="http://image.stephenfang.me/mweb/Untitled83.png"></p><h2 id="第五十二条"><a href="#第五十二条" class="headerlink" title="第五十二条"></a>第五十二条</h2><ul><li><p>NSTimer 对象会保留目标直到计时器失效，需要调用invalidate方法令其失效</p><p> <img src="http://image.stephenfang.me/mweb/Untitled84.png"></p><p> <img src="http://image.stephenfang.me/mweb/Untitled85.png"></p></li><li><p>反复执行的计时器容易引入retain cycle，可以使用 Block 的方式打破，需要注意的是必须创建分类来加入相关实现代码</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;准备开始写 Objective-C 之前花了一些时间重新阅读这本经典的《Effective Objective-C》，在阅读的过程中对重点内容进行了一些摘录，在方便自己复习的同时将相关内容在博客分享出来供参考。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://stephenfang.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Xcode" scheme="https://stephenfang.me/tags/Xcode/"/>
    
    <category term="iOS" scheme="https://stephenfang.me/tags/iOS/"/>
    
    <category term="Objective-C" scheme="https://stephenfang.me/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>开发者应该知道的 UIKit 新变化 | WWDC23</title>
    <link href="https://stephenfang.me/2023/07/16/WWDC23-UIKit/"/>
    <id>https://stephenfang.me/2023/07/16/WWDC23-UIKit/</id>
    <published>2023-07-16T09:15:00.000Z</published>
    <updated>2023-07-24T13:38:31.404Z</updated>
    
    <content type="html"><![CDATA[<p>WWDC 23 大家的目光都被 visionOS 吸引了，作为 UIKit 开发者关注一下目前今年的 <a href="https://developer.apple.com/videos/play/wwdc2022/10068/">What’s New in UIKit</a> session 实为必要。<del>尽管今年更新的内容似乎并没有那么吸引人。</del></p><p>笔者参照官方给出的代码片段复现了一些简单页面实现，<strong>并且将代码整合到仓库</strong><a href="https://github.com/iamStephenFang/WhatsNewInUIKit">WhatsNewInUIKit</a>，希望可以帮助你更快上手和理解这些新特性。笔者还按照业务理解和适配进度的优先级，对 session 内容进行了重新排序和整理。</p><p>总的来说，今年的更新主要包括以下几个方面：</p><ul><li>开发体验</li><li>通用组件</li><li>国际化</li><li>iPadOS 适配</li></ul><span id="more"></span><blockquote><p>💡 2022年笔者在云音乐组内和博客分享了 <a href="https://stephenfang.me/2022/07/24/WWDC22-UIKit/">WWDC22 UIKit 新功能</a>，有兴趣可以先回顾一下这篇文章，这个系列会一直保持更新。</p></blockquote><h2 id="开发体验"><a href="#开发体验" class="headerlink" title="开发体验"></a>开发体验</h2><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p>新版本的 Xcode 中新增了 <code>#Preview()</code>这个宏，终于，在用户界面开发上 UIKit 也能够获得和 SwiftUI 一样的预览体验了。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.27.18.png" alt="CleanShot 2023-07-17 at 14.27.18"></p><p>开发者可以自定义预览的视图的名称，下面的 Demo 中使用了 <code>#Preview()</code>并指定预览的名称为 <code>NumberVC</code>。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NumberViewController</span>: <span class="title class_">UIViewController</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#<span class="type">Preview</span>(<span class="string">&quot;NumberVC&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">NumberViewController</span>()</span><br><span class="line">    <span class="keyword">return</span> controller</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了快速预览 <code>UIViewController</code> ，开发者还可以在面板快速预览<code>UIView</code>及其子类。实际体验下来这项功能还是非常实用的，可以在一个面板上以集合的形式显示查看不同机型上的显示效果。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.32.49.png" alt="CleanShot 2023-07-17 at 14.32.49"></p><p>开发者可以在一个代码文件下创建多个<code>#Preview()</code>宏，所有预览将展示在 Preview 页面的顶部很方便切换。这个宏的定义长得像这样，需要注意的是这个宏仅在新版本的 Xcode 和系统上生效。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">17.0</span>, <span class="keyword">macOS</span> <span class="number">14.0</span>, <span class="keyword">tvOS</span> <span class="number">17.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="keyword">@freestanding</span>(declaration) <span class="keyword">public</span> <span class="keyword">macro</span> <span class="title function_">Preview</span>(<span class="keyword">_</span> <span class="params">name</span>: <span class="type">String</span>? <span class="operator">=</span> <span class="literal">nil</span>, <span class="params">traits</span>: <span class="type">PreviewTrait</span>&lt;<span class="type">Preview</span>.<span class="type">ViewTraits</span>&gt;..., <span class="params">body</span>: <span class="keyword">@escaping</span> () -&gt; <span class="type">UIViewController</span>) <span class="operator">=</span> #externalMacro(module: <span class="string">&quot;PreviewsMacros&quot;</span>, type: <span class="string">&quot;Common&quot;</span>)</span><br></pre></td></tr></table></figure><p>至于 Preview 实现的原理可以移步<a href="https://saitjr-blog.feishu.cn/docs/doccngUda5tsKD7J1ORyTGh9kog">这篇文章</a>查看。</p><h3 id="viewIsAppearing"><a href="#viewIsAppearing" class="headerlink" title="viewIsAppearing"></a><code>viewIsAppearing</code></h3><p><code>viewIsAppearing</code>的触发时机可以让开发者更方便的对用户界面刷新进行操作，关于这个生命周期你需要知道的有以下几点：</p><ul><li><p>向前兼容到 iOS 13，不少应用的最低 target 在今年都有机会升级到这个版本</p></li><li><p><code>viewIsAppearing</code>只会触发一次，不会像<code>layoutSubviews</code>那样被多次调用</p></li><li><p>时机介于<code>viewWillAppear</code>与<code>viewDidAppear</code>之间，在view transition 之前<br>  <img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.37.02.png" alt="CleanShot 2023-07-17 at 14.37.02"></p></li><li><p><code>viewWillAppear</code>与<code>viewDidAppear</code>适用于不依赖视图的结对调用，例如注册数据库通知以及销毁注册<br>  <img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.40.19.png" alt="CleanShot 2023-07-17 at 14.40.19"></p></li></ul><h3 id="SF-Symbols-动画"><a href="#SF-Symbols-动画" class="headerlink" title="SF Symbols 动画"></a>SF Symbols 动画</h3><p>之前听《Anyway.FM》播客主播有提到 SF Symbols 可能是 Apple 在设计界做出的最大贡献，今年的 SF Symbols 5 带来了通用动画这一重要更新，对独立开发来说又是一大利好。</p><p>动画的形式可以大体分为两种，一种是单次动画，一种是持续动画，效果也提供了多种选择。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单次 Bounce 动画</span></span><br><span class="line">imageView.addSymbolEffect(.bounce)</span><br></pre></td></tr></table></figure><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.42.45.gif" alt="CleanShot 2023-07-17 at 14.42.45"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单次 Pulse 动画</span></span><br><span class="line">imageView.addSymbolEffect(.pulse)</span><br></pre></td></tr></table></figure><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.45.17.gif" alt="CleanShot 2023-07-17 at 14.45.17"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单次缩放动画</span></span><br><span class="line">imageView.addSymbolEffect(.scale)</span><br></pre></td></tr></table></figure><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.46.33.gif" alt="CleanShot 2023-07-17 at 14.46.33"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 持续可变渐变动画</span></span><br><span class="line">imageView.addSymbolEffect(.variableColor.iterative)</span><br><span class="line">imageView.removeSymbolEffect(ofType:.variableColor)</span><br></pre></td></tr></table></figure><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.47.53.gif" alt="CleanShot 2023-07-17 at 14.47.53"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 符号切换动画</span></span><br><span class="line">imageView.setSymbolImage(<span class="type">UIImage</span>(systemName: <span class="string">&quot;swift&quot;</span>)<span class="operator">!</span>, contentTransition: .replace.offUp)</span><br></pre></td></tr></table></figure><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2014.50.55.gif" alt="CleanShot 2023-07-17 at 14.50.55"></p><p>SF Symbols 为跨 UI 框架提供了统一 API，为自定义符号提供了复合层注解。如果你对新增的功能感兴趣可以观看<a href="https://developer.apple.com/videos/play/wwdc2023/10197/">这个session</a>，上述的几种动画用例代码都可以<a href="https://github.com/iamStephenFang/WhatsNewInUIKit">WhatsNewInUIKit</a>中找到。</p><h3 id="Trait-System"><a href="#Trait-System" class="headerlink" title="Trait System"></a>Trait System</h3><p>如果你没有接触过全局样式开发，可能会对 Trait 这套框架感到陌生。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.03.39.png" alt="CleanShot 2023-07-17 at 15.03.39"></p><p><code>UITraitCollection</code> 包含许多系统特征，例如用户界面样式（切换日间&#x2F;夜间主题）、水平和垂直尺寸（横屏&#x2F;竖屏布局）等等。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.01.16.png" alt="CleanShot 2023-07-17 at 15.01.16"></p><p>根据<a href="https://developer.apple.com/wwdc23/10057">Unleash the UIKit trait system</a>的说法，有两点需要开发者注意:</p><ul><li><p>View controllers 从其 view 的 superview 继承trait collection，而不是直接从其parent view controller继承。</p></li><li><p>如果在 view 添加到 hierarchy 之前访问 view controller 的 trait collection，那么 view controller 将获取不到最新的traits，导致<code>viewWillAppear</code> 受到影响（需要适配 <code>viewIsAppearing</code>）。</p></li></ul><p>除此之外，session还提及了以下几点更新:</p><ul><li><p>开发者允许编写自定义的 traits，并且采用了更灵活的 API。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.02.38.png" alt="CleanShot 2023-07-17 at 15.02.38"></p></li><li><p>采用注册的方式处理 traits，在 traits 发生更改时接收回调而不需要在子类中重写 <code>traitCollectionDidChange</code>（事实上已经被<code>traitCollectionDidChange</code>被标记为废弃）。以下列举了两种注册方式。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.20.36.png" alt="CleanShot 2023-07-17 at 15.20.36"><br>  <img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.19.13.png" alt="CleanShot 2023-07-17 at 15.19.13"></p></li><li><p>允许将自定义 UIKit traits 与自定义 SwiftUI environment keys 相桥接，允许应用在 UIKit 和 SwiftUI 组件之间<strong>双向</strong>无缝传递 traits。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.22.55.png" alt="CleanShot 2023-07-17 at 15.22.55"><br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.24.36.png" alt="CleanShot 2023-07-17 at 15.24.36"></p></li></ul><h2 id="通用组件增强"><a href="#通用组件增强" class="headerlink" title="通用组件增强"></a>通用组件增强</h2><h3 id="UIPageControlTimerProgress"><a href="#UIPageControlTimerProgress" class="headerlink" title="UIPageControlTimerProgress"></a>UIPageControlTimerProgress</h3><p><code>UIPageControlTimerProgress</code> 有一个内置计时器可以轻松配置每个页面的持续展示时间，当定时器到达指定时间时 <code>UIPageControl</code> 将自动滚动页面。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.29.06.png" alt="CleanShot 2023-07-17 at 15.29.06"></p><p>对于需要跟随视频播放器或外部计时器的页面，需要使用 <code>UIPageControlProgress</code> 随着内容进度手动更新 <code>currentProgress</code>。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.29.28.png" alt="CleanShot 2023-07-17 at 15.29.28"></p><p>需要注意的是，<strong>用户需要在点击<code>UIPageControl</code>之后才能激活倒计时进度条。</strong>，<a href="https://github.com/iamStephenFang/WhatsNewInUIKit">WhatsNewInUIKit</a> 包含了以下 Demo 可以方便快速上手这个新特性。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.25.57.gif" alt="CleanShot 2023-07-17 at 15.25.57"></p><h3 id="UIContentUnavailableConfiguration"><a href="#UIContentUnavailableConfiguration" class="headerlink" title="UIContentUnavailableConfiguration"></a>UIContentUnavailableConfiguration</h3><p>在业务开发过程中，针对无网络状态、搜索不命中状态、无内容状态都应该展示空态视图。在内容构成上该视图通常会包含一个一级文本、一个二级文本以及一个图片。自定义实现上有不同的方法，例如画一个视图然后添加自定义分类。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.58.23.png" alt="CleanShot 2023-07-17 at 15.58.23"></p><p>新增的<code>UIContentUnavailableConfiguration</code>使用方法很容易理解，<code>UIViewController</code> 的拓展中包含了一个<code>contentUnavailableConfiguration</code>属性，更新 viewController 最佳方法是重写<code>updateContentUnavailableConfiguration(using: state)</code>。</p><p>在 SwiftUI 中使用这个特性也很简单，使用<code>UIHostingConfiguration</code> 能完成空状态视图。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.57.15.png" alt="CleanShot 2023-07-17 at 15.57.15"></p><p>例如在搜索场景中，可以使用如下代码在没有结果匹配的情况下展示空态界面。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Represent no search results empty state</span></span><br><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">updateContentUnavailableConfiguration</span>(<span class="params">using</span> <span class="params">state</span>: <span class="type">UIContentUnavailableConfigurationState</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> config: <span class="type">UIContentUnavailableConfiguration</span>?</span><br><span class="line">    <span class="keyword">if</span> searchResults.isEmpty &#123;</span><br><span class="line">        config <span class="operator">=</span> .search()</span><br><span class="line">    &#125;</span><br><span class="line">    contentUnavailableConfiguration <span class="operator">=</span> config</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update search results for query</span></span><br><span class="line">searchResults <span class="operator">=</span> backingStore.results(for: query)</span><br><span class="line">setNeedsUpdateContentUnavailableConfiguration()</span><br></pre></td></tr></table></figure><p>默认提供了<code>UIContentUnavailableConfiguration.empty()</code>、<code>UIContentUnavailableConfiguration.loading()</code>、<code>UIContentUnavailableConfiguration.search()</code>这几种实现，可以自定义的属性包含以下多项，通过苹果提供的空态 API， 开发者也可以审视自己之前实现类似需求时考虑是否周全。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> image: <span class="type">UIImage</span>?</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> imageProperties: <span class="type">UIContentUnavailableConfiguration</span>.<span class="type">ImageProperties</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> text: <span class="type">String</span>?</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> attributedText: <span class="type">NSAttributedString</span>?</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> textProperties: <span class="type">UIContentUnavailableConfiguration</span>.<span class="type">TextProperties</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> secondaryText: <span class="type">String</span>?</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> secondaryAttributedText: <span class="type">NSAttributedString</span>?</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> secondaryTextProperties: <span class="type">UIContentUnavailableConfiguration</span>.<span class="type">TextProperties</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> button: <span class="type">UIButton</span>.<span class="type">Configuration</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> buttonProperties: <span class="type">UIContentUnavailableConfiguration</span>.<span class="type">ButtonProperties</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> secondaryButton: <span class="type">UIButton</span>.<span class="type">Configuration</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> secondaryButtonProperties: <span class="type">UIContentUnavailableConfiguration</span>.<span class="type">ButtonProperties</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> alignment: <span class="type">UIContentUnavailableConfiguration</span>.<span class="type">Alignment</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> axesPreservingSuperviewLayoutMargins: <span class="type">UIAxis</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> directionalLayoutMargins: <span class="type">NSDirectionalEdgeInsets</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> imageToTextPadding: <span class="type">CGFloat</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> textToSecondaryTextPadding: <span class="type">CGFloat</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> textToButtonPadding: <span class="type">CGFloat</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> buttonToSecondaryButtonPadding: <span class="type">CGFloat</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> background: <span class="type">UIBackgroundConfiguration</span></span><br></pre></td></tr></table></figure><h3 id="调色盘菜单"><a href="#调色盘菜单" class="headerlink" title="调色盘菜单"></a>调色盘菜单</h3><p>调色板菜单(Palette Menus) 可理解成一排菜单构成的 stackView，通常用于在一系列选项中选择，目前它作为一个新的控件被使用。</p><p>要将任何菜单变成调色板菜单，只需在<code>UIMenu</code>对象的<code>options:[]</code>中添加<code>.displayAsPalette</code>。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.13.17.png" alt="CleanShot 2023-07-17 at 16.13.17"></p><p>如果你对调色板菜单的使用方法感兴趣，除了参考仓库里实现的 Demo，还可以参考这一篇文章<a href="https://blog.leonifrancesco.com/articles/create-menus-with-palette-picker-in-swiftui-and-uikit">Create Menus with Palette Picker in SwiftUI and UIKit</a>。</p><h3 id="UIStatusBarStyle"><a href="#UIStatusBarStyle" class="headerlink" title="UIStatusBarStyle"></a>UIStatusBarStyle</h3><p>之前在开发过程中经常要根据页面背景颜色重写指定状态栏风格，iOS 中默认状态栏样式会根据状态栏背景展示的内容动态调整明暗样式，甚至状态栏左边和右边的明暗样式都可以不同。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2015.27.58.png" alt="CleanShot 2023-07-17 at 15.27.58"></p><blockquote><p>这项更新意味着在 iOS 17 之后可以将原先自定义的状态栏代码删除。</p></blockquote><h2 id="国际化语言优化"><a href="#国际化语言优化" class="headerlink" title="国际化语言优化"></a>国际化语言优化</h2><h3 id="按区域设置检索-UIImage"><a href="#按区域设置检索-UIImage" class="headerlink" title="按区域设置检索 UIImage"></a>按区域设置检索 UIImage</h3><p>在<code>UIImage</code>的<code>configuration</code>中指定<code>locale</code>可以取得对应图像特定的变体，这为全球的用户营造一种归属感。</p><p>下面的例子中提供一个带有日语<code>locale</code>设置的<code>configuration</code>来获取该符号的日语版本。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.19.45.png" alt="CleanShot 2023-07-17 at 16.19.45"></p><p>笔者简单实现了一个实现随机获取不同<code>locale</code>下的<code>UIImage</code>的Demo可以尝试玩一下。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.17.45.png" alt="CleanShot 2023-07-17 at 16.17.45"></p><h3 id="动态行高调整"><a href="#动态行高调整" class="headerlink" title="动态行高调整"></a>动态行高调整</h3><p>部分语言字体往往需要比拉丁字母更多的垂直空间进而导致重叠和裁切的问题，如阿拉伯语、印地语和泰语等。</p><p><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.15.34.png" alt="CleanShot 2023-07-17 at 16.15.34"></p><p>新增的动态行高调整功能使得能够动态调整文本的控件（如 <code>UILabel</code>）自动调整行高和垂直距离来实现最佳的可读效果。</p><p>需要注意的是，如果开发者手动设定了<code>UIFont</code>则可能导致这项功能不再适用，苹果推荐使用<code>UIFontTextStyle</code>来设置字体。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.18.28.png" alt="CleanShot 2023-07-17 at 16.18.28"></p><h2 id="iPadOS-适配改进"><a href="#iPadOS-适配改进" class="headerlink" title="iPadOS 适配改进"></a>iPadOS 适配改进</h2><p>Apple 在 iPadOS 适配上也下了不少功夫，由于本人对这部分业务接触比较少，如果你对这此感兴趣推荐你观看视频 session 了解更新的全部内容，以下简单列举了几个更新。</p><h3 id="窗口拖拽交互"><a href="#窗口拖拽交互" class="headerlink" title="窗口拖拽交互"></a>窗口拖拽交互</h3><p>用户可以在 <code>UINavigationBar</code> 的任何位置拖动以移动窗口.<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.29.44.gif" alt="CleanShot 2023-07-17 at 16.29.44"></p><h3 id="侧边栏调整"><a href="#侧边栏调整" class="headerlink" title="侧边栏调整"></a>侧边栏调整</h3><p>使用双列或三列样式创建的 <code>UISplitViewController</code> 的自动展开&#x2F;关闭侧边栏的行为模式获得了更新。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.32.17.gif" alt="CleanShot 2023-07-17 at 16.32.17"></p><h3 id="键盘滑动支持"><a href="#键盘滑动支持" class="headerlink" title="键盘滑动支持"></a>键盘滑动支持</h3><p>键盘上的 Page Up、Page Down、Home 和 End 键能够触发 UIScrollView 滚动，开发者可以指定 <code>allowsKeyboardScrolling</code> 确定是否禁用此行为。</p><h3 id="Apple-Pencil-笔迹"><a href="#Apple-Pencil-笔迹" class="headerlink" title="Apple Pencil 笔迹"></a>Apple Pencil 笔迹</h3><p><code>PencilKit</code>引入了新的墨迹类型。<br><img src="https://image.stephenfang.me/mweb/CleanShot%202023-07-17%20at%2016.37.23.png" alt="CleanShot 2023-07-17 at 16.37.23"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>除了以上提及的功能之外视频还介绍了不少其他特性：</p><ul><li><code>UICollectionView</code> 在 diffable data source 和 snapshot 方面性能大幅提升</li><li>Compositional Layout 引入了 <code>uniformAcrossSiblings</code> 布局 </li><li>新的 Spring 动画参数仅需要<code>duration</code>和<code>bounce</code>两个参数</li><li>文本交互上更新了光标、选择器以及自定义交互菜单</li><li>支持将文件或内容直接拖放到应用图标上直接打开相应的应用与内容</li><li><code>UIImageView</code> 与<code>UIGraphicsImageRenderer</code>加入了对ISO HDR图像的支持</li></ul><p>如果这篇文章对你有帮助，别忘了在 GitHub 上为 <a href="https://github.com/iamStephenFang/WhatsNewInUIKit">WhatsNewInUIKit</a> 点一个🌟。</p><p>作为开发者，一起尝试兼容 app 到 iOS 17，适配新的API，探索新的业务可能性吧。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2023/10055">WWDC 2023: What’s New In UIKit | Apple</a></li><li><a href="https://www.wwdcnotes.com/notes/wwdc23/10055/">What’s new in UIKit | WWDC NOTES</a></li><li><a href="https://stevenpcurtis.medium.com/wwdc-2023-whats-new-in-uikit-3d7ca3ce6e2c">WWDC 2023: What’s New In UIKit | Steven Curtis</a></li><li><a href="https://xiaozhuanlan.com/topic/0651384792">WWDC23 10055 - UIKit 中的新功能｜老司机技术</a></li><li><a href="https://blog.leonifrancesco.com/articles/create-menus-with-palette-picker-in-swiftui-and-uikit">Create Menus with Palette Picker in SwiftUI and UIKit｜SwiftyLion</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;WWDC 23 大家的目光都被 visionOS 吸引了，作为 UIKit 开发者关注一下目前今年的 &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2022/10068/&quot;&gt;What’s New in UIKit&lt;/a&gt; session 实为必要。&lt;del&gt;尽管今年更新的内容似乎并没有那么吸引人。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;笔者参照官方给出的代码片段复现了一些简单页面实现，&lt;strong&gt;并且将代码整合到仓库&lt;/strong&gt;&lt;a href=&quot;https://github.com/iamStephenFang/WhatsNewInUIKit&quot;&gt;WhatsNewInUIKit&lt;/a&gt;，希望可以帮助你更快上手和理解这些新特性。笔者还按照业务理解和适配进度的优先级，对 session 内容进行了重新排序和整理。&lt;/p&gt;
&lt;p&gt;总的来说，今年的更新主要包括以下几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发体验&lt;/li&gt;
&lt;li&gt;通用组件&lt;/li&gt;
&lt;li&gt;国际化&lt;/li&gt;
&lt;li&gt;iPadOS 适配&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://stephenfang.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="iOS" scheme="https://stephenfang.me/tags/iOS/"/>
    
    <category term="Swift" scheme="https://stephenfang.me/tags/Swift/"/>
    
    <category term="WWDC" scheme="https://stephenfang.me/tags/WWDC/"/>
    
    <category term="UIKit" scheme="https://stephenfang.me/tags/UIKit/"/>
    
    <category term="Preview" scheme="https://stephenfang.me/tags/Preview/"/>
    
    <category term="WWDC23" scheme="https://stephenfang.me/tags/WWDC23/"/>
    
  </entry>
  
  <entry>
    <title>《5000天后的世界》阅读摘录</title>
    <link href="https://stephenfang.me/2023/06/25/Book36331624/"/>
    <id>https://stephenfang.me/2023/06/25/Book36331624/</id>
    <published>2023-06-24T16:00:00.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>“未来5000天，世界上至少有95%的事物还会维持原样，他的焦点一直放在这不到5%的变化上”。 </p><p>从社交平台看到对这本凯文·凯利的新书的推荐，就把阅读的优先级提升到了最高，这本书探讨了未来的工作方式、数字经济、地缘政治等诸多话题，在回顾阅读笔记的时候我也尝试着以 K.K. 的思考方式“倾听科技，洞见未来”。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/36331624/">豆瓣</a></li><li><a href="https://weread.qq.com/web/reader/f5032700813ab7bccg0169dc">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="第一章-数百万人一起工作的未来"><a href="#第一章-数百万人一起工作的未来" class="headerlink" title="第一章 数百万人一起工作的未来"></a>第一章 数百万人一起工作的未来</h3><p>想要实现百万人同时参与一项工作，我们需要一些目前尚未普及的工具，例如拥有AR功能的智能眼镜。对于需要按步骤交互进行的工作而言，AR这项技术比较容易实现和我们身体的互动。</p><blockquote><p>KK 认为 AR 设备就是下一代的计算平台，这一点我也抱有乐观态度。</p></blockquote><p>在世界的任何一个角落，都有一个和实物同等大小的虚拟“数字孪生”(digital twin)，佩戴上智能眼镜就可以使影像叠加在实景之上。</p><blockquote><p>IBM 的<a href="https://www.ibm.com/topics/what-is-a-digital-twin">这篇文章</a>给出了对于 digital twin 这个名词的解释</p></blockquote><p>镜像世界既可以搜索现实世界，又可以搜索人际关系，并催生出新的事物。镜像世界的优势并不仅仅是可以让你“看见”一切。在镜像世界里，所有对象都变成了数据，都可以被机器读取。</p><p>这个杯子在某种意义上成为一个被连接的元素，而且这种连接不是通过芯片上面的电流实现的。我们可以由它判断一个对象与其他事物之间的位置关系。这种定位是通过AI实现的。</p><blockquote><p>换句话说，没有人工智能技术长足的发展，良好的 AR 体验也不可能实现。</p></blockquote><p>纵观颠覆性技术的发展史，一个领域的主导者从来无法在下一个时代的平台上继续称雄。曾几何时，许许多多的公司妄图与制造计算机的IBM抗衡，并为此研发出一系列产品。然而没有一个公司侥幸成功。业界甚至流传着一个笑话：“逆IBM者，遑论成功。”</p><blockquote><p>Apple 作为移动互联网时代的领头羊，越来越多的观点认为 Apple 是这个十年的“IBM”，然而其发布的 Vision Pro 是否能够获得市场认可，还有待观察。</p></blockquote><p>我们真正需要关注的是未来是否会出现新的组织形式。如果答案是肯定的，那么这种新的组织形式是怎样的？比如，在GitHub（世界各地的人都可以在该平台上保存和共享程序代码及数据）上，人们可以拥有松散的协作关系，没有人主导经营，也没有下达命令的上级。对于新的工作形式，我目前尚未想出一个恰当的名称。但是我相信未来会有越来越多的组织通过新的形式创造财富。</p><p>区块链在公司也同样可以应用。目前公司的财务处理都是一次性的，以每月、每周或者每日一次的方式结算。但是实际上所有的数据都在实时发生变化，如果使用区块链技术，所有的结算都会在发生的节点得到及时处理，以此实现实时性财务结算。</p><blockquote><p>事实上区块链在金融和版权领域的应用已经开始了，但是在其他领域的应用还需要时间。</p></blockquote><h3 id="第二章-进化中的数字经济的现状"><a href="#第二章-进化中的数字经济的现状" class="headerlink" title="第二章 进化中的数字经济的现状"></a>第二章 进化中的数字经济的现状</h3><p>这个世界上不存在只能用生产力和效率来评价的人。这是一种偏见，是古代阶级社会中的特权阶层蔑视出身卑微者的观点。只不过到了今天，这种偏见针对的是一个人有没有创造性。</p><p>我母亲那一辈人，每天都要烧菜做饭，可能从来没有人把做饭视为创造性的活动。但是我们现在可以在YouTube或网飞的节目中看到大量的创意烹饪，甚至一些早年间很普通的菜肴，也被认为很有创意。</p><blockquote><p>创造性的定义也在不断变化，互联网在这个层面上拉近了人与人之间的距离。</p></blockquote><p>我们以后完全不需要因为某个事物突然“变得智能”而感到惊讶。或者说，AI带来的令人惊奇的点，大都是AI的次生效应。</p><blockquote><p>继“互联网+”之后，“AI+”成为了一个热门的话题。</p></blockquote><p>如果想打造空间站，或是解决全球变暖等问题，我们也需要足够的支持。所以目前流行的“反大企业”趋势是错误的。想要完成更大的计划、确立更大的目标，就必须依托更大的组织。</p><h3 id="第三章-所有的产业都将因科技重塑"><a href="#第三章-所有的产业都将因科技重塑" class="headerlink" title="第三章 所有的产业都将因科技重塑"></a>第三章 所有的产业都将因科技重塑</h3><p>和数字科技一样，生物科技必然会进入提速发展阶段，食物的种类会越来越多，这也为人们提供了更多的选择。</p><blockquote><p>我还没有品尝过植物肉，作为一个对新鲜事物感兴趣的人我很有兴趣尝试。</p></blockquote><p>“精密农业”的卓越之处在于可以同时管理数百万的作物，并且精准到每个植株。古老的农业在AI和机器人的帮助下焕发生机。通过“精密农业”，农民可以将肥料和资源的浪费控制到最小，而作物的整体状态可以保持到最佳。</p><blockquote><p>“精密农业”可以是“互联网+”、“AI+”、“机器人+”的典型案例。</p></blockquote><p>如果一项现代科技可以让生活变得更轻松，让他们有更多的时间陪伴家人，那么这就是一项好的科技，可以被阿米什人社会接纳。我们身处的现实社会过于追求效率和生产能力，而阿米什人对科技与生活关系的解释，才是科技之所以存在的最本真的原因。</p><blockquote><p>“如果一项现代科技可以让生活变得更轻松，让他们有更多的时间陪伴家人，那么这就是一项好的科技”</p></blockquote><p>自动驾驶技术普及的最大障碍就是两种驾驶员群体共同存在这一事实。我们不能满足于99%的安全性，必须追求99.9999%的精准。安全性达到98%不是一件困难的事情，但是越往后越困难，想要完成最后不足2%的突破可以说是举步维艰。</p><p>每一个冠以smart的新概念都可以替换成hackable。以智慧城市为例，如果表述为可操控城市(hackable city)，我们就会立即联想到遍布大街小巷的监控摄像头和个人信息监管制度（这样的制度耗费社会资源，是时候叫停了）。由此可见，表述方式稍作转换，我们就会更容易发现新技术的普及应用有哪些问题，并会对此进行反思。</p><blockquote><p>可操控还是翻译的太保守了，从 K.K. 的角度来看杭州大概就是一个“可入侵的”城市。</p></blockquote><p>人们为了自身安全，可以在信息采集方面做出相应的让步，而且这是一种全社会范围内的共识。</p><blockquote><p>和李彦宏的表述有些类似，“中国人更加开放，对隐私问题没有那么敏感，很多情况下他们愿意用隐私交换便利性，那我们就可以用数据做一些事情”。</p></blockquote><p>我们要好好计划一下，未来在不需要自己驾驶汽车后，车上的时间应该怎么利用起来。我们可以戴上智能头盔在虚拟的世界里尽情遨游，或是戴上智能眼镜看看别处的风景。总之，车内的时间都可以交给VR和AR，让科技带给我们更多的乐趣。</p><blockquote><p>“戴上智能眼镜看看别处的风景”我想到的是《赛博朋克2077》游戏刚开始的飞行汽车那一幕。</p></blockquote><p>区块链是一项伟大的发明，但是它同时又是那么不引人注意。这就好像是卫生间的上下水管道。</p><blockquote><p>你不需要知道区块链怎么工作的，但是你需要知道它的存在。</p></blockquote><p>从理论上讲，数字货币在通行货币不稳定的世界里应该可以成为极其稳定的资产，但是在实际生活中这一点还没能得到证明。看来，还需要时间来证明一切。</p><blockquote><p>从最近的影视作品中已经可以看到数字货币交易的身影。</p></blockquote><p>NFT基本只限于价值极高的、能保值的事物。不过，当艺术家的作品被拍卖或与其他作品放在一起被评估时，NFT可以用于查询作品以往的买卖记录和评价。</p><p>我的一位合作者索尔·格里菲斯著有《电气化》(Electrify)这本书，我还为这本书写过推荐文章。这本书的主旨是所有的能源都应该由电能取代，只要实现全面电气化就可以防止全球变暖。他呼吁利用太阳能、风能、水能和核能发电，无论是家里的空调，还是包含飞机在内的交通工具，维护现有文明的一切事物，都应该实现全面电气化。只要做到这一点，就可以在很大程度上解决环境问题。</p><blockquote><p>电气化的概念在中国也有类似的提法，比如“电动化”、“智能化”、“网联化”等。</p></blockquote><p>总而言之，未来教育的形式会发生三个变化：</p><ul><li>第一，充分利用视频平台，平台用户既是教授者也是学习者。</li><li>第二，使用AR或VR技术，在进入虚拟世界的同时，增加空间要素，保持运动感觉，激活大脑，实现安静读书无法达到的效果。由于体验活动可以刺激到深层大脑，因此学习效率会更高。</li><li>第三，出现以项目为主导的学习形式，以小组合作的形式完成某个任务。这也是非常好的学习方法。这既可以在大学校园内进行，也可以在虚拟世界中进行。</li></ul><p>如果在任何地方都可以使用即时翻译装置，旅行者的足迹将会遍布世界。这件事情的意义非同寻常，人们可以走出自己的文化圈，去接触和拥抱不同的文化。</p><blockquote><p>事实上类似的产品已经很多了，最近去韩国旅游就用到了《PaPago》这款翻译软件，对比 DeepL 和其他产品这款应用对于韩语的翻译还是更胜一筹，世界旅行中语言的隔阂正在一点一点消弭，虽然不可否认的是仍然需要网络的介入。</p></blockquote><p>人类的文明不就是这样一点点发展到今天的吗？从早期的人类社会开始，人们学会了合作和交流。在狩猎采集社会，人们形成了部落，并逐步发展为农耕社会。这之后诞生了城市，在协作与互助的基础上，科学和知识得到了发展。新的科技将会进一步增强人们的共情能力，也会让沟通更为有效。人类通过不断的发展和前进，终将成为更好的自己。</p><blockquote><p>人类的文明发展史就是一部“合作与互助”的史诗，这一句话是Copilot帮我补全的。</p></blockquote><h3 id="第四章-亚洲的时代与科技地缘政治"><a href="#第四章-亚洲的时代与科技地缘政治" class="headerlink" title="第四章 亚洲的时代与科技地缘政治"></a>第四章 亚洲的时代与科技地缘政治</h3><p>社会契约。当身处其中时，我就能感觉到这一点的必要性。日本在这方面尤其突出。社会常识(common sense)的力量极其强大，每个人在行动时都要充分考虑所处社会的利益。在这一点上，美国人并不太介意社会的构造，自己想的才是最重要的，带有很明显的个人主义色彩。</p><blockquote><p>类似的观点也在傅高义写的《日本第一》这本书有所提及，如果对日本的社会与文化感兴趣推荐阅读这本书。</p></blockquote><p>日本还拥有世界上历史最悠久的公司，日本酒藏和日式旅馆的历史竟然可以以千年计。他们在保持传统和维护原貌方面的确有过人之处。不仅如此，日本人还精于细节。因为国土狭小，他们学会了如何利用微小的空间。这一点同样适用于现代社会中对空间的有效利用。</p><p>在去往世界各地的旅行中，我明白了一个道理。世界各地在工业革命之前因为阻隔而产生的多元文化，随着全球化的发展越来越趋向统一。从某个层面看，人类的文化在不断地收缩。这种收缩导致在其他层面的分散不断加速。</p><blockquote><p>“文化收缩”这个概念很有意思。</p></blockquote><p>认为全世界在最基础的层次上的需求正在收缩。全世界的人都想要空调、Wi-Fi、洁净的自来水。学校的教材是雷同的，在大城市里，人们看着相同的电影，吃着相似的食物。</p><blockquote><p>“文化收缩”的具体体现。</p></blockquote><p>正是因为在需求层次的最底层发生了收缩现象，才会出现高层需求的分散与多元。我们才会探索我们为何在这里，对生存的意义、生命的方向做出不同的思考。</p><p>未来，人们会选择在大城市生活，城市以外的平原会成为粮食生产的区域，其他地方都将恢复自然的面貌。人们在高度发达的都市中安居乐业，郊外自然环境优美，农庄分布其中，农庄里的机器人辛勤劳作。</p><blockquote><p>对于未来的城市会是什么样子这个问题 K.K.给出了他的答案。</p></blockquote><p>城市在形成产业定位后，可以更好地调配人才及资金。这样的超级城市人口会达到几千万，并辐射周边，比一般单个城市占地面积要大很多，类似于东京的首都圈、旧金山的湾区、珠三角地区、纽约都市圈，多个城市共同发挥城市功能。</p><blockquote><p>“珠三角地区” -&gt; “粤港澳大湾区”</p></blockquote><p>“国家，在处理小事的时候显得太大，在处理大事的时候又显得太小”。我一直认为，城市应该掌握主导权，而不是国家，这样才能让世界变得更好。</p><p>到了2070年，全世界人口开始减少，而且会逐年递减。因此，城市会为了保证人口数量而展开竞争。而从这个节点开始，再发展下去，未来世界将会成为我梦寐以求的样子——城市的权力超过国家的权力。这一点和现在加利福尼亚州能够左右美国的国家政策有些相像。</p><h3 id="第五章-倾听科技洞见未来"><a href="#第五章-倾听科技洞见未来" class="headerlink" title="第五章 倾听科技洞见未来"></a>第五章 倾听科技洞见未来</h3><p>只有看到一种科技的应用范围下限，我们才能完整地把握它。技术的发展和当初发明者的预期相去甚远，这才是科技所具有的本质的发展趋势。</p><p>世界变化太快，你一生之中可能需要调整很多次做事的方式，也可能需要不断重新清空旧的知识体系从头学习。这就是为什么学习的内容并不重要，拥有强大的适应能力和学习能力才至关重要。</p><blockquote><p>“授人以鱼，不如授人以渔”上升到了“授人以渔，不如授人以学习方法”的层面。</p></blockquote><p>我会经常参加一些和我的工作无关的项目，只是因为很感兴趣。因为没有相关知识，难免会经历烧脑的过程，这就促使我必须不断学习。明明没有写作经验，却会挑战自己，和出版社签约。明明没有拍过视频，却开始了系列视频的创作，甚至还开始做起了播客。正因为我不断挑战自己，所以我才能有机会不断学习新鲜事物。</p><blockquote><p>K.K. 的这一期<a href="https://www.youtube.com/watch?v=EKba_awaAkk">《Excellent ADVICE To OPTIMIZE YOUR LIFE | Kevin Kelly x Rich Roll Podcast》</a> 很有意思，将链接放在这里。 </p></blockquote><p>科技带来的益处占比为51%，而它引发的问题占比为49%。虽然二者之间只存在2%的微妙差别，但是如果将这个比例放在时间的长河之中，我们就会看到其差别有多么巨大。因此，所谓的进步，从来不是在当下就能看出来的，只有回顾历史时才能发现。</p><p>哈佛大学的史蒂芬·平克教授曾说过，所谓好事情就是“今天没有坏事发生”。比如你今天没有遇到拦路抢劫的人，没有走在路上遇到路陷桥塌，这就是好事。可是新闻怎么能报道这些呢？新闻就是要找到与众不同的事情。因此，新闻总会倾向于关注负面的事情，其实并不能反映真实的现实世界。</p><p>在使用一个新科技之前都会先进行思考，在日常生活中尽量只保留维持最基础需求的东西。我在不停地体验新的科技，但并不会照单全收。我只保留自己精挑细选的项目，而过滤掉了绝大多数的新科技。</p><blockquote><p>“日常生活中尽量只保留维持最基础需求的东西”有点类似极简主义的思想， K.K. 的这种做法更加务实，举例来说，很多生成式 AI 的产品最终会由市场帮我们做出选择。</p></blockquote><h3 id="第六章-创新与成功的困境"><a href="#第六章-创新与成功的困境" class="headerlink" title="第六章 创新与成功的困境"></a>第六章 创新与成功的困境</h3><p>大企业难以创新的主要原因是很难找到新的突破口。而且，越是成功的企业越追求效率上的完美和优化，就会去做自己已经成功的事，或是追求完美的流程。如果想要有新发现，就必须走一条和最优化截然相反的道路。选择风险大、获利少、规模小的方向，无论怎么看，这都是一场得不偿失的商业冒险。</p><blockquote><p>对于“为什么大企业难以创新”这个问题比较务实的回答。</p></blockquote><p>确实有少数头脑清醒的人不会接受过多的投资。只有<strong>保持几分饥饿</strong>的状态，才能有继续创新的可能。</p><p>如果按照他的计划时间表，我最多也就能完成四五个计划。依照生命的长度来制订计划，其实人一生能完成的计划也很有限。<br>我做这些计算，就是为了帮助自己确定需要全心投入的工作。如果人生只剩下6000多天，我必须让今天过得有意义。</p><blockquote><p>类似的观点也屡见不鲜了，把生命中的每天当作最后一天来过的活法。</p></blockquote><p>定要试着体验一段没有钱的贫困生活。可以去非洲农村生活半个月，或者背着帐篷和少量食物出去徒步。有了这段经历，你会感受到一无所有时才能感受到的小欢喜，也能知道自己可以在一无所有的情况下完成多少事情。</p><blockquote><p>这样的体验会让现代人更加珍惜现在的生活，更加清楚自己想要什么。</p></blockquote><p>我发现最有帮助的方法就是把自己的想法写下来。在写成文字之前，其实我对自己的想法还不是非常明确。只有写下来，才能知道自己是否真的明白。然后，我就再去书中找答案，再去听别人的想法，直到真正理解。这之后我会继续写上几行，很可能会再次发觉自己好像并没有真正领悟，于是又会重复同样的环节。有时候外出散步回到家后，我会忽然顿悟。这是一个相当费时的过程，要不停地修改，直到自己满意。我当时不停地写博客，也是这个原因。在写博客的过程中，草稿也就成形了。写下思路的过程，其实就是深度思考的过程。</p><blockquote><p>我在写博客的过程中也能够有机会重新回忆起书中的内容，写博客的过程也是在不断的思考。</p></blockquote><p>作为一种习惯，“不断提问”必然会成为人类最基本也最有价值的行为之一。可以马上得到答案的问题就扔给机器，人的价值在于在面对不知道答案的问题时，可以不断思考，不断提问。</p><blockquote><p>人类的价值在于思考和提问，而不是机械的重复，如果只在意答案 AI 一定比我们的知道的多。</p></blockquote><h3 id="终章"><a href="#终章" class="headerlink" title="终章"></a>终章</h3><p>产业革命带来的主要是物理性的改变，比如修建水坝、摩天大楼、宽阔的马路，改变城市布局等。但是未来不再需要这些改变，全世界人口都会呈减少的趋势，基础建设已经没有增加的必要了。未来的改变主要发生在精神领域。比如我们的交往模式、休闲方式、对自己的认知、人生观、与别人建立联系的方式等。我们存在的意义是什么，该如何理解万事万物，该怎样追求真理、推动科学的发展，这些才是将要发生改变的部分。这些改变并不容易看出来，但确实会在未来5000天内发生。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;“未来5000天，世界上至少有95%的事物还会维持原样，他的焦点一直放在这不到5%的变化上”。 &lt;/p&gt;
&lt;p&gt;从社交平台看到对这本凯文·凯利的新书的推荐，就把阅读的优先级提升到了最高，这本书探讨了未来的工作方式、数字经济、地缘政治等诸多话题，在回顾阅读笔记的时候我也尝试着以 K.K. 的思考方式“倾听科技，洞见未来”。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="经济" scheme="https://stephenfang.me/tags/%E7%BB%8F%E6%B5%8E/"/>
    
    <category term="凯文·凯利" scheme="https://stephenfang.me/tags/%E5%87%AF%E6%96%87%C2%B7%E5%87%AF%E5%88%A9/"/>
    
    <category term="5000天后的世界" scheme="https://stephenfang.me/tags/5000%E5%A4%A9%E5%90%8E%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    
    <category term="科技" scheme="https://stephenfang.me/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="互联网" scheme="https://stephenfang.me/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    <category term="技术领域" scheme="https://stephenfang.me/tags/%E6%8A%80%E6%9C%AF%E9%A2%86%E5%9F%9F/"/>
    
    <category term="社会" scheme="https://stephenfang.me/tags/%E7%A4%BE%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>《原则》阅读摘录</title>
    <link href="https://stephenfang.me/2023/06/05/Book35732136/"/>
    <id>https://stephenfang.me/2023/06/05/Book35732136/</id>
    <published>2023-06-04T16:00:00.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>桥水投资公司创始人瑞·达利欧所著的《原则》这本书获得了不少播客的推荐，在香港的诚品书店也被摆在很显眼的位置。作者认为历史也是通过相对明确的生命周期、随着一代人向下一代人的过渡而逐步演进的，所有帝国和王朝都无法避免在大周期中崛起和衰落，作为浪潮中的一员，我们也能够据此判断自己所处的位置以及未来的走向。</p><p>我在整理书摘的时候才去留意了<a href="https://www.principles.com/">这本书的官方网站</a>，这个网站上有不少关于作者的采访以及他的一些观点，如果你对这本书感兴趣可以先浏览一下这个网站的内容。</p><p>整本书篇幅很长，在做整理的时候没有办法囊括作者所有的观点，只截取了我所关心和感兴趣的内容，作者对于中国的关注能够引起读者的思考与共鸣。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35732136/">豆瓣</a></li><li><a href="https://weread.qq.com/web/reader/19332dd0728b621d193d571">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><p>把国家内部的体制称为“<strong>内部秩序</strong>”，把国家之间的体制称为“<strong>外部秩序</strong>”，把适用于全世界的体制称为“<strong>世界秩序</strong>”。这些秩序相互影响，而且总在改变。这样的秩序存在于家庭、公司、城市、州和国家以及世界的各个层面。它们决定谁拥有何种权力，以及如何做出决策，包括如何分配财富和权力。</p><blockquote><p>内部秩序、外部秩序和世界秩序是这本书的重要观点。</p></blockquote><p>我们不妨重点关注这三大周期：</p><ul><li>（1）有利和不利的金融周期（例如资本市场周期）；</li><li>（2）内部秩序和混乱周期（取决于合作程度与财富和权力斗争，后者主要缘于财富和价值观差距）；</li><li>（3）外部秩序和混乱周期（取决于现有大国在财富和权力斗争中的竞争力）。<blockquote><p>这三大周期也构成了这本书的主要观点。</p></blockquote></li></ul><p>大多数人的性格、判断力、创造力和思考力可以造就一个富有成效的社会。</p><blockquote><p>对于社会的理解我觉得这个定义很贴切，换句话说，大多数人的性格、判断力、创造力和思考力也决定了社会的发展方向。</p></blockquote><p>财富&#x3D;购买力。为了避免追究细节，我们称财富为购买力，以区别于货币和信贷。这一区分很重要，因为货币和信贷的价值是变化的。例如，如果国家发放大量货币和信贷，它们的价值就会下降，所以增加货币持有量并不一定带来更多的财富或购买力。</p><p>正如亚里士多德很久以前说的：“贫困者和富人相互争吵，无论哪一方占上风，都不会建立一个公正或受欢迎的政府，而是把政治霸权作为胜利的奖赏。”</p><p>自孔子生活的公元前500年左右以来，那些最广泛地使用人才，并根据个人业绩而不是特权来赋予公民责任的社会最可能取得可持续性成功。</p><h3 id="4-货币价值的演变"><a href="#4-货币价值的演变" class="headerlink" title="4 货币价值的演变"></a>4 货币价值的演变</h3><p>通常来说，在一个国家的货币失去储备货币地位之前，这个国家已经丧失经济和政治的主导地位，输给一个崛起的对手，从而面临某种脆弱性（如荷兰不敌英国，或是英国不敌美国），并且央行通过印钞和购买政府债券，将不断增加的巨额债务货币化。其结果是，本国货币以不可阻挡的、自我强化的方式不断走弱，因为财政和国际收支赤字规模过大，无法通过削减开支来填补</p><h3 id="5-内部秩序和混乱大周期"><a href="#5-内部秩序和混乱大周期" class="headerlink" title="5 内部秩序和混乱大周期"></a>5 内部秩序和混乱大周期</h3><p>如果治国有效，人们就会拥有近乎平等的各种教育机会，以及择优录用的工作岗位。国家在最大范围内吸引人才，打造大多数人认为公平的体制。成功的企业家、发明家和冒险家提出新想法，推动社会的进步，因此成为英雄而受到仰慕。因为他们提出了颠覆性的创新想法，改善了人们的生活，所以得到回报。</p><p>新加坡在变得富有之后，仍然保持了<strong>良好教育、严明纪律和坚强性格的文化</strong>。但这样的领导者凤毛麟角，而且间隔甚久。因为阻止大众激情是很不得人心的。在几乎所有案例中，在变得富裕后，国家（及其领导者）都会堕落，过度消费，通过举债维持过度支出，使国家丧失竞争力。</p><p>在周期的早期，人们通常会把更多时间和资金投入生产性活动，而到了周期后期，时间和资金则更多地用于享受型活动（如“生活中更精美的东西”，即昂贵的住宅、艺术品、珠宝和衣服等）。</p><p>规则和法律只有在下述两个前提下才能生效：规则和法律必须清晰明了；多数人把在规则和法律的范围内行事看得足够重要，因此愿意为规则和法律行之有效而做出妥协。如果这两个前提都有所欠缺，那么法律体系危在旦夕</p><p>你有疑虑，就要撤离。如果你不想被卷入一场内战或战争，就应该趁早撤离。</p><blockquote><p>对于投资策略也是如此，如果你在开战后对投资策略有疑虑，就要撤离。</p></blockquote><p>因为几乎所有的体制都以牺牲一些群体为代价，让另一些群体获益，最终前者变得无法忍受，他们通过斗争来改变未来的方向。</p><p>许多历史学家把1789年7月14日定为法国大革命开始的日子，因为那天一伙暴徒攻破了一座军械库和巴士底狱，但当时没有人知道这就是法国大革命的开始，也不晓得这场内战和革命会变得多么恐怖和残暴。虽然我们也许不知道将来会发生什么，但我们可以找到一些粗略的标志，帮助自己确定所处的位置，考察未来发展的方向，了解下一阶段可能出现的情况。</p><blockquote><p>事实上我们每天都在见证历史，但我们很难意识到这一点，因为我们只能看到历史的一小部分，而且我们对历史的理解也是有限的。</p></blockquote><h3 id="6-外部秩序和混乱大周期"><a href="#6-外部秩序和混乱大周期" class="headerlink" title="6 外部秩序和混乱大周期"></a>6 外部秩序和混乱大周期</h3><p>国家之间的斗争主要有5种类别：<strong>贸易&#x2F;经济战、技术战、地缘政治战、资本战和军事战</strong>。</p><p>大周期的综合影响（即长期债务和资本市场周期、内部秩序和混乱周期与外部秩序和混乱周期的相互重叠和相互关联）为一场灾难性的战争创造了条件。</p><blockquote><p>对三大周期观点的重复。</p></blockquote><p>二战刚开始时，随着德国掠夺领土并确立军事主导地位，德国的股市表现出色。但在美国和英国等盟国成功扭转了战局后，德国的股市表现不佳。在1942年的中途岛战役之后，同盟国的股市几乎持续上涨，直至战争结束，而轴心国的股市则趋平或下跌。</p><blockquote><p>股市在周期内是晴雨表。</p></blockquote><h3 id="7-从大周期的角度思考投资"><a href="#7-从大周期的角度思考投资" class="headerlink" title="7 从大周期的角度思考投资"></a>7 从大周期的角度思考投资</h3><p>所有市场都是由以下4个决定因素驱动的：经济增长、通胀、风险溢价和折现率。</p><p>今天我们所知的贷款炼金术最早出现于约1350年的意大利。之后，贷款规则改变了，新的货币类型也出现了，即现金存款、债券和股票（与现在的股票十分接近）。财富变成了兑现金钱的承诺（我称之为“金融财富”）。</p><blockquote><p>意大利在金融领域的创新一直延续到今天，例如期货、期权等金融工具都是在意大利发明的。</p></blockquote><p>在一战前的大约50年里，世界主要大国几乎没有发生冲突，世界经历了最伟大的创新和前所未有的生产率增长，由此创造了巨大的财富和繁荣。在一战之前的50年里，全球出口增长了好几倍，全球化达到新的高峰，各国之间的往来空前密切。</p><p>当金融财富大大超过实物财富时，走势就会逆转，金融财富（特别是现金和债券等债务资产）的实际回报将会十分糟糕。</p><h3 id="8-过去500年简述"><a href="#8-过去500年简述" class="headerlink" title="8 过去500年简述"></a>8 过去500年简述</h3><p>当时并不存在国家，相反，领土是由家族治理的。1500年，还不存在拥有边界和治理秩序的主权国家。这种形态尚未出现。相反，当时存在的是被称为王国和王朝的大规模家族统治地域，这些地域由国王和皇帝管理，这些君王几乎不间断地与邻邦争斗，争夺财富和权力。</p><p>我们可以把前文说过的宋明理学视为中国的文艺复兴，因为就像欧洲的文艺复兴一样，它带来了更以逻辑和证据为基础的思维方式，以及更具创造性而非宗教性的世界观。</p><h3 id="9-荷兰帝国与荷兰盾的大周期兴衰"><a href="#9-荷兰帝国与荷兰盾的大周期兴衰" class="headerlink" title="9 荷兰帝国与荷兰盾的大周期兴衰"></a>9 荷兰帝国与荷兰盾的大周期兴衰</h3><p>荷兰在1650年左右达到顶峰，那个时代现在被称为荷兰的黄金时代。虽然荷兰人口不多，领土狭小，无法成为欧洲大陆上的主导性军事大国，但荷兰凭借经济实力、复杂的金融体系和强大的海军，完全弥补了这一劣势。强大的海军能够保护在世界各地拥有交易站和殖民地的荷兰帝国。这使荷兰盾成为历史上第一种全球储备货币。</p><blockquote><p>论证了成为全球储备货币的必要条件。</p></blockquote><p>荷兰人发明的船舶能周游世界收集财富。能为这些活动及其他生产性活动提供资金的资本主义以及许多别的突破，使荷兰变得富裕而强大。荷兰人创建了世界上第一家大型公司——荷兰东印度公司，其贸易额占到了全世界的1&#x2F;3左右。荷兰人对新思想、新人才和新技术的开放态度帮助他们快速崛起。</p><p>荷兰人两个最重要的发明是：</p><ul><li>（1）效能极其优异的帆船，使他们能在世界各地航行，这一点再加上他们从欧洲战事中获得的<strong>军事技能</strong>，使他们能收集巨大的财富；</li><li>（2）为这些行动提供推动力的<strong>资本主义</strong>。</li></ul><p>建立新国际秩序的<strong>《威斯特伐利亚和约》</strong>扩大了神圣罗马帝国诸王公的自治权，进一步削弱了奥地利皇帝对其他邦国拥有的有限权力。更重要的是，<strong>该和约发明了我们今天所说的国家</strong>，亦即，该和约承认了国家主权，承认国家能在其地理边界之内制定决策（如决定本国的宗教、语言和所有法律法规），同时也规定要尊重各国之间的边界，再也不能让无视边界、随心所欲攫取权力的行为发生（当然一国有意发动一场大规模战争的情况除外）。国家概念的出现带来了民族主义和对国家利益的追求，这重塑了敌对国家之间力量平衡的概念。这也大大削弱了宗教当局的权力。</p><p>荷兰人在变得极其富有的同时，其竞争力减弱了，例如荷兰人的工资通常高于欧洲其他国家的人。荷兰东印度公司也失去了竞争优势。例如，在茶叶等流行的新产品的交易方面，该公司效率低下。荷兰经济增长率相较于其他大国放缓，使之更加<strong>难以支付和维持庞大的帝国</strong>。为保护本国拥有的巨大财富，荷兰介入了越来越多的军事冲突，导致扩张过度。</p><h3 id="10-大英帝国和英镑的大周期兴衰"><a href="#10-大英帝国和英镑的大周期兴衰" class="headerlink" title="10 大英帝国和英镑的大周期兴衰"></a>10 大英帝国和英镑的大周期兴衰</h3><p>英国通过有效的经济战和军事战取得了胜利。接着，遵循确立主宰权的战争之后的典型大周期脚本，出现了一种由胜利者建立的新世界秩序，之后是一段长期的相对和平与繁荣，在这个案例里是100年。这正是英国成为有史以来最大帝国的时候。<strong>在英国鼎盛时期，其人口只占全世界的2.5%，但大英帝国创造了全世界总收入的20%以上，并控制着世界上20%以上的陆地和25%以上的人口</strong>。</p><p>18世纪早期法国是教育和学术的中心，是启蒙运动的枢纽，拥有伏尔泰、孟德斯鸠等著名思想家，其出版业蓬勃发展，所以我设定的指标会显示法国是与荷兰、英国一样的强国。<strong>1720—1780年，巴黎出版的艺术和科学书籍翻了一番</strong>。随着信息量的增加，人民的识字率也提高了。<strong>在18世纪，法国的识字率几乎翻了一番</strong>。</p><p>传统上，<strong>在全面战争爆发之前，通常会有10年的经济、技术、地缘政治和资本方面的冲突</strong>。大萧条和二战之间的时期就符合这一规律。随着德国和日本日益走向扩张主义，它们加紧与英国、美国和法国争夺资源和对各地区的影响力。最终这些紧张局势演变为战争。</p><h3 id="11-美国和美元的大周期兴衰"><a href="#11-美国和美元的大周期兴衰" class="headerlink" title="11 美国和美元的大周期兴衰"></a>11 美国和美元的大周期兴衰</h3><p>目前美国在教育、竞争力和贸易方面的相对优势有所下降，但在创新和科技、储备货币地位、金融市场和金融中心地位方面的优势依然强劲。</p><p>我们经历了三个经济周期：一个在2000年互联网泡沫期间触顶，导致了之后的经济衰退；一个在2007年股市泡沫期间触顶，导致2008年全球金融危机；还有一个周期在2019年触顶，之后是2020年的新冠肺炎疫情引发的经济衰退。除了俄罗斯的衰退，在此期间，我们还看到了中国的崛起、全球化和科技的进步。</p><h3 id="12-中国和人民币的大周期兴起"><a href="#12-中国和人民币的大周期兴起" class="headerlink" title="12 中国和人民币的大周期兴起"></a>12 中国和人民币的大周期兴起</h3><p>中国是金融领域的新兴大国，但<strong>在储备货币和金融中心地位上落后。</strong></p><p>300年对美国人来说似乎是很久的，但对中国人来说太短了。大多数美国人无法想象会发生颠覆美国体制的革命或战争，但对中国人来说，革命与战争似乎都是不可避免的，因为他们看到这样的事反复发生，并研究了革命与战争之前不可避免会出现的模式。</p><p>中国的商业法律体系和金融市场的发展程度较低。由于<strong>商业发展程度较低和更趋向孤立主义的政策</strong>，中国通常在创新方面落后于欧洲，</p><p>中国货币有两个主要的贬值时期，一个是1948年制定新汇率时，另一个是从1980年到20世纪90年代的一系列贬值，目的是支持出口商和管理经常账户赤字。</p><p>有学者认为，中国正在进入一个更艰难的阶段，世界形势也更具挑战性，在这种时候，团结和领导层的连续性尤为重要，今后几年更是如此。如前所述，<strong>在大危机时期，更强有力的领导方式往往更受欢迎。</strong></p><h3 id="13-中美关系和战争"><a href="#13-中美关系和战争" class="headerlink" title="13 中美关系和战争"></a>13 中美关系和战争</h3><p>中国有大量外汇储备，不实行零利率和负利率，没有发行大量债券并将其货币化。增加在中国的投资会使人民币升值，因为这些购买必须用人民币进行。这些都是好的方面。不好的方面是，中国的国内<strong>债务</strong>相对较多，这些债务需要重组，人民币<strong>不是全球贸易和金融交易中广泛使用的货币</strong>，中国的<strong>清算系统还不发达</strong>，而且中国<strong>不允许人民币自由流入和流出</strong>。</p><p><strong>人们彼此如何相处</strong>，是决定他们将如何应对共同面临的情况的最重要因素，而他们<strong>所拥有的文化</strong>，是决定他们彼此如何相处的最重要因素。中国人和美国人分别最重视什么，他们对人与人相处之道的看法，决定了在应对我们刚刚探讨过的冲突时，他们彼此将如何对待。</p><p>这些差异反映在日常生活中。例如，中国规定未成年人能玩什么类型的电子游戏，每天能玩多少个小时的游戏，而美国并不管这些事，因为这被认为是由父母个人决定的。两种做法的好坏也许见仁见智。</p><h3 id="14-未来"><a href="#14-未来" class="headerlink" title="14 未来"></a>14 未来</h3><p>应对未来就是要：</p><ul><li>（1）感知并适应正在发生的事情，即使这些事情无法预料；</li><li>（2）预估可能发生的事情的发生概率；</li><li>（3）充分了解可能发生的事情，以保护自己免受不可接受的伤害，即便不可能万无一失地做到这一点。</li></ul><p>在人生的游戏中，如果尽最大努力去了解世界是如何运作的，想象各种可能性（包括风险和回报），并知道如何最好地<strong>分散赌注</strong>，我们就会得到回报。</p><p>识别、理解和适应范式转变至关重要，即使人们无法预测到这些范式转变，不过尝试用有助益的良好指标来预测这些范式转变也很重要。拥有良好的指标还能帮助你分辨，<strong>有时看似是范式转变的东西只不过是昙花一现，这一点同样重要</strong>。</p><p>想想多少我们习以为常的东西是在过去150年里发明或发现的。这些东西在出现之前，是人们无法想象的，例如电话（1876年）、电灯泡（1879年）、内燃机车（1885年）、无线电（1895年）、电影（1895年）、飞机（1903年）、电视机（1926年）、抗生素（1928年）、计算机（1939年）、核武器（1945年）、核电站（1951年）、GPS（全球定位系统，1973年）、数码相机（1975年）、网上购物（1979年）、互联网（1983年）、在线搜索（1990年）、网上银行（1995年）、社交媒体（1997年）、Wi-Fi（无线通信技术，1998年）、iPhone（苹果手机，2007年）、CRISPR基因编辑（2012年）等。</p><p>储备货币的衰落速度快于支付给债务持有人的利率的下降速度；<strong>净损失导致抛售，抛售导致更多损失，形成自我强化的恶性循环</strong>。荷兰盾和英镑都曾以这种方式下坠，原因是当存在以这两种货币计价的巨额债务时，发生了地缘政治危机&#x2F;战败。这些事件使债权人清楚地看到，这些储备货币的基本面比他们设想的要差，利率不足以弥补其衰落。</p><p>我认为情况会是这样，除非出现一种情况：某种意想不到的技术突破，如量子计算的巨大进步，给其中一个大国带来巨大的不对称优势，导致相互保证毁灭不复存在。此外一个相对次要的因素是，<strong>在这个高度互联互通的世界上，美国人和中国人的福祉是唇齿相依的，这也是阻止双方爆发战争的一个因素</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;桥水投资公司创始人瑞·达利欧所著的《原则》这本书获得了不少播客的推荐，在香港的诚品书店也被摆在很显眼的位置。作者认为历史也是通过相对明确的生命周期、随着一代人向下一代人的过渡而逐步演进的，所有帝国和王朝都无法避免在大周期中崛起和衰落，作为浪潮中的一员，我们也能够据此判断自己所处的位置以及未来的走向。&lt;/p&gt;
&lt;p&gt;我在整理书摘的时候才去留意了&lt;a href=&quot;https://www.principles.com/&quot;&gt;这本书的官方网站&lt;/a&gt;，这个网站上有不少关于作者的采访以及他的一些观点，如果你对这本书感兴趣可以先浏览一下这个网站的内容。&lt;/p&gt;
&lt;p&gt;整本书篇幅很长，在做整理的时候没有办法囊括作者所有的观点，只截取了我所关心和感兴趣的内容，作者对于中国的关注能够引起读者的思考与共鸣。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="国家" scheme="https://stephenfang.me/tags/%E5%9B%BD%E5%AE%B6/"/>
    
    <category term="瑞·达利欧" scheme="https://stephenfang.me/tags/%E7%91%9E%C2%B7%E8%BE%BE%E5%88%A9%E6%AC%A7/"/>
    
    <category term="原则" scheme="https://stephenfang.me/tags/%E5%8E%9F%E5%88%99/"/>
    
    <category term="应对变化中的世界秩序" scheme="https://stephenfang.me/tags/%E5%BA%94%E5%AF%B9%E5%8F%98%E5%8C%96%E4%B8%AD%E7%9A%84%E4%B8%96%E7%95%8C%E7%A7%A9%E5%BA%8F/"/>
    
    <category term="经济" scheme="https://stephenfang.me/tags/%E7%BB%8F%E6%B5%8E/"/>
    
    <category term="投资" scheme="https://stephenfang.me/tags/%E6%8A%95%E8%B5%84/"/>
    
    <category term="大周期" scheme="https://stephenfang.me/tags/%E5%A4%A7%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>《蒂姆·库克传》阅读摘录</title>
    <link href="https://stephenfang.me/2023/05/05/Book34429983/"/>
    <id>https://stephenfang.me/2023/05/05/Book34429983/</id>
    <published>2023-05-04T16:00:00.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>在读这本书之前，我对于库克的印象是一个务实的商人，他的时代没有改变世界的产品，但是他的时代让苹果成为了世界上最有价值的公司。</p><p>他领导苹果公司的6条核心价值观是无障碍使用，教育，环境责任、包容性和多样性、隐私性和安全性和供应商责任，这些价值观塑造了现在的苹果。</p><p>这本书让我对库克有了更深入的了解，他的个人魅力和价值观对于苹果的发展起到了至关重要的作用。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/34429983/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/67b32af071889fe867b4109">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="01-从乔布斯手上接过“教父”接力棒"><a href="#01-从乔布斯手上接过“教父”接力棒" class="headerlink" title="01 从乔布斯手上接过“教父”接力棒"></a>01 从乔布斯手上接过“教父”接力棒</h3><p>一位硅谷投资人在接受《财富》（Fortune）杂志亚当·拉辛斯基（Adam Lashinsky）的采访时说：“蒂姆·库克不可能成为下一任CEO。￼这真是太可笑了。他们不需要一个只会按部就班的家伙，他们需要的是一个绝顶聪明的产品设计者，而这个人绝不是蒂姆，他只是一个负责运营的人，而苹果的运营业务是外包的。”</p><blockquote><p>在库克刚接棒的时期引起了很多质疑，然而事实是库克使得苹果公司成为世界上首家市值破万亿美元的科技公司。</p></blockquote><p>乔布斯曾经有一个巧妙的做法，就是把自己的邮件地址：<a href="mailto:&#115;&#x74;&#x65;&#118;&#101;&#64;&#x61;&#x70;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#x6d;">&#115;&#x74;&#x65;&#118;&#101;&#64;&#x61;&#x70;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#x6d;</a>和<a href="mailto:&#115;&#106;&#x6f;&#x62;&#115;&#x40;&#97;&#x70;&#112;&#x6c;&#x65;&#46;&#99;&#111;&#x6d;">&#115;&#106;&#x6f;&#x62;&#115;&#x40;&#97;&#x70;&#112;&#x6c;&#x65;&#46;&#99;&#111;&#x6d;</a>公开，让其他人更容易联系到他。库克延续了这一传统，￼担任CEO之后，他会从涌入邮箱的上千封邮件中，挑出一部分亲自回复。</p><blockquote><p>Tim Cook的邮箱地址是<a href="mailto:&#x74;&#99;&#111;&#x6f;&#x6b;&#64;&#97;&#x70;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#x74;&#99;&#111;&#x6f;&#x6b;&#64;&#97;&#x70;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>，按网络上的说法确实有机会收到他的亲自回复。</p></blockquote><p>起初，没有人看好库克。虽然库克有着很强的运营管理能力，但在很多人眼里，他是一位乏味、无聊又毫无想象力的人。人们期待苹果的CEO充满魅力，拥有掌舵者的风范，但是苹果这些前任CEO都具备的特质，在库克身上却毫无踪迹。</p><blockquote><p>大众对库克的固有印象确实是这样，他的个人魅力体现在了其他方面。</p></blockquote><h3 id="02-“把事做好”"><a href="#02-“把事做好”" class="headerlink" title="02 “把事做好”"></a>02 “把事做好”</h3><p>那个燃烧着的十字架意味着无知、仇恨，以及仅仅因为有些人跟大多数人不同，人们就为此恐惧。我永远无法理解这种行为。”关于种族主义的亲身经历影响了库克年轻时的价值观，而这些价值观后来也体现在他的商业行为中。</p><blockquote><p>价值观的形成往往受到家庭和社会环境的影响，可以说3K党的这种行为对库克的影响是深远的。</p></blockquote><p>这就是为什么我的办公室里有三张照片，两张是肯尼迪，一张是马丁·路德·金，”他说，“我的办公室里就只挂了他们的照片。我每天都看着他们，我认为他们为所有人树立了光辉的榜样。这不是一份政治声明，而是关于要公平对待每一个人的声明。”</p><blockquote><p>Tim Cook提及办公室里挂着的照片。</p></blockquote><p>正如他在《彭博商业周刊》发表的“公开性取向”一文中写的：“如果听说苹果的CEO是一个同性恋者可以帮助那些为性取向问题而苦苦挣扎的人，或是能够抚慰那些感到孤独的人，抑或是能够鼓舞人们勇敢地追求平等，那公开我的隐私又算得了什么呢？”</p><p>在奥本大学，库克学习了很多技能，这些技能让他在整个职业生涯受益匪浅。比如，他学会了编程。他写过一套系统，来优化大学附近的交通信号灯的时间安排。</p><blockquote><p>在我的印象里Tim Cook更多是一个生意人的形象，其实他也是有编程能力的，“Everyone can code”也是他的时代开始推动的。</p></blockquote><p>大学的校训是由这里的第一位足球教练乔治·皮特里（George Petrie）在1943年写下的：“我相信这是一个务实的世界，有所劳才能有所得。因此，我相信<strong>天道酬勤</strong>，相信勤奋努力的力量。我相信<strong>教育的力量</strong>，它使我懂得聪明地工作，还训练我的头脑和双手娴熟地工作。我相信<strong>诚实和真实</strong>，没有这些，我就无法赢得同胞的尊重和信任。”￼<br>库克在2010年奥本大学毕业典礼上的演讲，引用了这些话作为个人信条。</p><h3 id="03-站在蓝色巨人的肩膀上"><a href="#03-站在蓝色巨人的肩膀上" class="headerlink" title="03 站在蓝色巨人的肩膀上"></a>03 站在蓝色巨人的肩膀上</h3><p>库克的职业道德令人难忘，我都<strong>怀疑他可能根本不休息</strong>。有一次，他在中国，当地时间是早上两三点，他竟然在5分钟之内回复了我的电子邮件。在所有跟我合作过的人中，他是最聪明的人之一。”￼梅斯补充说：“他所做的一切都是经过深思熟虑的，并且执行得非常到位。”</p><blockquote><p>用工作狂这个词指代库克并不为过，后文中也提到了“虽然说不出他每天具体工作多久，但是我觉得库克只要是醒着，几乎都在工作”。</p></blockquote><p>学生时代的库克表现优异且安静内敛，但是在IBM，他开始引人注目，并逐渐脱颖而出，成为领导者。库克的领导力与生俱来，他在IBM不断成长，后来还去了杜克大学进修深造。</p><p>MediaGX处理器把计算机的价格降到1000美元以下，这使得大多数家庭都能负担得起。计算机平民化风潮席卷而来，这迫使英特尔于1998年4月推出了赛扬（Celeron），这是英特尔旗下主打低价的处理器品牌；而另一家科技公司AMD也开始效仿，推出更便宜的芯片。PC的价格由此稳步下跌，苹果的噩梦开始了——价格昂贵的苹果电脑卖不出去了，库存堆积如山。</p><blockquote><p>赛扬原来是1998年推出的。</p></blockquote><h3 id="04-临危受命"><a href="#04-临危受命" class="headerlink" title="04 临危受命"></a>04 临危受命</h3><p>库克已经被乔布斯说服了。他深知自己想做一些不一样的事情，如果他拒绝苹果，就是在拒绝这样一个机会。“<strong>我一向认为随波逐流不是什么好事，而是一件可怕的事。</strong>”</p><p>库克对过量库存的厌恶，就如同乔布斯对拙劣设计的厌恶一样。因为库存给公司财务造成负担，库克在描述堆积如山的库存时，甚至会上升到道德层面，称之为“丧尽天良”。</p><blockquote><p>“库存克星”</p></blockquote><p>库克投资了SAP（思爱普，德国软件公司）最先进的企业资源规划（ERP）系统，并将其与苹果的零件供应商、装配厂和零售商的IT（信息技术）系统直接打通。</p><blockquote><p>Copliot补充说明一下：ERP系统是企业资源规划系统的英文缩写，是一种集成管理软件，是一套综合的业务管理软件系统，它是以计算机技术为基础，以系统化的管理思想为指导，以企业信息化为手段，实现企业内外部信息资源的有效整合和高效利用，为企业的决策提供强有力的支持，为企业的信息化、集约化管理提供有力的保障。</p></blockquote><p>在苹果产品销售惨淡的那段时间，卖不出去的Macs不经意间就堆成了山。1998年，库克将这些Macs通过填埋的方式处理了。￼这一事件并不为人所知，苹果一直对此事保持沉默。不管怎么说，这确实与库克在今天给苹果贯彻的环保文化相悖。</p><blockquote><p>确实不是一件光彩的事情。</p></blockquote><p>苹果出其不意地提前预订了运力，使得其他公司不得不反思它们的运营策略。库克不仅改善了苹果的运营，还<strong>改变了整个科技行业对生产流程的管理方式</strong>，以及对<strong>生产流程的认知方式</strong>。</p><h3 id="05-有所劳才能有所得"><a href="#05-有所劳才能有所得" class="headerlink" title="05 有所劳才能有所得"></a>05 有所劳才能有所得</h3><p>乔布斯的高度自动化工厂无法根据需求来灵活调整并制造不同的产品，如iPhone、iPad和iMac。库克革命性的外包计划不仅减少了对自有工厂的需求，还为苹果的进一步成功做出了巨大贡献。</p><p>运营部门可能是苹果公司最大的部门，但它的规模难以预估。无论是对外还是对内，苹果都没有公布过组织架构图。在库比蒂诺及其周边地区的苹果园区，一共有5万名员工，据一位前运营人员估计，运营部门的员工有三四万人，占了园区员工的绝大多数。</p><blockquote><p>曾以为技术部门才是Apple最大的部门。</p></blockquote><p>与很多同事不同，库克在工作以外，似乎没什么个人生活。很多员工，尤其是那些有家庭的人，都不太愿意效仿库克：周日晚上开电话会议，凌晨3:45回复邮件，每天早上6点准时坐在办公桌前。在办公室工作了12~13个小时后，回家继续回复更多的邮件。</p><blockquote><p>如果不是这本书我也很难想象库克的工作状态。</p></blockquote><p>库克把在苹果工作视作一项运动。对他来说，<strong>工作就是一种需要耐力的运动</strong>，￼这点表现在他所做的每件事上。</p><h3 id="06-乔布斯最好的一次招聘？"><a href="#06-乔布斯最好的一次招聘？" class="headerlink" title="06 乔布斯最好的一次招聘？"></a>06 乔布斯最好的一次招聘？</h3><p>乔布斯演讲时散发出的那种独特的、让人挪不开目光的魅力，在库克身上连一丝影子都没有。他看起来非常不自然，而且好像排练过了头。他并没有沉浸其中，讲话时眉头紧锁，神情十分严肃。不管怎么说，他确实做了一件在过去绝不可能发生的事：让苹果发布会变得毫无兴奋感可言。</p><blockquote><p>由于 Tim Cook自己也承认不擅长做产品发布会的演讲，之后的产品发布会都是交由各个部门高管来主持，这也就是我们现在看到的苹果产品发布会的形式。</p></blockquote><p>2012年10月，由于苹果在三星的家乡韩国销量低迷，库克解雇了苹果韩国分部的负责人多米尼克·欧（Dominique Oh）——他才加入苹果17个月而已。￼</p><p>位不愿透露姓名的前苹果员工表示，<strong>福斯托特别爱玩弄权术，经常把别人的功劳据为己有，论功行赏时会把同事推到一边，而且经常制造摩擦</strong>。他野心勃勃，这使他与同事越发疏远。“跟他没有关系的事情，他都要插手。”￼这位员工说，“我觉得这真的让人恼火，应该有很多人都觉得受够他了。”</p><p>犯错时，我们会承认，并且有勇气改变。我们不钩心斗角，我最讨厌的就是办公室政治。要做的事情太多，哪有时间做这个。生命太短暂，不应该把时间浪费在这些事情上。我们反对官僚主义。我们的公司应该是一家快速发展、灵活敏捷的公司，没有钩心斗角，也没有隐秘事件。</p><blockquote><p>Tim Cook 旁敲侧击回答了对于福斯托的批评。</p></blockquote><p>值得注意的是，在“蒂姆·库克时代”，TBWA再也没制作出像“非同凡‘想’”那样的广告。</p><blockquote><p>“蒂姆·库克时代”最令我影响深刻的苹果广告是iPhone 5的每一天系列，在这之后每一年的广告都花里胡哨堪称炫技，但都没有那个系列那么让我感动。</p></blockquote><p>谈到出现这些负面新闻之后，库克不得不有所反应，但好在他用积极的姿态采取了积极的行动：“我认为，在这个问题上，他比其他高管有更深刻的个人理解和感悟。”</p><p>香港理工大学教授、大学师生监察无良企业行动（SACOM）的前组织者，以及《苹果背后的生与死》（Dying for an iPhone）的作者陈慧玲（Jenny Chan）表示，苹果意识到的安全问题众多，但是已经解决的甚少，有时候他们甚至无动于衷。</p><blockquote><p>截取这一段是留意到了校友的名字，在<a href="https://chinadialogue.net/zh/1/43148/">这个链接</a>中可以看到原文，无良企业行动（SACOM）也有自己的<a href="https://chinadialogue.net/zh/1/43148/">网站</a>。</p></blockquote><h3 id="07-用热门新产品立足"><a href="#07-用热门新产品立足" class="headerlink" title="07 用热门新产品立足"></a>07 用热门新产品立足</h3><p>这就是编程语言Swift的核心所在。我们设计了这种语言，希望有更多的人参与编程，也希望有更多的人可以发挥最新硬件的优势。”对编程的推动也有助于苹果的发展。Swift正在逐渐成为开发者在苹果平台上开发App的主流方式。<strong>iOS和Mac上的应用程序越多，对苹果就越有利</strong>。</p><blockquote><p>Swift 的进步给 Apple 带来了更多正向反馈，也让 Apple 的生态更加完善。</p></blockquote><p>阿伦茨在2017年9月首次亮相苹果发布会时说道。“这很有趣，实际上我们不再称其为零售店了，而是‘城市广场’，因为这是一个欢迎所有人的场所。”库克补充道，“苹果零售店不仅是为了销售，更是为了<strong>学习、启发，以及与人发生连接</strong>。”</p><p>在接受高端手表网站Hoodinkee采访时，乔纳森·艾夫透露，Apple Watch是<strong>第一款没有史蒂夫·乔布斯参与的重要产品</strong>。艾夫在谈到他与乔布斯的讨论时说道：“我们没有谈论过手表，或者制造手表。<strong>我都不记得他戴过手表。</strong>”</p><blockquote><p>在乔布斯时代不可能诞生这样一款可穿戴设备。</p></blockquote><h3 id="08-影响世界但不影响环境"><a href="#08-影响世界但不影响环境" class="headerlink" title="08 影响世界但不影响环境"></a>08 影响世界但不影响环境</h3><p>苹果、脸书和谷歌比亚马逊及中国的大型互联网公司做得都好——百度、阿里巴巴、腾讯等这些公司都十分不环保。</p><blockquote><p>环保在国内更多停留在政府的责任。</p></blockquote><h3 id="10-公平文化与多元化策略"><a href="#10-公平文化与多元化策略" class="headerlink" title="10 公平文化与多元化策略"></a>10 公平文化与多元化策略</h3><p>从前的苹果从没有像现在这样，致力于推动<strong>多元化、平等、教育和无障碍使用</strong>。</p><p>苹果的产品之所以非常棒，是因为在发明制造这些产品的时候，员工中不仅有工程师和计算机科学家，还有艺术家和音乐家。正是<strong>人文艺术与科学技术</strong>的完美融合，才使得产品如此有魔力。”</p><blockquote><p>至少在发布2016款 MacBook Pro 的时候不是，2021年他们又把失去的接口加回来了。</p></blockquote><p>苹果的成立离不开赋予人们创造新事物的能力，帮助他们做出在没有这些工具时无法做到的事情。”￼库克告诉视频博主和聋人权益倡导者赖克·波因特（Rikki Poynter），“我们一直<strong>将无障碍使用视为一项人权</strong>。因此，就像每个人都拥有人权一样，我们希望每个人都能够使用我们的产品。”</p><p>我们认为，<strong>每个人都应该享有平等的机会和平等的获得性</strong>。”他继续说，“因此，我们不会从投资回报的角度来看待这件事。我们并不关心这一点。”库克在谈到这一点时非常坦诚。</p><blockquote><p>乔布斯和库克对无障碍的立场是完全一致的，事实上这也给苹果带来了商业上巨大的回报。</p></blockquote><h3 id="11-智能汽车与苹果的未来"><a href="#11-智能汽车与苹果的未来" class="headerlink" title="11 智能汽车与苹果的未来"></a>11 智能汽车与苹果的未来</h3><p>iPhone的开发过程直到最后几个月才进展顺利。但Titan的失败看起来又不太一样，这回失败的不仅仅是产品开发，还有招聘、管理，甚至愿景。</p><blockquote><p>在这本书中我们至少可以知道苹果汽车项目是真的已经失败了，而 Vision Pro更像是一个赶鸭子上架的作品。</p></blockquote><p>史蒂夫·乔布斯剧院举办的第一场活动就是2017年9月12日的iPhone X和iPhone 8的新品发布会，这也是苹果最受欢迎的产品诞生10周年纪念。</p><p>许多大型苹果零售店一样，这座建筑本身很壮观，但千篇一律的木材和石材显得缺少生机。<strong>所有东西都完全按照同一种规格被制造</strong>：全部的桌子、椅子、凳子和咖啡吧。</p><blockquote><p>最近的 WWDC 又开放了对 Apple Park的参观，如果有机会还是很想去现场参观一次。</p></blockquote><p>“人们在一天中的各个时段，都会不经意地碰到彼此，<strong>这意味着更多的沟通和思想的流动，并且增加了灵感迸发的概率</strong>。你能感受到这栋建筑里的能量。”</p><h3 id="12-苹果最好的CEO？"><a href="#12-苹果最好的CEO？" class="headerlink" title="12 苹果最好的CEO？"></a>12 苹果最好的CEO？</h3><p>有一个能生动展现“库克时代”的创新特点的小例子：用你的Apple Watch解锁你的Mac。这个操作非常简单，但背后需要非常复杂的技术。<strong>这些改进就像库克本人一样，没有被大肆宣传，但它们带来了更好的体验，并引领了科技行业。</strong> 实际上，许多人可能没有意识到，这就是苹果一直以来的运作方式。虽然大的突破性创新弥足珍贵，但是循序渐进的持续改进却是常态。水滴石穿最后会形成大的突破性创新。</p><p>库克身体力行地实践了这句格言：<strong>行善的时候也能取得成功</strong>。史蒂夫·乔布斯曾经说，公司是人类最好的发明，它能让一群人朝着同一个方向前进。库克在这一基础上又向前迈进了一步。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在读这本书之前，我对于库克的印象是一个务实的商人，他的时代没有改变世界的产品，但是他的时代让苹果成为了世界上最有价值的公司。&lt;/p&gt;
&lt;p&gt;他领导苹果公司的6条核心价值观是无障碍使用，教育，环境责任、包容性和多样性、隐私性和安全性和供应商责任，这些价值观塑造了现在的苹果。&lt;/p&gt;
&lt;p&gt;这本书让我对库克有了更深入的了解，他的个人魅力和价值观对于苹果的发展起到了至关重要的作用。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="Apple" scheme="https://stephenfang.me/tags/Apple/"/>
    
    <category term="蒂姆·库克" scheme="https://stephenfang.me/tags/%E8%92%82%E5%A7%86%C2%B7%E5%BA%93%E5%85%8B/"/>
    
    <category term="Tim Cook" scheme="https://stephenfang.me/tags/Tim-Cook/"/>
    
    <category term="苹果公司的反思与商业的未来" scheme="https://stephenfang.me/tags/%E8%8B%B9%E6%9E%9C%E5%85%AC%E5%8F%B8%E7%9A%84%E5%8F%8D%E6%80%9D%E4%B8%8E%E5%95%86%E4%B8%9A%E7%9A%84%E6%9C%AA%E6%9D%A5/"/>
    
    <category term="创新" scheme="https://stephenfang.me/tags/%E5%88%9B%E6%96%B0/"/>
    
    <category term="人物传记" scheme="https://stephenfang.me/tags/%E4%BA%BA%E7%89%A9%E4%BC%A0%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>《容忍与自由》阅读摘录</title>
    <link href="https://stephenfang.me/2023/05/05/Book35579269/"/>
    <id>https://stephenfang.me/2023/05/05/Book35579269/</id>
    <published>2023-05-04T16:00:00.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>在中文互联网上胡适先生是一个充满争议的人，他的一些言论被人们拿来作为攻击的武器。囫囵吞枣把这本书读完，我认为他的一些观点还是值得我们去思考的，比如他对于终身学习的理解，对于学习创新的态度，对于人际关系的看法等等。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35579269/">豆瓣</a></li><li><a href="https://weread.qq.com/web/reader/27132be072646389271cd35">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="第2章-新生活——为《新生活》杂志第一期做的"><a href="#第2章-新生活——为《新生活》杂志第一期做的" class="headerlink" title="第2章 新生活——为《新生活》杂志第一期做的"></a>第2章 新生活——为《新生活》杂志第一期做的</h3><p>畜牲的生活只是糊涂，只是胡混，只是不晓得自己为什么如此做。一个人做的事应该件件事回得出一个“为什么”。 </p><h3 id="第3章-『我的儿子』"><a href="#第3章-『我的儿子』" class="headerlink" title="第3章 『我的儿子』"></a>第3章 『我的儿子』</h3><p>“父母于子无恩”的话，从王充、孔融以来，也很久了。从前有人说我曾提倡这话，我实在不能承认。直到今年我自己生了一个儿子，我才想到这个问题上去。我想这个孩子自己并不曾自由主张要生在我家，我们做父母的不曾得他的同意，就糊里糊涂地给了他一条生命。况且我们也并不曾有意送给他这条生命。我们既无意，如何能居功？如何能自以为有恩于他？他既无意求生，我们生了他，我们对他只有抱歉，更不能“市恩”了。我们糊里糊涂地替社会上添了一个人，这个人将来一生的苦乐祸福，这个人将来在社会上的功罪，我们应该负一部分的责任。说得偏激一点，我们生一个儿子，就好比替他种下了祸根，又替社会种下了祸根。他也许养成坏习惯，做一个短命浪子；他也许更堕落下去，做一个军阀派的走狗。所以我们“教他养他”，只是我们自己减轻罪过的法子，只是我们种下祸根之后自己补过弥缝的法子。这可以说是恩典吗？ </p><blockquote><p>以上观点和现代年轻人的生育观念不谋而合，但是胡适先生的观点更加激进。</p></blockquote><h3 id="第8章-容忍与自由"><a href="#第8章-容忍与自由" class="headerlink" title="第8章 容忍与自由"></a>第8章 容忍与自由</h3><p>在宗教自由史上，在思想自由史上，在政治自由史上，我们都可以看见<strong>容忍的态度是最难得，最稀有的态度</strong>。人类的习惯总是喜同而恶异的，总不喜欢和自己不同的信仰、思想、行为。这就是不容忍的根源。不容忍只是不能容忍和我自己不同的新思想和新信仰。</p><blockquote><p>容忍是一种难能可贵的品质，但是在现实生活中，容忍的人往往会被人利用，这是一种悲哀。</p></blockquote><h3 id="第9章-一个防身药方的三味药"><a href="#第9章-一个防身药方的三味药" class="headerlink" title="第9章 一个防身药方的三味药"></a>第9章 一个防身药方的三味药</h3><p>我要送你们的小礼物只是一个防身的药方，给你们离开校门，进入大世界，作随时防身救急之用的一个药方。<br>这个防身药方只有三味药： </p><ul><li>第一味药叫作“问题丹”。 </li><li>第二味药叫作“兴趣散”。 </li><li>第三味药叫作“信心汤”。 <blockquote><p>融合了古典药文化和现代教育思想，很有意思。</p></blockquote></li></ul><h3 id="第10章-思想的方法"><a href="#第10章-思想的方法" class="headerlink" title="第10章 思想的方法"></a>第10章 思想的方法</h3><p>我们人总以为思想只有知识阶级才有，可是这是不尽然的；有的时候，思想不但普通人没有，就是学者也没有。普通人每天做事、吃饭、洗脸、漱口……都是照着习惯做去，没有思想的必要，所以不能称为有思想；就是关着窗子，闭着门户，一阵子的胡思乱想，也绝对不是思想的本义。原来<strong>思想是有条理，有系统，有方法的</strong>。 </p><h3 id="第11章-『少年中国』的精神"><a href="#第11章-『少年中国』的精神" class="headerlink" title="第11章 『少年中国』的精神"></a>第11章 『少年中国』的精神</h3><p>今天有人说：“我主张统一和平”，大家齐声喝彩，就请他做内阁总理；明天又有人说：“我主张和平统一”，大家又齐声叫好，就举他做大总统；此外还有什么“爱国”哪，“护法”哪，“孔教”哪，“卫道”哪……许多空虚的名词；意义不曾确定，也都有许多人随声附和，认为天经地义，这便是我所说的“目的热”；</p><blockquote><p>和现在的网络热点很相似，很多人只是随声附和，没有自己的判断力。</p></blockquote><p>俗语说得好：“成人不自在，自在不成人。”我们要做一个人，岂可贪图自在；我们要想造一个“少年的中国”，岂可不冒险；这个世界是给我们活动的大舞台，我们既上了台，便应该老着面皮，拼着头皮，大着胆子，干将起来；那些缩进后台去静坐的人都是懦夫，那些袖着双手只会看戏的人，也都是懦夫。<strong>这个世界岂是给我们静坐旁观的吗？</strong></p><h3 id="第15章-赠与今年的大学毕业生"><a href="#第15章-赠与今年的大学毕业生" class="headerlink" title="第15章 赠与今年的大学毕业生"></a>第15章 赠与今年的大学毕业生</h3><p>没有问题的人们，关在图书馆里也不会用书，锁在试验室里也不会有什么发现。</p><p>一个国家的强弱盛衰，都不是偶然的，都不能逃出因果的铁律的。我们今日所受的苦痛和耻辱，都只是过去种种恶因种下的恶果。我们要收将来的善果，必须努力种现在的新因。一粒一粒地种，必有满仓满屋地收，这是我们今日应该有的信心。</p><blockquote><p>因果的思想其实来源于佛教，《原则：应对变化中的世界秩序》这本书就是对世界发展因果铁律的解读。</p></blockquote><h3 id="第16章-为什么读书"><a href="#第16章-为什么读书" class="headerlink" title="第16章 为什么读书"></a>第16章 为什么读书</h3><p>自小学、中学，而至大学毕业，这十六年所受的教育，都是代表我们老祖宗几千年来得来的知识学问和经验。所谓进化，就是叫人节省劳力，蜜蜂虽能筑巢，能发明，但传下来就只有这一点知识，没有继续去改革改良，以应付环境，没有做格外进一步的工作。<strong>人呢，达不到目的，就再去求进步，而以前人的知识学问和经验作参考。</strong></p><h3 id="第17章-信心与反省"><a href="#第17章-信心与反省" class="headerlink" title="第17章 信心与反省"></a>第17章 信心与反省</h3><p>我们中国民族最伟大的时代，正是我们最肯模仿四邻的时代：从汉到唐宋，一切建筑、绘画、雕刻、音乐、宗教、思想、算学、天文、工艺，哪一件里没有模仿外国的重要成分？佛教和它带来的美术建筑，不用说了。</p><p>可靠的民族信心，必须建筑在一个坚固的基础之上，祖宗的光荣自是祖宗之光荣，不能救我们的痛苦羞辱。何况祖宗所建的基业不全是光荣呢？我们要指出：<strong>我们的民族信心必须站在“反省”的唯一基础之上。</strong></p><blockquote><p>中国人的自信心很大程度上来源于历史，但是历史也是需要反省的。</p></blockquote><h3 id="第18章-哲学与人生"><a href="#第18章-哲学与人生" class="headerlink" title="第18章 哲学与人生"></a>第18章 哲学与人生</h3><p>国内思想界的老将吴稚晖先生，就在《太平洋杂志》上发表一篇《一个新信仰的宇宙观及人生观》。其中下了一个人生定义。他说：“人是哺乳动物中的有二手二足用脑的动物。”人生即是这种动物所演的戏剧，这种动物在演时，就有人生；停演时就没人生。<strong>所谓人生观，就是演时对于所演之态度，</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在中文互联网上胡适先生是一个充满争议的人，他的一些言论被人们拿来作为攻击的武器。囫囵吞枣把这本书读完，我认为他的一些观点还是值得我们去思考的，比如他对于终身学习的理解，对于学习创新的态度，对于人际关系的看法等等。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="国家" scheme="https://stephenfang.me/tags/%E5%9B%BD%E5%AE%B6/"/>
    
    <category term="胡适" scheme="https://stephenfang.me/tags/%E8%83%A1%E9%80%82/"/>
    
    <category term="容忍与自由" scheme="https://stephenfang.me/tags/%E5%AE%B9%E5%BF%8D%E4%B8%8E%E8%87%AA%E7%94%B1/"/>
    
    <category term="理想" scheme="https://stephenfang.me/tags/%E7%90%86%E6%83%B3/"/>
    
    <category term="学习创新" scheme="https://stephenfang.me/tags/%E5%AD%A6%E4%B9%A0%E5%88%9B%E6%96%B0/"/>
    
    <category term="成长" scheme="https://stephenfang.me/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>Warp：GPT 赋能的终端体验</title>
    <link href="https://stephenfang.me/2023/03/04/Warp_Review/"/>
    <id>https://stephenfang.me/2023/03/04/Warp_Review/</id>
    <published>2023-03-04T08:40:00.000Z</published>
    <updated>2023-07-24T13:38:31.404Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.warp.dev/">Warp</a>自称是“21世纪的终端”，这是一款基于Rust开发的原生终端应用，兼容主流的 zsh（默认）、bash 以及 fish，主打功能是块编辑以及 GPT 模型下的命令搜索，在最近受到了不少关注。</p><p>先说结论，终端作为程序员每天都需要使用的工具，Warp 在现阶段可能还不能替代你电脑上配置了花里胡哨主题又绑定了无数快捷键的终端，但作为一个新起的工具应用，它的功能和思路非常值得学习和借鉴。</p><span id="more"></span><blockquote><p>目前 Warp 仅适用于 Mac，正在开发 Windows 和 Linux 的版本。</p></blockquote><h2 id="接触"><a href="#接触" class="headerlink" title="接触"></a>接触</h2><p>了解到这款终端是通过<a href="https://www.dockhunt.com/">DockHunt</a> 的 <a href="https://www.dockhunt.com/apps">Top 100 apps</a>。在这个页面你可以看到全世界的 Mac 用户都在 Dock 上放置了什么 app，这个榜单或许并不具有代表性，但我们得以从这个榜单窥见喜欢折腾的用户都在重度使用什么 app。</p><p>作为老牌的原生终端应用，<a href="https://iterm2.com/">iTerm 2</a> 在榜单上的位置在Warp 之前，这一点也不意外，相较于 Mac 原生的 Terminal，iTerm 2（后简写为iTerm） 提供了自动补全、全局下拉菜单、支持正则的搜索、多面板展示等无数值得称赞的功能。打开 iTerm 的控制面板，你会惊讶于这款终端有如此之多的可定制项，以及在 GitHub 上能够找到无数开箱即用的主题。并且作为一款开源应用，iTerm 这些功能都是免费的。如果你对 iTerm 的功能感兴趣，可以在官网提供的<a href="https://iterm2.com/features.html">列表</a>一览它所提供的功能。</p><p>确切的说，是 Warp 的图标吸引了我，这类简约的图标设计风格让用户第一眼完全不知道应用的用途，很难说是不是一种好的趋势，相较之下， iTerm 的图标就易懂的多。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2013.37.58.png" alt="icon"></p><p>值得一提的是，Warp在<a href="https://www.producthunt.com/products/Warp">Product Hunt</a>上获得了2022年的最佳开发工具提名。上一次人们对终端工具如此感兴趣可能还是<a href="https://hyper.is/?ref=producthunt">Hyper</a>的出现，尽管它是使用 Electron 框架开发的。在 Warp 的博客上他们不加掩饰地夸耀其与 Hyper 上在 vtebench 基准测试上的性能优势。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2015.32.39.png" alt="Performance"></p><h2 id="界面设计"><a href="#界面设计" class="headerlink" title="界面设计"></a>界面设计</h2><p>Warp 的与众不同是你打开终端的那一刻就可以感受到的。命令输入区域被摆放在了终端的底部，顶部和所有现代终端一样都展示了 Tab，背景则提示了三个快捷键命令，分别是命令面板、命令检索以及快捷键一览。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-01%20at%2013.03.35.png" alt="Home"></p><p>你可以通过设置里的选项修改 Warp 的主题，它提供了日间以及夜间两套方案，每种方案都有多种配色方案供选择，并且额外提供了与系统同步（夜间模式）这一选项。作为一款给程序员用的产品，Warp 自然支持<a href="https://docs.warp.dev/appearance/custom-themes">自定义主题</a>，然而对于我我来说系统的默认主题足够简洁耐看。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-02%20at%2001.17.50.png" alt="LightTheme"></p><p>Warp 默认字体是开源的<a href="https://github.com/source-foundry/Hack">Hack</a>，相比我之前在 iTerm 使用的 Panic Sans，这款字体具备了很好的区分度。如果你对终端字体感兴趣我推荐你阅读这篇<a href="https://zhuanlan.zhihu.com/p/89833093">《程序员字体的自我修养》</a>。</p><p>除此之外，Warp终端还支持透明度调节。正如下图所见，Warp 的配置菜单非常简洁，用户能够根据自己的喜好实现字体和颜色的个性化定制。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2015.17.42.png" alt="Preference"></p><p>同样的，Warp终端支持分屏，用户可以通过快捷键<code>Cmd+D</code>开启分屏，非常方便在不同的窗口中进行操作。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-02%20at%2001.39.33.png" alt="Windows"></p><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><h3 id="检索"><a href="#检索" class="headerlink" title="检索"></a>检索</h3><p>在网络环境下使用<code>Ctrl+` </code> 或者<code>#</code> 快捷键可以快速唤起A.I. 命令搜索，在输入框使用自然语言输入需要达成的目的并按下回车，由 <a href="https://openai.com/blog/openai-codex">OpenAI Codex</a> 生成的结果就会立刻下达并等待用户的<code>Cmd+Enter </code>确认，免去了在 Stack Overflow 检索的步骤。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2013.11.52.png" alt="AICommand"></p><p>Warp 还提供了 Workflows 面板方便用户迅速检索常用命令，对应的快捷键是 <code>Ctrl+Shift+R</code>，无论是小白还是大牛，这个功能都能够一定程度上帮助到用户。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2013.14.58.png" alt="Workflows"></p><p>比较有心的是 Warp 还在键入推荐命令后给予了文档提示，可以理解为工具集成了常用的命令行文档。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2013.16.26.png" alt="Prompt"></p><p>事实上，整个命令检索功能都被整合到了一个面板，使用快捷键 <code>Ctrl+R </code> 就可以唤起，默认 Warp 会在 Workflows、历史以及A.I. 检索三个场景下进行命令搜索。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2013.22.19.png" alt="Search"></p><h3 id="命令面板"><a href="#命令面板" class="headerlink" title="命令面板"></a>命令面板</h3><p>作为一名命令面板 (Command Palette) 的爱好者，我觉得给终端应用加上命令面板是一个很好的想法。毕竟你永远无法记住每一个快捷键，通过<code>Cmd+P</code>快捷唤起命令面板触发二级操作可以一步到位，省下不少导航的时间。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-02%20at%2001.44.35.png" alt="Command"></p><p>这项起源于 Sublime Text 的功能未来或许能够在更多的桌面 app 以及网页上见到，目前无论是Notion、Raycast、1Password 8、Visual Studio Code、Arc Browser、Linear、Spark Desktop 还是 Figma，对命令面板都有很好的支持。如果你对命令面板感兴趣可以继续阅读<a href="https://capiche.com/e/consumer-dev-tools-command-palette">这篇文章</a>.</p><h3 id="块编辑"><a href="#块编辑" class="headerlink" title="块编辑"></a>块编辑</h3><p>在 Warp 中执行命令，可以理解团队对终端的重新思考。块作为构成聚合了终端操作的原子单位，包含了<code>prompt</code>、<code>input command</code>、<code>output command</code>三个部分。</p><p><img src="http://image.stephenfang.me/mweb/Block.png" alt="Block"></p><p>用户不再需要关注文本的操作，反之可以通过选择块单位快速实现命令的拷贝、重复输入、书签、分享等操作，并且这些操作也同样适用于 SSH 连接服务器。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2012.04.45.png" alt="Block Selection"></p><p>如果你和我一样之前使用的终端是 iTerm，可能你也会抱怨 iTerm 甚至不能在更改输入命令的时候直接将光标移动到对应的位置进行删改。Warp 解决了这写痛点，你可以像一个文本编辑器一样在 Warp 中输入、修改和撤销命令，这可能是我最喜欢这个终端的一个地方。</p><p>如果你之前使用过更正错误命令的开源项目<a href="https://github.com/nvbn/thefuck">thefuck</a>，Warp 直接在这个项目的基础上内建了命令纠错功能，并且这项功能是默认开启的。无论是拼写错误、权限缺失（chmod +x）还是 flag 缺失问题， Warp 都可以在错误的输入之后给予对应的提示。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2012.28.07.png" alt="Fuck"></p><p>至于错误高亮、自动补全这些功能几乎是必备的功能，值得一提的 Warp 在补全候选键入的快捷键并非是<code>Tab</code> 而是 <code>Ctrl+F（Fill）</code>，</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2012.36.16.png" alt="Smart"></p><p>并且和<a href="https://github.com/withfig/autocomplete">Fig插件</a>一样，Warp 给出了递进菜单来快捷补全命令，这对我来说这需要一些时间来适应。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2012.37.32.png" alt="iTerm"></p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>丰富的快捷键组合能够让用户在使用 Warp 的时候使用一步完成的操作绝不用两步。你可以从<a href="https://docs.warp.dev/features/keyboard-shortcuts">官方介绍</a> 找到绑定的快捷键列表，并且你也可以在 <code>Settings &gt; Keyboard Shortcuts</code> 重新映射快捷键。</p><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>使用块编辑可以实现永久链接代码片段的分享，我生成了一段<br><a href="https://app.warp.dev/block/hb0p24pHlQCjNhps3d7W5W">demo代码</a>可供访问。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2013.55.03.png" alt="Share"></p><p>鉴于目前社交网络上代码片段分享的 App 和 Web 工具层出不穷，作为“21世纪的终端”具备这个功能实属必要。直接把链接粘贴到 Slack、Twitter、Notion、Telegram等平台能够实现预览，但有些遗憾，目前预览的大图都是固定的。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2014.08.15.png" alt="Telegram"></p><h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><p>Warp 的<a href="https://docs.warp.dev/features/entry/workflows">官方文档</a>提供了相当完善的功能描述，列举来说，前文没有提及的功能还有</p><ul><li>VSCode 和 JetBrains系 IDEs的整合</li><li>通知发送</li><li>全屏滚动</li><li>Url快速选择和访问</li><li>Voice Over支持</li></ul><p>等等，Warp 放出了一份基于<a href="https://gist.github.com/hellricer/e514d9615d02838244d8de74d0ab18b3">terminal-testdrive.sh</a>的<a href="https://docs.warp.dev/how-does-warp-compare/terminal-features">功能对比表格</a>，可以找到你需要的 must-have 功能有没有缺失。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><p>在体验这款终端的过程中，通过对比不同终端之间的功能区别,我对终端模拟器这类工具有了更多的了解，但目前来说，Warp 还存在着一些问题。</p><ul><li><p>对 Vim 的支持不够，如果你对 Vim 有足够的肌肉记忆,重新熟悉一套新的快捷键成本过于高昂</p></li><li><p>连接 SSH 不支持 tmux，从 <a href="https://github.com/warpdotdev/Warp/discussions/501">GitHub 讨论</a> 看影响了不少人的工作流</p></li><li><p>块的概念牺牲了屏幕可以显示的空间，即使是打开了「紧凑模式」</p></li><li><p>设计和体验并不是像是原生的应用，这一点会偶尔让我想念 iTerm。在启动速度上我感觉 Warp 会慢一些，尽管官方提供的<a href="https://docs.warp.dev/how-does-warp-compare/performance">Benchmark 测试</a>特地强调了 Warp 的卓著执行性能与渲染性能</p></li><li><p>部分交互细节仍然需要打磨，至少不应该出现下面这样的交互问题</p><p>  <img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-02%20at%2001.34.36.png" alt="Setting"></p></li><li><p><strong>Warp 至少在目前不是一款开源应用</strong>，并且由于存在网络层的加密访问，出于安全的考量，Warp 可能会在一些公司被禁用</p></li></ul><h3 id="未来方向"><a href="#未来方向" class="headerlink" title="未来方向"></a>未来方向</h3><p>从官网可以找到 Warp 正在准备推出一个类似 Jupyter NoteBook 的新功能，从 UI 和概念上看非常值得期待。就和 AI 搜索一样，这些巧思都是团队性格的体现。</p><p><img src="http://image.stephenfang.me/mweb/CleanShot%202023-03-04%20at%2015.40.03.png" alt="Notebook"></p><p>Warp 会首先开源使用 Rust 写就的 UI 框架，而服务器部分将暂时保持闭源，在<a href="https://github.com/warpdotdev/Warp/discussions/400">这个帖子</a>下团队详细解释了如何看待开源这件事情。</p><p>Rust 作为最近几年火起来的语言，在 Dropbox、Discord 等产品中都能见到它的身影，从Stack Overflow的<a href="https://insights.stackoverflow.com/survey">年度用户调查</a> 中也可以看到越来越多的程序员想要学习这一门语言。</p><p>我个人非常好奇这个团队怎样利用 Rust 实现原生的用户界面，可能也有一些 AppKit 或者 SwiftUI 的代码，这些都得等开源的时候才能知道答案了。</p><h3 id="理想的终端模拟器？"><a href="#理想的终端模拟器？" class="headerlink" title="理想的终端模拟器？"></a>理想的终端模拟器？</h3><p>作为结尾，可以引出“理想的终端模拟器是怎样的”这个问题，答案可能有</p><ul><li>全权个性化配置</li><li>强大的命令编辑</li><li>便捷的命令查询</li><li>迅速的命令访问</li><li>灵活的窗口操作</li></ul><p>喊出自己是21世纪的终端还是需要一点底气的。作为一款新的工具类应用，Warp 可能很难满足所有人的需求，大刀阔斧的UI变更需要相当的学习成本，但换来的是开箱即用的配置、无需安装的插件功能以及未来的跨平台支持。</p><p>Warp 可以帮助用户更加高效地进行终端操作，它的简洁界面、实用功能和安全性都表现得非常出色。如果你还没有尝试过Warp终端不妨下载来试试。如果你对它的功能不满意，请再给他一些时间。</p><h2 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h2><ol><li><a href="https://www.producthunt.com/products/Warp">https://www.producthunt.com/products/Warp</a></li><li><a href="https://matduggan.com/Warp-terminal-emulator-review/">https://matduggan.com/Warp-terminal-emulator-review/</a></li><li><a href="https://zhuanlan.zhihu.com/p/89833093">https://zhuanlan.zhihu.com/p/89833093</a></li><li><a href="https://docs.warp.dev/features/blocks">https://docs.warp.dev/features/blocks</a></li><li><a href="https://capiche.com/e/consumer-dev-tools-command-palette">https://capiche.com/e/consumer-dev-tools-command-palette</a></li><li><a href="https://www.warp.dev/blog/how-warp-works">https://www.warp.dev/blog/how-warp-works</a></li><li><a href="https://yalantis.com/blog/rust-market-overview/">https://yalantis.com/blog/rust-market-overview/</a></li><li><a href="https://insights.stackoverflow.com/survey">https://insights.stackoverflow.com/survey</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.warp.dev/&quot;&gt;Warp&lt;/a&gt;自称是“21世纪的终端”，这是一款基于Rust开发的原生终端应用，兼容主流的 zsh（默认）、bash 以及 fish，主打功能是块编辑以及 GPT 模型下的命令搜索，在最近受到了不少关注。&lt;/p&gt;
&lt;p&gt;先说结论，终端作为程序员每天都需要使用的工具，Warp 在现阶段可能还不能替代你电脑上配置了花里胡哨主题又绑定了无数快捷键的终端，但作为一个新起的工具应用，它的功能和思路非常值得学习和借鉴。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://stephenfang.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Rust" scheme="https://stephenfang.me/tags/Rust/"/>
    
    <category term="Terminal" scheme="https://stephenfang.me/tags/Terminal/"/>
    
    <category term="Mac" scheme="https://stephenfang.me/tags/Mac/"/>
    
    <category term="GPT" scheme="https://stephenfang.me/tags/GPT/"/>
    
    <category term="AI" scheme="https://stephenfang.me/tags/AI/"/>
    
    <category term="终端" scheme="https://stephenfang.me/tags/%E7%BB%88%E7%AB%AF/"/>
    
    <category term="Warp" scheme="https://stephenfang.me/tags/Warp/"/>
    
  </entry>
  
  <entry>
    <title>《可能性的艺术》阅读摘录</title>
    <link href="https://stephenfang.me/2023/01/10/Book35819419/"/>
    <id>https://stephenfang.me/2023/01/10/Book35819419/</id>
    <published>2023-01-09T16:00:12.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>最早了解到这本书是看理想上的音频课程，但单看比较政治学这几个字并没有让我特别有学习的欲望，初次看到书名我还有些担心会不会读不下去，直到这本书在豆瓣上收获了很高的评价才真正开始阅读这本书。总的来说，整本书的描述和例子都非常生动，是我政治学方面的启蒙读物，确确实实让我了解了政治就是可能性的艺术。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35819419/">豆瓣</a></li><li><a href="https://weread.qq.com/web/reader/9ea325a0813ab6d00g01640c">微信读书</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>“至少在有一点上你是非常幸运的：你投胎在了一个相当和平的时代。这一点对于命运的影响，其重要性甚至可能超过你的家庭背景、你的高考成绩、你的专业背景。你的爸爸是不是富豪，可能只是影响你能不能随时去马尔代夫或者夏威夷度假，但是你到底是出生于1900年还是2000年，则可能直接影响着你会不会被饿死、能不能受到教育，甚至能不能长大，以及会不会被送到战场上去当炮灰。” 这一段话对于在和平年代生活的我们来说简直是醍醐灌顶，很多我们认为理所应当的事情其实背后是几百年的努力，很多达成的共识经过了几代人的试错。就拿民主制来说这都是最近百年诞生的产物。</p><p>现代社会中，你的身份是由你的职业定义的，而你的地位、见识、人脉更多的又是由你的职业所决定的，这种观念恰恰是资本主义带来的。“虽然资本主义在财富方面制造不平等，但在消除传统社会等级方面，它又恰恰是一种平等化的力量，因为它根据你为市场所提供的价值，而不是你的种姓、宗教来决定你的位置。” </p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="第一章-全球视野"><a href="#第一章-全球视野" class="headerlink" title="第一章 全球视野"></a>第一章 全球视野</h3><h4 id="1-政治比较的维度"><a href="#1-政治比较的维度" class="headerlink" title="1. 政治比较的维度"></a>1. 政治比较的维度</h4><p>衡量政治发展，应该是两个尺度，一个是衡量民主问责，一个是衡量国家能力，二者缺一不可。如果用一个比喻，或许可以说，国家能力是一个政治体系的发动机，而民主问责则是一个政治体系的方向盘。</p><h4 id="2-和平的“爆发”：一个黄金时代？"><a href="#2-和平的“爆发”：一个黄金时代？" class="headerlink" title="2. 和平的“爆发”：一个黄金时代？"></a>2. 和平的“爆发”：一个黄金时代？</h4><p>知识分子们想象过去的时候，似乎假定自己穿越时空回到过去，还会是衣食无忧的知识分子。其实，考虑到当时的社会结构，一个随机空降的人，更有可能成为农民、铁匠、马夫，换句话说，你“梦回唐朝”的话，不大可能成为“一将功成万骨枯”里的“一将”，更可能成为其中的“万骨”而已。</p><blockquote><p>我很喜欢看一些穿越文学，例如在唐代生活会是怎样、在当代文人最钟意的宋朝生活会是怎样，无法否认的是穿越回去的你如果不是身份特殊的人，做为劳苦百姓，你的生活只会比现在差上千百倍。</p></blockquote><h3 id="3-天下与我：国际格局的多米诺骨牌效应"><a href="#3-天下与我：国际格局的多米诺骨牌效应" class="headerlink" title="3. 天下与我：国际格局的多米诺骨牌效应"></a>3. 天下与我：国际格局的多米诺骨牌效应</h3><p>全球化是大海，国家则是海上航行的船只。对于个体而言，一个人到底坐在哪一条船上，当然深深地影响着他的命运，但是无论他坐在哪条船上，海浪更是深深地影响着每一条船的沉浮。</p><blockquote><p>很喜欢这个全球化形象的比喻。</p></blockquote><p>在这个秩序的缔造者眼中，他们的利益最大化就在自由主义的扩张当中，因为贸易自由了，他们就有更多钱可挣；政体同化了，意识形态的摩擦就会减少；观念传播了，社会交往自然更加丰富。所以，自由主义对于他们来说，既是理念，也是利益。</p><h3 id="4-全世界有产者联合起来？全球化的经济后果"><a href="#4-全世界有产者联合起来？全球化的经济后果" class="headerlink" title="4. 全世界有产者联合起来？全球化的经济后果"></a>4. 全世界有产者联合起来？全球化的经济后果</h3><p>某种意义上，全球化就是构建一个“连通器”，它把世界各地之间的关卡都给撤掉了——撤掉之后，高处的水就哗哗流下来了，而低处的水则蹭蹭涨上去了。这一跌一涨，就出现了政治问题。哪怕各国生产率都提高，总体水位会上升，但是由于身处“连通器”的不同位置，也就是说初始位置不同，水位上升的幅度是大大不同的。</p><p>当年，马克思号召全世界无产阶级联合起来，但是事实却是，经过这一轮的“超级全球化”，无产者没有联合起来，全世界有产者倒是先联合起来了。</p><p>很多全球化的挑战，本质是发展的代价。很多人都知道熊彼特（Joseph Alois Schumpeter）的名言：资本主义的特点是“创造性毁灭”。当年发明电灯的时候，肯定也造成了一批蜡烛工人失业，但我们会因此放弃电灯吗？显然不会。</p><blockquote><p>人工智能的研究不会因为发展的代价而被放弃。</p></blockquote><h3 id="5-为什么瑞典也如此排外？全球化与文化反弹"><a href="#5-为什么瑞典也如此排外？全球化与文化反弹" class="headerlink" title="5. 为什么瑞典也如此排外？全球化与文化反弹"></a>5. 为什么瑞典也如此排外？全球化与文化反弹</h3><p>西方文化越强势、越流行、越逼近家门口，文化本土主义者就越需要强化传统文化来与之对抗。</p><p>正是因为彼此文化、语言、宗教接近，才产生了深厚的社会信任，使得人们愿意交出很大一部分收入来扶助那些穷困潦倒者，一旦社会“二元化”，人们不再把彼此看作兄弟姐妹，他们还愿不愿意交同样高的税收、进行同样程度的财富转移，就变成一个问号了。</p><blockquote><p>只有一方意见的社会与双方意见分歧很大的社会一样，都是很难取得进步的。</p></blockquote><h2 id="第二章-政治转型"><a href="#第二章-政治转型" class="headerlink" title="第二章 政治转型"></a>第二章 政治转型</h2><h3 id="6-“历史终结论”的终结？（1）"><a href="#6-“历史终结论”的终结？（1）" class="headerlink" title="6. “历史终结论”的终结？（1）"></a>6. “历史终结论”的终结？（1）</h3><p>如果把5000年文明史看作一天24小时的话，是最后这一个小时才出现了大规模疆域上的代议民主制及其扩散。可能因为民主的观念现在已经非常深入人心，我们很容易忘掉这个基本的事实：历史上的大多数地区的大多数时期，民主是一种人们闻所未闻的东西，就像人们对火车、汽车、宇宙飞船闻所未闻一样。</p><h3 id="7-“历史终结论”的终结？（2）"><a href="#7-“历史终结论”的终结？（2）" class="headerlink" title="7. “历史终结论”的终结？（2）"></a>7. “历史终结论”的终结？（2）</h3><p>韩国，从1948年建立第一共和国开始，韩国政治就进入了过山车模式，在民主、威权之间不断摇摆、动荡，第一共和国、第二共和国、第三共和国……40年里，一口气建立过六个共和国，但是，1988年这次转型之后，尽管韩国政治也是风波不断，但是它的政体形式却沉淀了下来。</p><blockquote><p>在B站上看过很多韩国政坛的视频，确实也是一朵政治史上的一朵奇葩。</p></blockquote><h3 id="8-法国往事：转型浪潮中的第一艘泰坦尼克号"><a href="#8-法国往事：转型浪潮中的第一艘泰坦尼克号" class="headerlink" title="8. 法国往事：转型浪潮中的第一艘泰坦尼克号"></a>8. 法国往事：转型浪潮中的第一艘泰坦尼克号</h3><p>人们放弃自由的时候从来不是因为热爱专制这种“恶”，而是因为人们在热爱自由的同时相信有更高的善值得追求，比如平等，比如正义，比如认同，比如面包，比如救亡，以至自由作为次要的善可以“暂时”被舍弃，从而换取那个更高的善。甚至这种“交换”可以被表述为：牺牲暂时的自由来获得长远的自由，牺牲形式的自由来获得实质的自由。这或许可以被称为政治当中的“善恶捆绑销售”原则。</p><p>遗憾的是，学习民主可能比学习自由要容易得多，因为前者是一种制度，而后者是一种习俗。制度改写易，移风易俗难，这种不对称或许正是为什么新兴民主常常掉入“不自由民主”的陷阱。在任何国家，当政治制度迅速变革，它都可能与既有的政治习俗脱节，只能停下来等待文化缓慢的变迁。遗憾的是，人类政治文明的变迁没有捷径，它必须穿过千千万万人的心灵。</p><blockquote><p>民主制需要取得平衡，需要达成共识，需要依靠试错，进而比威权更需要更多时间。要想在短时间内实现180度转弯很可能会造成分裂，因此整个试错过程更像是一种艺术。</p></blockquote><h3 id="9-埃及：从“阿拉伯之春”到“阿拉伯之冬”"><a href="#9-埃及：从“阿拉伯之春”到“阿拉伯之冬”" class="headerlink" title="9. 埃及：从“阿拉伯之春”到“阿拉伯之冬”"></a>9. 埃及：从“阿拉伯之春”到“阿拉伯之冬”</h3><p>在当代世界，人们倾向于直接把威权倒台等同于民主转型，把民众反叛等同于民主革命。这是一个常见的认知陷阱。当我们看到一个专制政府被推翻，我们往往直接假定之后会是民主崛起。但是，历史告诉我们，一个威权政府的倒台更普遍和常见的后果是另一个威权体制的建立，甚至是无政府状态或者战乱的出现，没有什么理由认为专制倒台之后会自然而然地出现民主政体。</p><blockquote><p>没有什么理由认为专制倒台之后会自然而然地出现民主政体，作者给出了详实的例子。</p></blockquote><p>如果放眼全世界，五花八门的裂痕动员就更多了，什么黄衫军和红衫军的对立、亲俄派和亲欧派的对立、蓝营和绿营的对立、黑衣人和白衣人的对立……冲突太多，我感觉颜色都快不够用了。哪怕在欧美，我们都知道，也存在所谓留欧派和退欧派的对立、民主党和共和党的对立、反移民和支持移民的对立，等等等等。</p><blockquote><p>在香港念书的时候了解到了所谓黄、蓝阵营的对垒，就算是进店吃饭都有“黄色经济圈”这样的说法，这种裂痕会在很长一段时间里深入人心。</p></blockquote><h3 id="10-南非：转型何以软着陆？"><a href="#10-南非：转型何以软着陆？" class="headerlink" title="10. 南非：转型何以软着陆？"></a>10. 南非：转型何以软着陆？</h3><p>不要小看这些象征性的行为，看似平淡无奇，放在一个国家领导人身上，就可能因为他所拥有的巨大影响力而具有乘数效应。也不要觉得一个领导人作作秀还不简单，事实是，作秀会为他赢得很多人心，也会让他失去很多人心。到今天，还有很多南非人批评曼德拉过于讨好白人了。津巴布韦的穆加贝就批评曼德拉，说他“too saintly”。用今天很多人的话来说，就是太“圣母婊”了。</p><p>后来看德克勒克的访谈，特别感动的一点，是他谈到他和曼德拉的私人友谊。尽管在权力交接过程中两个人曾经发生很多摩擦，但是退休后，他们反而成了好朋友，经常互相拜访、聚餐，生日相互问候。但凡两个人中有一个心胸狭窄，怎么可能跨越如此深刻的历史恩怨，成就这种传奇般的友谊？</p><p>曼德拉、德克勒克这样的人，是真正的政治家，而不仅仅是政客或者官僚。他们头顶一堆盘子，脚踩滑轮，小心翼翼地去穿越一条细细的钢丝。当然，转型的软着陆不可能只靠政治家，它需要所有重要的政治力量保持宽容和耐心。有一句话我印象深刻，我想它是对的，它说：<strong>自由从不降临于人类，人类必须上升至其高度。</strong>”</p><h3 id="11-印度：民主为什么“不管用”？（1）"><a href="#11-印度：民主为什么“不管用”？（1）" class="headerlink" title="11. 印度：民主为什么“不管用”？（1）"></a>11. 印度：民主为什么“不管用”？（1）</h3><p>假设一个学校非常开明，让学生们自己决定，午餐食堂应该提供什么，这是民主对不对？这当然体现了对学生的尊重，但是，如果学生们商量来商量去，决定每天午餐就吃薯条、炸鸡和可乐，最后学生们都吃成了不健康的大胖子，那么，民主当然“不管用”了。</p><blockquote><p>以后和朋友谈到抽象的民主就用这个做比喻。</p></blockquote><p>每次听到人们大义凛然地批判新自由主义，我都觉得非常吃惊，因为中国和印度，两个世界上最大的发展中国家，制度不同、文化不同，但都通过自由化改革使数亿人摆脱贫穷，在这个过程中，技术上固然有种种可以改善之处，但是总体而言，这场改革的正面效应难以辩驳。</p><blockquote><p>使数亿中国人摆脱贫穷的是<strong>自由化改革</strong></p></blockquote><p>我们知道，圣诞老人并不真的存在，一个圣诞老人的口袋里藏着什么，取决于千千万万个父母在圣诞节之前花费了多少心思。所以，不管是什么制度，种瓜得瓜、种豆得豆，是永恒的道理。民主没有那么神奇，甚至，它也不应该那么神奇，因为如果有一个制度按钮按下去可以一劳永逸，那真是对人性之复杂以及复杂之美的蔑视。</p><h3 id="12-印度：民主为什么“不管用”？（2）"><a href="#12-印度：民主为什么“不管用”？（2）" class="headerlink" title="12. 印度：民主为什么“不管用”？（2）"></a>12. 印度：民主为什么“不管用”？（2）</h3><p>在当代印度，种姓歧视的主导者已经是社会，而非政府。当然，警察在执法过程中肯定也还有选择性的歧视，但是，至少这种做法是无法可依的。</p><blockquote><p>算是对印度社会的一点了解。</p></blockquote><p>法律是法律，习俗是习俗。习俗甚至比法律更难改变，因为当压迫来自政府时，民众可以聚集到政府门口，去抗议示威，去推动立法改革，但是，当这种压迫来自几百万、几千万甚至几亿分散的人群时，你向谁去抗议？你不可能到几千万个家庭门口、挨家挨户去敲门抗议对不对？所以，当制度的发展超前于文化，文化必然会以暗度陈仓的方式去把规则悄悄地扭曲为潜规则。</p><p>什么是“理性逻辑”？谁能干、谁清廉，我选谁，这就是理性逻辑。什么是“认同逻辑”？只要是“我们的人”，管他好不好呢，不好也好；只要是“他们的人”，管他坏不坏呢，不坏也坏，这就是“认同逻辑”。</p><blockquote><p>一旦“认同逻辑”碾压“理性逻辑”,可怕的事情就会发生。</p></blockquote><h3 id="13-伊拉克：铁腕强人是救星？"><a href="#13-伊拉克：铁腕强人是救星？" class="headerlink" title="13. 伊拉克：铁腕强人是救星？"></a>13. 伊拉克：铁腕强人是救星？</h3><p>我想起一个苏联笑话，它说：未来如何确定无疑，但是过去怎样，却难以预测。什么意思呢？就是说，未来早就写进了政治纲领，它不容置疑，但是过去到底发生了什么，却不好说了，因为人们不仅仅是在回忆过去，而且往往也根据当下的政治需要去想象过去。</p><blockquote><p>“根据当下的政治需要去想象过去”</p></blockquote><p>伊拉克在萨达姆时代并不存在很多人想象中的欣欣向荣、国泰民安。自萨达姆正式上台以来，伊拉克人从一场战争走向另一场战争、一个冲突走向另一个冲突，生活在一场无法醒来的噩梦中。</p><p>遗憾的是，不是所有的铁腕人物都是李光耀。事实上，每一个李光耀可能都对应着一个或甚至多个萨达姆。</p><h2 id="第三章-国家建构"><a href="#第三章-国家建构" class="headerlink" title="第三章 国家建构"></a>第三章 国家建构</h2><h3 id="14-什么是国家？从墨西哥的毒贩集团说起"><a href="#14-什么是国家？从墨西哥的毒贩集团说起" class="headerlink" title="14. 什么是国家？从墨西哥的毒贩集团说起"></a>14. 什么是国家？从墨西哥的毒贩集团说起</h3><p>在比较政治学界，关于什么是国家，更广为传播的说法不是马克思的定义，而是另一个思想家马克斯·韦伯的说法。他怎么定义国家呢？他说，国家是什么？<strong>国家是特定疆域内合法地垄断暴力的机构</strong>。</p><blockquote><p>这一章开始讲国家建构，第一次了解到马克思主义之外的政治学。</p></blockquote><p>国的繁体字（國），周边是一个框，即一个清晰的边界，中间的“戈”，也就是武器，守卫着口，也就是“人口”。看来，当韦伯将国家定义为“特定疆域内暴力垄断的机构”时，这位伟大的学者与几千年前的中国古人，可以说是心有灵犀一点通了。</p><h3 id="15-为什么要“重新带回国家”？比较政治学的轮回"><a href="#15-为什么要“重新带回国家”？比较政治学的轮回" class="headerlink" title="15. 为什么要“重新带回国家”？比较政治学的轮回"></a>15. 为什么要“重新带回国家”？比较政治学的轮回</h3><p>学者曼瑟尔·奥尔森（Mancur Olson）曾经有一个说法来形容这个变化，叫作“流寇变坐寇”，roving bandits变stationary bandits。什么意思呢？简单来说，以前可能有10伙、20伙匪徒轮流来打劫你，现在只剩下一伙了。一伙匪徒虽然也很危险，但是如果这一伙匪徒明确了自己对这块领地的所有权，他们就有部分的动力去保护这块领土、发展这块领地，毕竟，你把鸡都给杀了，就再也捡不到鸡蛋了。</p><blockquote><p>“流寇变坐寇”</p></blockquote><h3 id="18-美国：国家建构的另类道路（1）"><a href="#18-美国：国家建构的另类道路（1）" class="headerlink" title="18. 美国：国家建构的另类道路（1）"></a>18. 美国：国家建构的另类道路（1）</h3><p>美国这个国家的英文全称是United States of America。其中，State这个词是加了s的，是个复数，美国是States，而不是State。理解了这个s，是理解美国人的“国家观”一把最关键的钥匙。</p><h3 id="19-美国：国家建构的另类道路（2）"><a href="#19-美国：国家建构的另类道路（2）" class="headerlink" title="19. 美国：国家建构的另类道路（2）"></a>19. 美国：国家建构的另类道路（2）</h3><p>1910年煤矿局的成立，1912年儿童局的成立，以及之后更多相关立法的诞生，都与之相关。所以说，这个世界上，比悲惨更可怕的，是不为人知的悲惨。一旦有了信息的开放和流通，社会就有了推动变化的杠杆。</p><blockquote><p>一旦有了信息的开放和流通，社会就有了推动变化的杠杆，在微博诞生之初对于这个平台还是抱有这样的期许。</p></blockquote><p>国家在成长，但是对于社会、市场和个体而言，它仍然是配角。我们常常把“治理”等同于“政府”，认为governance就是government，但是governance也可以来自社会本身。当一个社会不断涌现盖茨和马斯克，成就爱因斯坦和费曼，培育硅谷、好莱坞或者百老汇，其国家能力，从根本而言，是民间活力和个体创造性的溢出效应而已。这或许不是国家能力提升的唯一道路，未必能够被其他国家复制，甚至未必会被美国人自己的后代继承，但是，国强不必民弱，甚至民强国可更强，这一可能性的存在，还是鼓舞人心。</p><h3 id="20-国家建构的瓶颈：阿富汗的悲剧"><a href="#20-国家建构的瓶颈：阿富汗的悲剧" class="headerlink" title="20. 国家建构的瓶颈：阿富汗的悲剧"></a>20. 国家建构的瓶颈：阿富汗的悲剧</h3><p>原教旨主义的“伊斯兰法”必须成为国土上唯一和最高的法，而人类所能制定的法——不管是国王制定的还是所谓民主议会制定的，只能臣服于“伊斯兰法”。在这种情况下，他们如何接受与政治世俗派分享权力？纯粹的权力之争或者利益之争可以讨价还价，但是你死我活的观念之争却没有商量的余地。</p><h2 id="第四章-政治文化"><a href="#第四章-政治文化" class="headerlink" title="第四章 政治文化"></a>第四章 政治文化</h2><h3 id="21-韩国电影中的革命：观念的水位与制度的变迁"><a href="#21-韩国电影中的革命：观念的水位与制度的变迁" class="headerlink" title="21. 韩国电影中的革命：观念的水位与制度的变迁"></a>21. 韩国电影中的革命：观念的水位与制度的变迁</h3><p>观念这个东西看不见、摸不着，但它是我们诠释世界的“翻译软件”系统。要理解这个“翻译软件”的重要性，我举两个例子。比如，自发的买卖行为，在自由主义的观念下，叫“市场交换”，但是在极左观念下叫什么？“投机倒把”。明明是同一件事，在两个观念体系里，听上去会成为道义上截然相反的事情。又比如，一个私营企业家投资挣钱了，在自由市场的观念下叫“投资盈利”，但是在左翼的观念下叫什么？叫作“剥削剩余价值”。仍然是同一件事，被两个不同的话语体系诠释成了褒贬相反的事情。这就是观念的力量——它是我们吸收信息的“意义加工软件”。</p><blockquote><p>企业家经过“翻译软件”成为了“人人喊打”的资本家。</p></blockquote><p>这些电影在韩国会如此受欢迎，因为这个抗争过程已经成为集体记忆的一部分，成为“韩国精神”的一部分。这种几代人添砖加瓦构建出来的民主，和那种短平快的转型是不同的。比如阿拉伯之春，之前阿拉伯地区几乎没有任何民主运动，2011年星星之火突然燎原，表面上看埃及、也门、利比亚很快在一两年内就举行了选举，然而，来得快的胜利往往去得也快，没有观念的广泛变迁作为转型的基础，制度即使变迁也可能很快倒退。</p><blockquote><p>没有观念的广泛变迁作为转型的基础，制度即使变迁也可能很快倒退。</p></blockquote><h3 id="22-何为民主文化？泰国困局"><a href="#22-何为民主文化？泰国困局" class="headerlink" title="22. 何为民主文化？泰国困局"></a>22. 何为民主文化？泰国困局</h3><p>真正支撑民主运转的，未必是无节制的参与精神，而更可能是一种有限度的参与意识。关于这一点，政治文化学者阿尔蒙德（Gabriel A. Almond）早在20世纪60年代就说得很透彻了。他在《公民文化》这本书中，比较了五个国家的政治观念。虽然书中关于实证材料的部分已经过时了，但是他的基本结论，今天来看，却是历久弥新。什么是“民主文化”？我们通常认为，越热衷于政治参与的文化就越是民主文化，但这本书认为，实际上，真正的民主文化，恰恰是参与精神、服从意识以及政治冷淡这三种东西之间的混合体。换句话说，民主文化未必是一种纯粹的“参与文化”，而是一种“混合文化”。</p><blockquote><p>真正支撑民主运转的更可能是一种有限度的参与意识。</p></blockquote><p>几千个人的血洒政府门前了，还怎么妥协？任何妥协都会被视为背叛，越极端越被视为英雄主义。于是，运动只能进不能退，泰国的政治温度越升越高，最后，军队的出动成为局势唯一的冷却剂。</p><blockquote><p>这本书里很多地方对泰国政治的理解有些狭隘了。</p></blockquote><h3 id="23-恶真的平庸吗？暴民考古学"><a href="#23-恶真的平庸吗？暴民考古学" class="headerlink" title="23. 恶真的平庸吗？暴民考古学"></a>23. 恶真的平庸吗？暴民考古学</h3><p>很大程度上，这正是邪恶政治的秘密。它把邪恶切成一小份一小份，小到每一份邪恶的实施者完全感受不到邪恶的分量，他们只是恪尽职守，把面前这一块画板画好，但是，当所有的画板都画好，汇聚成一个巨大的拼图时，一个极其恐怖的画面却出现了。这也是为什么艾希曼觉得特别冤。</p><blockquote><p>警示了网络上匿名发言的暴民。</p></blockquote><h3 id="24-文明的冲突：一个过时的预言？（1）"><a href="#24-文明的冲突：一个过时的预言？（1）" class="headerlink" title="24. 文明的冲突：一个过时的预言？（1）"></a>24. 文明的冲突：一个过时的预言？（1）</h3><p>亨廷顿的“文明冲突论”，我认为，在两点上是对的：第一，在特定的历史时刻，政治文化的差异是真实存在的。即使这种差异可能是特定政治制度、历史条件、经济水平等因素的产物，而不是什么亘古不变的“民族性”或者“宗教特征”，但是，作为一个因变量存在的它，也可能作为一个自变量深刻地影响着政治的稳定性。第二，在一个全球化加速的时代，文化差异可能带来激烈的冲突。哪怕我们都认为A和B都重要，但是，当你相信A比B重要，而我相信B比A重要，你我在一起生活，就可能出现各种摩擦。事实上，相互遭遇不但可能呈现矛盾，还可能造成观念的两极化。当代世界各国，无论东西，都出现了保守主义的复兴，就是这种两极化的一个表现。即使这种保守主义的复兴，只是文化演进大方向中的旋涡，由于不同文明演进的速度不同，文明冲突的风险仍然有可能不断增加。</p><blockquote><p>保守主义抬头、新冠疫情肆虐，后疫情时代的全球文明冲突更加让人难以预测。</p></blockquote><h3 id="25-文明的冲突：一个过时的预言？（2）"><a href="#25-文明的冲突：一个过时的预言？（2）" class="headerlink" title="25. 文明的冲突：一个过时的预言？（2）"></a>25. 文明的冲突：一个过时的预言？（2）</h3><p>当保守派走向进步，进步派早已绝尘而去，更加进步了，两者之间的相对距离还是在那里，甚至在拉大。</p><h3 id="27-委内瑞拉：如何毁掉一个国家？"><a href="#27-委内瑞拉：如何毁掉一个国家？" class="headerlink" title="27. 委内瑞拉：如何毁掉一个国家？"></a>27. 委内瑞拉：如何毁掉一个国家？</h3><p>因为当经济极度短缺，而政府控制了有限供给，资源分配就成了政府控制民众的武器。</p><h3 id="28-新镀金时代？不平等的幽灵（1）"><a href="#28-新镀金时代？不平等的幽灵（1）" class="headerlink" title="28. 新镀金时代？不平等的幽灵（1）"></a>28. 新镀金时代？不平等的幽灵（1）</h3><p>大家可能听说过凯恩斯的一个观点，叫作“边际消费倾向递减趋势”。根据这个观点，越穷的人边际消费倾向越强。同样是1000块钱，交给富人，他们可能根本注意不到，1000块不过是存款数额尽头一个难以察觉的数字，但是交给穷人，他可能立刻拿去买必要的生活用品了，因为富人不需要10部车、20个电脑，多半一年不会滑30次雪，但是对于穷人，他的一切需求都是刚需，所以他的钱会更快地回到经济循环当中去。</p><blockquote><p>边际消费倾向递减趋势</p></blockquote><h3 id="30-政治的可能与不可能"><a href="#30-政治的可能与不可能" class="headerlink" title="30. 政治的可能与不可能"></a>30. 政治的可能与不可能</h3><p>真正的政治变革不可能仅靠自上而下的力量推动，它必须同时自下而上地生长。在人们学会宽容、学会耐心、学会同情性理解、学会从各种集体主义的轮椅中站起来迈出个体的步伐之前，没有什么政治可以成为改造生活的魔法棒。</p><blockquote><p>我将这条摘录作为正篇文章的结尾。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;最早了解到这本书是看理想上的音频课程，但单看比较政治学这几个字并没有让我特别有学习的欲望，初次看到书名我还有些担心会不会读不下去，直到这本书在豆瓣上收获了很高的评价才真正开始阅读这本书。总的来说，整本书的描述和例子都非常生动，是我政治学方面的启蒙读物，确确实实让我了解了政治就是可能性的艺术。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="刘瑜" scheme="https://stephenfang.me/tags/%E5%88%98%E7%91%9C/"/>
    
    <category term="可能性的艺术" scheme="https://stephenfang.me/tags/%E5%8F%AF%E8%83%BD%E6%80%A7%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
    
    <category term="比较政治学" scheme="https://stephenfang.me/tags/%E6%AF%94%E8%BE%83%E6%94%BF%E6%B2%BB%E5%AD%A6/"/>
    
    <category term="理想国" scheme="https://stephenfang.me/tags/%E7%90%86%E6%83%B3%E5%9B%BD/"/>
    
    <category term="国家能力" scheme="https://stephenfang.me/tags/%E5%9B%BD%E5%AE%B6%E8%83%BD%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>《季羡林自传：我的前半生》阅读摘录</title>
    <link href="https://stephenfang.me/2022/12/23/Book35275470/"/>
    <id>https://stephenfang.me/2022/12/23/Book35275470/</id>
    <published>2022-12-22T16:04:12.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>很惭愧，在读这本书之前，除了「北大校长」的名头，对于季羡林先生的了解仅限于小学书本上的课文以及B站上对他日记的解读，其中最经典的莫过于那一句“妈的，考他娘的什么东西”。我期待看的其实是那一本《季羡林日记》，但在搜索书籍的时候找到了这一本自传，而我对于人物的自传总是很感兴趣，何况是这样一位国学大师的自传。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35275470/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/c0332f3072263a95c03133c">微信读书</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在读这本书的时候不会产生一点疲劳感，我甚至都开始思考以后写给自己的自传该如何编排。季老先生的文辞中能够看出来他的谦虚、博学和真性情，对于学习、学术、消费、荣誉、人情等等，书中的季老先生都有自己独到的见解。</p><p>最后一章《辞“国宝”》中写道，“我自己是喜欢而且习惯于讲点儿实话的人。讲别人，讲自己，我都希望能够讲得实事求是，水分越少越好。我自己觉得，桂冠取掉，里面还不是一堆朽木，还是有颇为坚实的东西的。至于别人怎样看我，我并不十分清楚。因为，正如我在上面说的那样，别人写我的文章我基本上是不读的，我怕里面的溢美之词。” 困居病房的季老先生回望过去的一生能有这样的感叹和觉悟，是很值得我们这代人去学习的。</p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="在新育小学学习的一般情况"><a href="#在新育小学学习的一般情况" class="headerlink" title="在新育小学学习的一般情况"></a>在新育小学学习的一般情况</h3><p>旧日有一首诗：“春天不是读书天，夏日迟迟正好眠，秋有蚊虫冬有雪，收拾书包好过年”，可以为我写照。</p><p>根据我后来的经验，小学考试的名次对一个学生一生的生命历程没有多少影响，家庭出身和机遇影响更大。</p><blockquote><p>听过家长抱怨说“这孩子小学的时候成绩挺好，怎么初中开始成绩就不行了”，其原因也大概如此。当然，这一点在我身上也相当有感触。</p></blockquote><h3 id="考入北园高中"><a href="#考入北园高中" class="headerlink" title="考入北园高中"></a>考入北园高中</h3><p>他的讲义每年都根据世界形势的变化和考古发掘的最新结果以及学术界的最新学说加以补充修改。所以他教给学生的知识都是最新的知识。这种做法，不但在中学是绝无仅有，即使在大学中也十分少见。原因就是祁老师精通日文。自从明治维新以后，日本最积极地、最热情地、最及时地吸收欧美的新知识。而祁先生则订有多种日文杂志，还随时购买日本新书。</p><blockquote><p>学习一门外语在很大程度上打开了获取新知的新途径。</p></blockquote><p>据说还能倒背。我真不知道，倒背是怎样一个背法？究竟有什么意义？所谓“倒背”，大家可能不理解是什么玩意儿。我举一个例子《论语》：“子曰：学而时习之……”倒背就是“之习时而学……”这不是毫无意义的瞎胡闹吗。</p><blockquote><p>以前我也有这样的疑问，第一次看到有人很认真的审视了倒背这个做法。</p></blockquote><h3 id="在北园高中的生活和学习"><a href="#在北园高中的生活和学习" class="headerlink" title="在北园高中的生活和学习"></a>在北园高中的生活和学习</h3><p>我屡次讲到，我幼无大志，讲到自卑，这其实就是有虚荣心的一种表现。如果一点儿虚荣心都没有，哪里还会有什么自卑呢？</p><p>从不认真读书到勤奋学习，一个关键就是虚荣心，是虚荣心作祟呢？还是虚荣心作福？我认为是后者。虚荣心是不应当一概贬低的。</p><blockquote><p>虚荣心作福</p></blockquote><h3 id="毕业旅行筹款晚会"><a href="#毕业旅行筹款晚会" class="headerlink" title="毕业旅行筹款晚会"></a>毕业旅行筹款晚会</h3><p>喜当年之所喜，怒当年之所怒，哀当年之所哀，乐当年之所乐。如果不写这一段回忆，如果不向记忆里挖了再挖，这些情况都是不会出现的。</p><blockquote><p>我一直保留着在Day One上写日记的习惯，每天回看「那年今日」都会有不同的收获。</p></blockquote><h3 id="天赐良机"><a href="#天赐良机" class="headerlink" title="天赐良机"></a>天赐良机</h3><p>我走到了一个岔路口上：一条路是桃花，一条是雪。开满了桃花的路上，云蒸霞蔚，前程似锦，不由得你不想往前走。堆满了雪的路上，则是暗淡无光，摆在我眼前是终生青衾，老死学宫，天天为饭碗而搏斗，时时引“安静”为鉴戒。究竟何去何从？我逢到了生平第一次重大抉择。</p><h3 id="在哈尔滨"><a href="#在哈尔滨" class="headerlink" title="在哈尔滨"></a>在哈尔滨</h3><p>语言这玩意儿也真奇怪。一个人要想精通本国语和外国语，必须付出极大的劳动；穷一生之精力，也未必真通。可是要想达到一般交际的目的，又似乎非常简单。洋泾浜姑无论矣。</p><blockquote><p>如果需要使用一种语言，多邻国这样的app确实已经足够，可以想像以前的人为了学习一门外语需要付出更多的努力。</p></blockquote><h3 id="过西伯利亚"><a href="#过西伯利亚" class="headerlink" title="过西伯利亚"></a>过西伯利亚</h3><p>我们都是二十三四岁的大孩子，阅世未深，每个人眼前都是一个未知的世界，堆满了玫瑰花，闪耀着彩虹。我们的眼睛是亮的，心是透明的，说起话来，一无顾忌，二无隔阂，从来没有谈不来的时候，小小的车厢里，其乐融融。</p><h3 id="初抵柏林"><a href="#初抵柏林" class="headerlink" title="初抵柏林"></a>初抵柏林</h3><p>我的老师吴宓先生有两句诗：“世事纷纭果造因，错疑微似便成真。”这的确是很有见地的话，是参透了人生真谛才能道出的。</p><h3 id="完成学业，尝试回国"><a href="#完成学业，尝试回国" class="headerlink" title="完成学业，尝试回国"></a>完成学业，尝试回国</h3><p>我从不把自己估计过高，我甘愿当一个平凡的人，而一个平凡的人，如果没有金光闪闪的博士头衔，则在抢夺饭碗的搏斗中必然是个失败者。这可以说是动机之一</p><h3 id="大轰炸"><a href="#大轰炸" class="headerlink" title="大轰炸"></a>大轰炸</h3><p>原来是德国飞机制造之父、蜚声世界的流体力学权威普兰特尔（Prandtl）教授。我赶忙喊一声：“早安，教授先生！”他抬头看到我，也说了声：“早安！”他告诉我，他正在看操场周围的一段短墙，看炸弹爆炸引起的气流是怎样摧毁这一段短墙的。他嘴里自言自语：“这真是难得的机会！我在流体力学试验室里是无论如何也装配不起来的。”我陡然一惊，立刻又肃然起敬。面对这样一位抵死忠于科学研究的老教授，我还能说些什么呢？</p><blockquote><p>小学的时候了解到季羡林先生去德国留学当时还有些不解，之后了解到德国战时的发展水平和斐然成就才明其志。题外话就是战争确实能够点上很多科技树。</p></blockquote><h3 id="在饥饿地狱中"><a href="#在饥饿地狱中" class="headerlink" title="在饥饿地狱中"></a>在饥饿地狱中</h3><p>中国也是有地狱的，但却是舶来品，其来源是印度。谈到印度的地狱学，那真是博大精深，蔑以加矣。“死鬼”在梵文中叫Preta，意思是“逝去的人”。到了中国译经和尚的笔下，就译成了“饿鬼”，可见“饥饿”在他们心目中占多么重要的地位。</p><blockquote><p>吃饱这件事在中国也是最近几十年才有的事情。</p></blockquote><h3 id="山中逸趣"><a href="#山中逸趣" class="headerlink" title="山中逸趣"></a>山中逸趣</h3><p>山中逸趣，当然不止这一桩。大大小小，琐琐碎碎的事情，还可以写出一大堆来。我现在一律免掉。我写这些东西的目的，是想说明，就是在那种极其困难的环境中，人生乐趣仍然是有的。在任何情况下，人生也绝不会只有痛苦，这就是我悟出的禅机。</p><h3 id="烽火连八岁，家书抵亿金"><a href="#烽火连八岁，家书抵亿金" class="headerlink" title="烽火连八岁，家书抵亿金"></a>烽火连八岁，家书抵亿金</h3><p>我梦得最多的是祖国的食品。我这个人素无大志，在食品方面亦然。我从来没有梦到过什么燕窝、鱼翅、猴头、熊掌，这些东西本来就与我缘分不大。我做梦梦到最多的是吃炒花生米和锅饼（北京人叫“锅盔”）。这都是我小时候常吃而直到今天耄耋之年仍然经常吃的东西。每天平旦醒来，想到梦中吃的东西，怀乡之情如大海怒涛，奔腾汹涌，无论如何也抑制不住。</p><blockquote><p>馋，也能够作为一种情感，让人抑制不住。</p></blockquote><h3 id="德国的老师们"><a href="#德国的老师们" class="headerlink" title="德国的老师们"></a>德国的老师们</h3><p>斯蒂芬对我特别友好，我一到他家，他就从远处飞跑过来，扑到我的怀里。他母亲教导我说：“此时你应该抱住孩子，身体转上两三圈，小孩子最喜欢这玩意儿！”教授夫人很和气，好像有点儿愣头愣脑，说话直爽，但有时候没有谱。</p><blockquote><p>教授一家亲和的感觉扑面而来。</p></blockquote><h3 id="学习吐火罗文"><a href="#学习吐火罗文" class="headerlink" title="学习吐火罗文"></a>学习吐火罗文</h3><p>尊老的概念，在西方的国家，几乎根本没有。两方社会是实用主义的社会。一个人对社会有用，他就有价值；一旦没用，价值立消。没有人认为其中有什么不妥之处。因此西克教授对自己的处境也就安之若素，处之泰然了。</p><blockquote><p>用政治正确的模板关联上现代的事件，可能新冠的防治手段可以用这个观点来诠释，东方社会和西方社会在社会价值方面的共识还有很大差距。</p></blockquote><h3 id="在弗里堡（Fribourg）"><a href="#在弗里堡（Fribourg）" class="headerlink" title="在弗里堡（Fribourg）"></a>在弗里堡（Fribourg）</h3><p>我学了半辈子语言，说了半辈子话，读了半辈子中西名著。然而，到了今天，我学的语言，我说的话，我读的名著，哪一个也帮不了我。我要用嘴描绘眼前的美景，我说不出；我要用笔写出眼前的美景，我写不出。</p><h3 id="从瑞士到法国马赛"><a href="#从瑞士到法国马赛" class="headerlink" title="从瑞士到法国马赛"></a>从瑞士到法国马赛</h3><p>法国这个国家种族歧视比英美要轻得多。我在德国十年，没看见过一个德国妇女同一个黑人挽着臂在街上走路的。在法西斯统治下，那是绝对不可能的。到了瑞士，也没有见过。现在来到马赛，到处可以看到一对对的黑白夫妇，手挽手地在大街上溜达。我的精神一恍惚，满街都是梨花与黑炭的影像，黑白极其分明，我真是大开眼界了。法国人则是“司空见惯浑无事”，怡然自得。</p><h3 id="在西贡-2"><a href="#在西贡-2" class="headerlink" title="在西贡[2]"></a>在西贡[2]</h3><p>椰子树下，还有其他一些不知名的树下，人们懒洋洋地坐在那里，吸烟，吃茶，聊天，悠然自得。西方什么人有几句话说：“世界上什么东西都害怕时间，时间唯独害怕东方人。”我一看到这些人，就想到这几句话，心中不禁暗暗叫绝。</p><h3 id="回到祖国的怀抱"><a href="#回到祖国的怀抱" class="headerlink" title="回到祖国的怀抱"></a>回到祖国的怀抱</h3><p>走在那几条大街上，街上的行人摩肩接踵，熙熙攘攘。头顶上那些鸽子窝似的房子中闹声极大，打麻将洗牌之声，有如悬河泻水，雷鸣般地倾泻下来，又像是暴风骤雨，扫过辽阔的平原。让我感觉到，自己确确实实是在人间，不容有任何幻想。在当时的香港这个人间里，自然景观，除了海景和夜景以外，几乎没有什么可看的。因为是山城，同重庆一样，一到夜里，万灯齐明，高高低低，上上下下，或大或小，或圆或方，有如天上的星星，并辉争光，使人们觉得，这样一个人间还是蛮可爱的。</p><blockquote><p>能够从季老对于描述中窥见香港那时的景致，还没有搭上四小龙东风的香港并没有那么引人驻足。</p></blockquote><h3 id="政治环境"><a href="#政治环境" class="headerlink" title="政治环境"></a>政治环境</h3><p>在第一阶段中，搞学术研究工作的知识分子只能信，不能想，不允许想，不敢想。天天如临深履薄，天天代圣人立言，不敢说自己的话，不允许说自己的话。在这种情况下，想在学术研究中搞点儿什么名堂出来，真是难于上青天了。只有真正贯彻了“百花齐放、百家争鸣”的精神，学术才能真正繁荣，否则学术，特别是人文社会科学，就只能干瘪。这是古今中外学术史证明了的一条规律，不承认是不行的。</p><blockquote><p>不敢说自己的话，不允许说自己的话。在这种情况下，想在学术研究中搞点儿什么名堂出来，真是难于上青天了。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;很惭愧，在读这本书之前，除了「北大校长」的名头，对于季羡林先生的了解仅限于小学书本上的课文以及B站上对他日记的解读，其中最经典的莫过于那一句“妈的，考他娘的什么东西”。我期待看的其实是那一本《季羡林日记》，但在搜索书籍的时候找到了这一本自传，而我对于人物的自传总是很感兴趣，何况是这样一位国学大师的自传。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="人生" scheme="https://stephenfang.me/tags/%E4%BA%BA%E7%94%9F/"/>
    
    <category term="季羡林" scheme="https://stephenfang.me/tags/%E5%AD%A3%E7%BE%A1%E6%9E%97/"/>
    
    <category term="自传" scheme="https://stephenfang.me/tags/%E8%87%AA%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>《缘缘堂随笔》阅读摘录</title>
    <link href="https://stephenfang.me/2022/12/21/Book26866084/"/>
    <id>https://stephenfang.me/2022/12/21/Book26866084/</id>
    <published>2022-12-20T16:04:12.000Z</published>
    <updated>2023-07-24T13:38:31.400Z</updated>
    
    <content type="html"><![CDATA[<p>《缘缘堂随笔》是丰子恺先生的第一本散文集，篇幅都比较短，整个阅读过程可以用闲适两个字来概括。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/26866084/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/3bc329a0813ab714eg011e42">微信读书</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>百科中对于缘缘堂的描述如下：民国15年(1926)丰子恺同弘一法师住在江湾永义里的租房里，有一天丰子恺在小方纸上写了许多自己喜欢且可以相互搭配的文字，团成许多小纸球，撒在佛祖释迦摩尼画像前的供桌上，拿两次阄，结果拿起来的都是“缘”字，遂起名为“缘缘堂”。当即弘一法师写了一幅横额，交九华堂装裱。弘一法师与佛有缘，出家当了和尚，加之二人交情甚厚，真可谓缘上加缘，缘由深厚。缘缘堂建筑雅洁幽静，丰氏即在这里创作、生活。“缘缘堂”始建于1932—1933年，1937年末缘缘堂被侵华日军炸毁。</p><p>之后如果有时间我是很想去桐乡的缘缘堂旧地走走的。</p><p>丰子恺先生的作品很多，很惭愧的说我看过不少他所做的绘画，但读的他写的书还是第一本。这本随笔里的丰子恺先生爱孩童、淡名利、重情谊、念亲人，饱含了人间深情。文字中常常以件件小事引出哲理，耐人寻味，“宇宙间人的生灭，犹如大海中的波涛的起伏。大波小波，无非海的变幻，无不归元于海，世间一切现象，皆是宇宙的大生命的显示。”</p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="儿女"><a href="#儿女" class="headerlink" title="儿女"></a>儿女</h3><p>夕暮的紫色中，炎阳的红味渐渐消减，凉夜的青味渐渐加浓起来。</p><blockquote><p>夏夜的颜色被描写的如此真实。</p></blockquote><p>揖让、进退、规行、矩步等大人们的礼貌，犹如刑具，都是戕贼这天赋的健全的身手的。于是活跃的人逐渐变成了手足麻痹、半身不遂的残废者。残废者要求健全者的举止同他自己一样，何其乖谬！</p><blockquote><p>繁文缛节对这个时代的我们来说大概是丢完了，但是否一些值得保留的礼节也已经消失了。</p></blockquote><h3 id="阿难"><a href="#阿难" class="headerlink" title="阿难"></a>阿难</h3><p>人类所造作的世间的种种现象，迷塞了我的心眼，隐蔽了我的本性，使我对于扰攘奔逐的地球上的生活，渐渐习惯，视为人生的当然而恬不为怪。实则堕地时的我的本性，已经所丧无余了。</p><h3 id="忆儿时"><a href="#忆儿时" class="headerlink" title="忆儿时"></a>忆儿时</h3><p>我们都学父亲，剥得很精细，剥出来的肉不是立刻吃的，都积受在蟹斗里，剥完之后，放一点姜醋，拌一拌，就作为下饭的菜，此外没有别的菜了。</p><blockquote><p>想必这样吃蟹会很有满足感 </p></blockquote><h3 id="渐"><a href="#渐" class="headerlink" title="渐"></a>渐</h3><p>使人生圆滑进行的微妙的要素，莫如“渐”；造物主骗人的手段，也莫如“渐”。在不知不觉之中，天真烂漫的孩子“渐渐”变成野心勃勃的青年；慷慨豪侠的青年“渐渐”变成冷酷的成人；血气旺盛的成人“渐渐”变成顽固的老头子。</p><blockquote><p>读这一章节的时候我想到了陈奕迅的《渐渐》</p></blockquote><p>“渐”的作用，就是用每步相差极微极缓的方法来隐蔽时间的过去与事物的变迁的痕迹，使人误认其为恒久不变。</p><h3 id="大账簿"><a href="#大账簿" class="headerlink" title="大账簿"></a>大账簿</h3><p>将来我年纪长大起来，总有一天能知道这究竟，能解除这疑惑与悲哀。<br>后来我的年纪果然长大起来。然而这种疑惑与悲哀，非但依旧不能解除，反而随了年纪的长大而增多增深了。</p><p>吃饭的时候，一颗饭粒从碗中翻落在我的衣襟上。我顾视这颗饭粒，不想则已，一想又惹起一大篇的疑惑与悲哀来：不知哪一天哪一个农夫在哪一处田里种下一批稻，就中有一株稻穗上结着煮成这颗饭粒的谷。这粒谷又不知经过了谁的刈、谁的磨、谁的舂、谁的粜，而到了我们的家里，现在煮成饭粒，而落在我的衣襟上。这种疑问都可以有确实的答案；然而除了这颗饭粒自己晓得以外，世间没有一个人能调查，回答。</p><p>因为我参考大众的态度，看他们似乎全然不想起这类的事，饭吃在肚里，钱进入袋里，就天下太平，梦也不做一个。这在生活上的确大有实益，我就拼命以大众为师，学习他们的幸福。学到现在三十岁，还没有毕业。所学得的，只是那种疑惑与悲哀的刺激淡薄了一点，然其分量仍是跟了我的经历而日渐增多。</p><blockquote><p>“我就拼命以大众为师，学习他们的幸福”</p></blockquote><h3 id="剪网"><a href="#剪网" class="headerlink" title="剪网"></a>剪网</h3><p>所以倘用估价钱的眼光来看事物，所见的世间就只有钱的一种东西，而更无别的意义，于是一切事物的意义就被减小了。“价钱”，就是使事物与钱发生关系。可知世间其他一切的“关系”，都是足以妨碍事物的本身的存在的真意义的。故我们倘要认识事物的本身的存在的真意义，就非撤去其对于世间的一切关系不可。</p><blockquote><p>虽然我在生活上也是一个比较节俭的人，但是可以想见如果只以钱作为生活的度量衡会是多么无趣。</p></blockquote><h3 id="晨梦"><a href="#晨梦" class="headerlink" title="晨梦"></a>晨梦</h3><p>“人生如梦”，这话是古人所早已道破的，又是一切人所痛感而承认的。那么我们的人生，都是——同我的晨梦一样——在梦中晓得自己做梦的了。这念头一起，疑惑与悲哀的感情就支配了我的全体，使我终于无可自解，无可自慰。往往没有穷究的勇气，就把它暂搁在一旁，得过且过地度几天再说。这想来也不是我一人的私见，讲出来一定有许多人表示同感吧！</p><p>这便是为了人生的饱暖的愉快，恋爱的甘美，结婚的幸福，爵禄富厚的荣耀，把我们骗住，致使我们无暇回想，流连忘返，得过且过，提不起穷究人生的根本的勇气，糊涂到死。</p><blockquote><p>糊涂到死</p></blockquote><h3 id="闲居"><a href="#闲居" class="headerlink" title="闲居"></a>闲居</h3><p>虽然有的人不讲究自己的房间的布置，然走进一间布置很妥帖的房间，一定谁也觉得快适。这可见人都会鉴赏，鉴赏就是被动的创作，故可说这是谁也懂得，谁也可以自由取乐的事。</p><blockquote><p>每次和大家聊天大家都说自己不懂艺术，但是如果要评判许多画里哪一副最佳，相信每个人都有自己的答案。</p></blockquote><p>一天的早晨，晴雨如何？冷暖如何？人事的情形如何？犹之第一乐章的开始，先已奏出全曲的根柢的“主题”（theme）。一天的生活，例如事务的纷忙，意外的发生，祸福的临门，犹如曲中的长音阶变为短音阶的，C调变为F调，adagio（缓慢的）变为allegro（迅速的），其或昼永人闲，平安无事，那就像始终C调的andante（流动的，中速的）的长大的乐章了。</p><h3 id="新年怀旧"><a href="#新年怀旧" class="headerlink" title="新年怀旧"></a>新年怀旧</h3><p>每逢年底，我未尝不热心地盼待“新年”的来到；但到了新年，往往大失所望，觉得这不是我所盼待的“新年”。我所盼待的“新年”似乎另外存在着，将来总有一天会来到的。再过半个月，新年又将来临。料想它又是不像“新年”的，也无心盼待了。且回想过去吧。</p><blockquote><p>几乎是完美的表达了我对于过年的情感寄托。</p></blockquote><p>这种火的游戏，只限于新年内举行，平日是不被许可的。因此火药气与新年，在我的感觉上有不可分离的联关。到现在，偶尔闻到火药气时，我还能立刻联想到新年及儿时的欢乐呢。</p><h2 id="肆-好花时节不闲身"><a href="#肆-好花时节不闲身" class="headerlink" title="肆 好花时节不闲身"></a>肆 好花时节不闲身</h2><p>世事之乐不在于实行而在于希望，犹似风景之美不在其中而在其外。</p><blockquote><p>很喜欢的一对对子。</p></blockquote><h3 id="春"><a href="#春" class="headerlink" title="春"></a>春</h3><p>春的景象，只有乍寒、乍暖、忽晴、忽雨，是实际而明确的。此外虽有春的美景，但都隐约模糊，要仔细探寻，才可依稀仿佛地见到，这就是所谓“寻春”吧。</p><p>花木有时被关闭在私人的庭园里，吃了园丁的私刑而献媚于绅士淑女之前。草则到处自生自长，不择贵贱高下。人都以为花是春的作品，其实春工不在花枝，而在于草。看花的能有几人？草则广被大自然的表面，普遍地受大众的欣赏。</p><blockquote><p>人都以为花是春的作品，其实春工不在花枝，而在于草。</p></blockquote><h3 id="竹影"><a href="#竹影" class="headerlink" title="竹影"></a>竹影</h3><p>中国画不注重‘像不像’，不像西洋画那样画得同真物一样。凡画一物，只要能表现出像我们闭目回想时所见的一种神气，就是佳作了。所以西洋画像照相，中国画像符号。符号只要用墨笔就够了。原来墨是很好的一种颜料，它是红黄蓝三原色等量混合而成的。故墨画中看似只有一色，其实包罗三原色，即包罗世界上所有的颜色。故墨画在中国画中是很高贵的一种画法。故用墨来画竹，是最正当的。倘然用了绿颜料，就因为太像实物，反而失却神气。所以中国画家不喜欢用绿颜料画竹；反之，却喜欢用与绿相反的红色来画竹。这叫作‘朱竹’，是用笔蘸了朱砂来撇的。你想，世界上哪有红色的竹？但这时候画家所描的，实在已经不是竹，而是竹的一种美的姿势，一种活的神气，所以不妨用红色来描。</p><h3 id="秋"><a href="#秋" class="headerlink" title="秋"></a>秋</h3><p>迎送了三十几次的春来春去的人，对于花事早已看得厌倦，感觉已经麻木，热情已经冷却，决不会再像初见世面的青年少女似的为花的幻姿所诱惑而赞之、叹之、怜之、惜之了。况且天地万物，没有一件逃得出荣枯、盛衰、生夭、有无之理。过去的历史昭然地证明着这一点，无须我们再说。古来无数的诗人千篇一律地为伤春惜花费词，这种效颦也觉得可厌。假如要我对于世间的生荣死灭费一点词，我觉得生荣不足道，而宁愿欢喜赞叹一切的死灭。对于前者的贪婪、愚昧与怯弱，后者的态度何等谦逊、悟达而伟大！我对于春与秋的取舍，也是为了这一点。</p><h3 id="我与弘一法师"><a href="#我与弘一法师" class="headerlink" title="我与弘一法师"></a>我与弘一法师</h3><p>我以为人的生活，可以分作三层：一是物质生活，二是精神生活，三是灵魂生活。物质生活就是衣食。精神生活就是学术文艺。灵魂生活就是宗教。</p><blockquote><p>丰子恺对于生活的层次划分。</p></blockquote><p>故我希望：学宗教的人，不须多花精神去学艺术的技巧，因为宗教已经包括艺术了。而学艺术的人，必须进而体会宗教的精神，其艺术方有进步。</p><h3 id="悼夏丏尊先生"><a href="#悼夏丏尊先生" class="headerlink" title="悼夏丏尊先生"></a>悼夏丏尊先生</h3><p>以往我每逢写一篇文章，写完之后总要想：“不知这篇东西夏先生看了怎么说。”因为我的写文，是在夏先生的指导鼓励之下学起来的。今天写完了这篇文章，我又本能地想：“不知这篇东西夏先生看了怎么说。”两行热泪，一齐沉重地落在这原稿纸上。</p><blockquote><p>怀师的切入点让人印象深刻。</p></blockquote><h3 id="自然"><a href="#自然" class="headerlink" title="自然"></a>自然</h3><p>美学上所谓“多样的统一”，就是说多样的事物，合于自然之律而作成统一，是美的状态。譬如讲坛的桌子上要放一个花瓶。花瓶放在桌子的正中，太缺乏变化，即统一而不多样。欲其多样，宜稍偏于桌子的一端。但倘过偏而接近于桌子的边上，看去也不顺当、不妥帖、不安定。同时在美学上也就是多样而不统一。大约放在桌子的三等分的界线左右，恰到好处，即得多样而又统一的状态。</p><h3 id="图画成绩"><a href="#图画成绩" class="headerlink" title="图画成绩"></a>图画成绩</h3><p>因为他们的眼中心中，只看见分数，只知道荣誉。像描影的那几个学生所体验的欢喜、感动、慰安、憧憬，在他们都无分：艺术的乐土，美的世界，人生的情味，宇宙的姿态，在他们都不能梦见。而他们所触目萦心的，都是苦痛的东西。为了争分数，求荣誉，他们要做无谓的奋斗，甚或陷入嫉妒、愤恨、浅陋、卑鄙等恶习。</p><p>分数与荣誉是目的，读书是手段。达到了目的，手段就变作无用之物。所以他们的读书，全是徒劳！</p><p>至于荣誉，本来也不是不好的东西。但学生诸君应该知道，荣誉是实质的副产物。实质进步了，荣誉与之俱来；但不可离实质而单求荣誉，亦不可专为荣誉而励实质。</p><blockquote><p>荣誉与实质的关系</p></blockquote><h3 id="甘美的回味"><a href="#甘美的回味" class="headerlink" title="甘美的回味"></a>甘美的回味</h3><p>说起音乐演奏，总觉得是一种非常严肃的行为。我须得用了“如临大敌”的态度而弹琴，用了“如见大宾”的态度而听人演奏。弹过听过之后，只感到兴奋的疲倦，绝未因此而感到舒服。</p><blockquote><p>之前听梁文道先生的对谈节目听到过音乐的雅和俗的探讨，如果每个人都是抱着要写一份听后感的态度去听音乐，那音乐带给人的感觉一定不会是特别美好的，音乐可能不应该是这么严肃的。</p></blockquote><p>他是把音乐看作喝酒一类的乐事的。他的话中的“音乐”及“弹琴”等字倘使改作“喝酒”，例如说，“你们会喝酒的人真是幸福，寂寞起来喝一杯酒多么舒服！”那我便首肯了。那种酒上口虽好，但过后颇感恶腥，似乎要呕吐的样子。我自从那回尝过之后，不想再喝了。我觉得这种舒服的滋味，远不及艰辛严肃的回味的甘美。</p><blockquote><p>他是把写代码看作喝酒一类的乐事的。“你们会写App的人真是幸福，无聊起来写个app多么快乐！” 其实可以套用在很多事情上。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;《缘缘堂随笔》是丰子恺先生的第一本散文集，篇幅都比较短，整个阅读过程可以用闲适两个字来概括。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="缘缘堂随笔" scheme="https://stephenfang.me/tags/%E7%BC%98%E7%BC%98%E5%A0%82%E9%9A%8F%E7%AC%94/"/>
    
    <category term="丰子恺" scheme="https://stephenfang.me/tags/%E4%B8%B0%E5%AD%90%E6%81%BA/"/>
    
    <category term="人生" scheme="https://stephenfang.me/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>《梁永安：阅读、游历和爱情》阅读摘录</title>
    <link href="https://stephenfang.me/2022/12/10/Book35863001/"/>
    <id>https://stephenfang.me/2022/12/10/Book35863001/</id>
    <published>2022-12-09T16:04:12.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>读这本书的起因是看到了豆瓣的年度推荐，之前也在社交媒体上看到过梁老师的视频，就花了几个小时读了一遍这本书。如果你在知乎上搜索梁永安，你会看到不少人评价他总是把话说得滴水不漏（虚空），不少人批评他讲的都是一些博人眼球的鸡汤。作为一个年轻人，坦诚地说我并不反感这类鸡汤类的文章，倒是想了解一下这位复旦的大学教授能够带给年轻人什么启示。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35863001/">豆瓣</a></li><li><a href="https://yd.qq.com/web/bookDetail/03e32f30729f659d03eedb7">微信读书</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这本书不像是有一个完整的体系，内容组织都更像是一期期节目。从最开始的插队经历开始讲起，探讨了爱情、工作、社交等等诸多主题，我从中收获了不少摘录。</p><p>最令我印象深刻的是梁老师说“我们的社会有传统惯性，大部分人的生活追求目前还停留在吃好穿好的阶段，我们的消费习惯也是千人一面，很难在文化圈层中建立起高价值的深度交流。” 在假期的时候我也会常常感叹，居住在城市里能做的让人快乐事情越来越局限了。吃喝、唱歌、电玩、按摩大概是是我们大部分人在假期会选择的消磨时间的方式，有些时候我们也会会选择看一部电影、参观一场展览、欣赏一场话剧、参与一场脱口秀，又或者阅读一本书，但显然后者占消费和时间的比重会少得多。对此，梁老师提到“当代很多年轻人的状态是这样，朋友之间见面的形式是聚个餐，唱个歌，而诸如逛展览、看戏剧之类的文化消费尚属于少数派，所以即使是交往时间很久的朋友，彼此之间也无法形成更多、更深入的交流价值。”</p><p>“以日本为例，他们的年轻人在物质层面比我国年轻人好很多，漫画、动画，以及其他诸多二次元文化多姿多彩，很受年轻人欢迎，按说精神世界应该很丰富，但日本“宅”文化依然很流行，准确地说，“宅”成为一种文化，日本就是始发地。” 如果你经常看日本电影，你可能会感叹为什么男女主人公能够讨论出这么多关于艺术、文学、音乐方面的话题，我自认为我在这些方面的学习和涉猎还远远不够，这也可能是很多年轻人的共识。邻邦是我们值得参考和学习的一个重要窗口，我们看到时代在发展情况在变好，在各大城市能够看到的展览和演出越来越多，而接触的机会越多，对生活方式的改变影响也就越大。</p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="关于自我"><a href="#关于自我" class="headerlink" title="关于自我"></a>关于自我</h3><p>“如何衡量自我价值？其实很简单：每天都反思一下自己，看看在知识上有没有增加？文化视野的宽度有没有扩大？情感的含量有没有更加丰富？行动性有没有增强？”</p><blockquote><p>可以作为启发性日历产品的提示语。</p></blockquote><p>“人与人最大的价值是差异。传统社会是集体、家族构建的，你能合群，能遵守普遍规则，你就是优秀的，那个时代讲究模范标本，人要像螺丝钉，放到哪里都符合标准。今天的社会不一样，一个人之所以有价值，因为他跟别人不同，不同才有交换性，不同才凸显你的独特价值。一个人就开出一朵不一样的花来。”</p><blockquote><p>人与人最大的价值是差异。</p></blockquote><h3 id="关于工作"><a href="#关于工作" class="headerlink" title="关于工作"></a>关于工作</h3><p>“人要先把一个事情做透，做到专业领域里最好的状态，然后这时候才能说你到底爱不爱它，才能说你到底真正适合去做什么。不能因为一开始艰苦就退避。生活从不轻松，苦的过程是每个人都不可回避的。”</p><blockquote><p>这个观点其实我并不完全认同，是否适合某项工作和乐意从事某项工作常常是同向的，如果换作是你，要求你从事让你觉得痛苦的工作，你会从中得到收获吗。</p></blockquote><p>“一个人在尝试的过程中一定要有百分之百的真诚、百分之百的韧性，而不能浅尝辄止。因为在没有深入一定程度的时候，我们无法得知自己和一件事情的联系。”</p><p>“人有完整性、全面性的要求，人一定要有自己的自由时间。衡量人的解放，最最重要的指标就是人的自由时间。年轻人的自由时间没了，艺术心情、空间渴望、情感权利也全没了，创造性匮乏，老板们这么做无异于杀鸡取卵。”</p><p>“上一代人，他们的原创力其实还不够，一个真正好的企业家、好的企业文化，是可以宣扬不加班的，关键要挖掘出企业的活力，如流程的合理化、高效的管理制度、优秀的激励机制等方方面面。企业要有这个眼光，使人在整个群体里获得尊严感，获得一种价值感，人才会产生一种创造力量，才会优化、提升生产力。”</p><blockquote><p>企业提高管理效率、员工提高工作效率看起来是互补的，但是实际执行起来并不是这么简单的。我倒是很期望看到那些把不加班作为招聘卖点的公司。</p></blockquote><h3 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h3><p>“如果一个女生26岁时已经谈过5个男朋友，不要觉得这个女孩子品性不太好。有了5次恋爱，这个城市就活起来了。可能她第一个男朋友喜欢音乐，他们去了各种音乐厅欣赏音乐；第二个喜欢绘画，他们又去了各种画廊、画展欣赏画作；第三个喜欢摄影，这样这个城市每个角落都有他们的记忆，都有他们很感怀的部分，春夏秋冬都有充满深情的东西。这个女孩子一点儿都不坏，她很好。评判好坏的标准是，分手之后她对前任是怎么评价的，如果在她看来前任一文不值，那这个人确实很差劲，他们之间终究有美好的东西存在。</p><p>“喜欢一个人，跟他在一起，你要看他到底在干什么，他在建设一种什么样的生活。爱情是两个人一起去建设一种生活，两个人都是生活的建设者。”</p><blockquote><p>和对方在一起共同追求应该是一种生活方式。</p></blockquote><p>“好人的一个标准是我们自己的内心感觉是否幸福，另外一个标准是有没有对别人造成大的伤害。”</p><p>“最好的爱情是两个人在一起时，根本不像在谈恋爱，最后才发现是真爱，这种恋爱才是最自然的。如果两个人有意识地去谈恋爱，吃饭，约会，情人节送礼，最后顺理成章地结婚，内在的东西不一定是爱情，但形式上又很像，这种恋爱就很程序化。”</p><h3 id="关于性别"><a href="#关于性别" class="headerlink" title="关于性别"></a>关于性别</h3><p>“现代社会是，男女双方对彼此都比较失望。女性对男性持批判性意见，也说明她们对男性的期待很大，希望跟这个人在一起能获得另外一个延展的世界；男性对女性也存在失望情绪，觉得女性怎么变得这么物欲、现实。”</p><p>“现在有一批年轻人因为精神文化等因素而单身了，其实是给整个民族打开了另外一种可能性，即“在这么大的群体里如何探索独立的生活、建立独立的价值”，他们不仅是为自己，也是在为后代开路，如果有三代这样的人，就会形成一股很大的社会力量，他们可以自由地选择结婚或不结婚，不管做出怎样的决定都能过得丰富多彩，而现在我们的历史记录里看不到单身人的生活的丰富多彩性”</p><h3 id="关于自由"><a href="#关于自由" class="headerlink" title="关于自由"></a>关于自由</h3><p>“自由的生活有个特点，就是把自己变成社会的一部分，不完全属于自己。我们在这个社会上一生的使命就是给社会探索一点儿新东西。越是这样的人，他的情感就越不容易被那些外在的标准衡量。”</p><p>“现在网络上有一些人，总是揪住一些小的事件，放大再放大，有些言论甚至会被有心人利用，使舆论走向逐渐偏激、粗暴。但生活中的大多数人是善良的，相信人性本善，绝大多数人犯的错，都在别人、社会可以宽容的尺度内。人一旦过于小心翼翼，就会把自己框得太紧，将自己像个粽子一样束缚起来，生活乏味无趣，人也变了形。</p><p>”什么是现代人，就是有人文主义、人文精神的人。我们相信知识，相信理性，相信人有能力创造一个新的世界。我们不需要某种外在的神圣，不需要某种外在的戒律，我们可以通过自己的创造认识世界。“</p><h3 id="关于游历"><a href="#关于游历" class="headerlink" title="关于游历"></a>关于游历</h3><p>”她们一看我拿着相机，就说，赶快拍我们！一个个笑得特别开心。这就是人间关系。有的人活了一辈子没有建立起真正的人间关系，都是那种等级关系，人生活得太窄了”</p><blockquote><p>除教授的身份之外，梁老师还是一位旅行摄影师。我最为一个摄影的业务爱好者，也很喜欢拍摄旅行中的人们，但我的照片到达不了人文摄影的地步。当你举起相机拍到了与互联网上能找到的不同的东西的时候，那种快乐是非同寻常的。</p></blockquote><p>“全球化的好处是，可以看到全世界各种各样的活法，不光是物质生活，还有文化生活、艺术生活，形形色色，社会绝对不会是一个封闭空间，它会权衡如何发展。”</p><p>“咖啡馆里坐满精神丰裕的人，这个咖啡馆就有了生产力。这种空间的搭建是需要组织力、眼光和人脉的，需要人去游历、去经历，不是坐着能完成的。”</p><h3 id="关于生活"><a href="#关于生活" class="headerlink" title="关于生活"></a>关于生活</h3><p>“年轻人需要自己建立起人与人文化交往的新形式，就是实现人与人之间的交互，而不仅仅是单向的输出。如果讲的人没改变，那听的人听一听，也就听过了。交互是交流的双方都能彼此成长，是共生关系，这样的交流才是真正地促进友谊、增长感情之道，而不是整天在一起吃一顿喝一顿。年轻人一定要朝着这个方向努力，提升社交质量，拒绝无效社交。”</p><blockquote><p>对于无效社交可能有很多种定义，光是讨论无效社交在知乎的讨论就有数百条。我们从小就被大人教育要和别人搞好关系，逐步提升社交的深度和广度，但社交的质量这一种说法确实是很少被提及的。</p></blockquote><p>“世界有两种生活状态的人，一种是生活艺术化的人，一种是艺术生活化的人。”</p><blockquote><p>我很喜欢这句话。</p></blockquote><p>“现在是一个浮情时代，不是长情时代，什么都是在不停地更新。比如追星，追是一种好文化，但问题是抛弃，追过之后又不停地甩掉，没有长久陪伴自己的东西，人都是一次性消费的状态。这样的话，现在的人就会像浮世绘一样，很多东西是樱花式的生存，只有一个一个瞬间。”</p><blockquote><p>打开一些音乐app，几乎每天你都可以在首页看到新发布的专辑，一首刚发布的新歌许久未听，可能对于你来说已经是一首老歌了。一直会有新的书、新的音乐、新的电影涌现，如果碰巧你没有跟上潮流的步伐，你就很可能在社交环节脱节。我不是一个很念旧的人，我很乐意偶尔听一些之前下载到设备的老歌，看一下硬盘里的星战全集、打开之前读完的一本书重新看一遍摘录，总有一些东西是值得被珍视的。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;读这本书的起因是看到了豆瓣的年度推荐，之前也在社交媒体上看到过梁老师的视频，就花了几个小时读了一遍这本书。如果你在知乎上搜索梁永安，你会看到不少人评价他总是把话说得滴水不漏（虚空），不少人批评他讲的都是一些博人眼球的鸡汤。作为一个年轻人，坦诚地说我并不反感这类鸡汤类的文章，倒是想了解一下这位复旦的大学教授能够带给年轻人什么启示。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="爱情" scheme="https://stephenfang.me/tags/%E7%88%B1%E6%83%85/"/>
    
    <category term="游历" scheme="https://stephenfang.me/tags/%E6%B8%B8%E5%8E%86/"/>
    
    <category term="人生" scheme="https://stephenfang.me/tags/%E4%BA%BA%E7%94%9F/"/>
    
    <category term="梁永安" scheme="https://stephenfang.me/tags/%E6%A2%81%E6%B0%B8%E5%AE%89/"/>
    
    <category term="性别" scheme="https://stephenfang.me/tags/%E6%80%A7%E5%88%AB/"/>
    
    <category term="自由" scheme="https://stephenfang.me/tags/%E8%87%AA%E7%94%B1/"/>
    
    <category term="阅读、游历和爱情" scheme="https://stephenfang.me/tags/%E9%98%85%E8%AF%BB%E3%80%81%E6%B8%B8%E5%8E%86%E5%92%8C%E7%88%B1%E6%83%85/"/>
    
    <category term="工作" scheme="https://stephenfang.me/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>《不能承受的生命之轻》阅读摘录</title>
    <link href="https://stephenfang.me/2022/12/05/Book1017143/"/>
    <id>https://stephenfang.me/2022/12/05/Book1017143/</id>
    <published>2022-12-04T16:00:00.000Z</published>
    <updated>2023-07-24T13:38:31.400Z</updated>
    
    <content type="html"><![CDATA[<p>第一次看到这个书名我只感觉云里雾里，以这本书改编的电影有一个更容易接受的名字 ————《布拉格之恋》，这个名字看似能让我了解这或许是个爱情故事，显然我还是理解错了。<br>不能承受的生命之轻，轻可能表现在文字上，而重则是文字讲述的发人深省的各重意涵。刚开始读这本书你会感觉这就是一个男人和两个女人的三角性爱故事，你会感到困惑，然而读完整本书你大概会豁然开朗，米兰·昆德拉想通过故事的主人公，和读者探讨政治社会、人性、爱情、生命等话题。<br>“人生的悲剧总可以用沉重来比喻。人常说重担落在我们的肩上。我们背负着这个重担，承受得起或是承受不起。我们与之反抗，不是输就是赢。“</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/1017143/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/d9f32bf0729dcf98d9fccdb">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="关于政治"><a href="#关于政治" class="headerlink" title="关于政治"></a>关于政治</h3><p>与希特勒的这种和解，暴露了一个建立在轮回不存在之上的世界所固有的深刻的道德沉沦，因为在这个世界上，一切都预先被谅解了，一切也就被卑鄙地许可了。</p><p>布拉格人决定永远保留其断垣残壁，怕万一有个波兰人或德国人前来指责他们受的苦难不多。在这堆用作战争永恒罪证的显赫的瓦砾前，立着一座铁管搭成的检阅台，供共产党在过去或将来指挥布拉格人民大游行。</p><p>特蕾莎回想起入侵的最初几个日子。所有城市的街牌被撤下，所有道路的指示牌被拔去。整个国家一夜之间变成了无名之国。整整七天，俄国军队在这个国家到处闯，却不知道身处何方。军官们到处找报社、电视台、广播大楼，要强行占领，可就是找不到。他们四处向人们打听，但对方不是耸耸肩，就是乱指地址和方向。</p><p>凡认为中欧共产主义制度是专门制造罪人的，那他们至少没有看清一个根本性的事实：罪恶的制度并非由罪人建立，而恰恰由那些确信已经找到了通往天堂的唯一道路的积极分子所建立。他们大无畏地捍卫这条道路，并因此而夺去了许多人的生命。但若干时间以后，事情变得无比清晰明了，原来天堂并不存在，而那些积极分子也就成了杀人凶手。</p><blockquote><p>从这本书可以了解到冷战之后很多欧洲国家对苏联的敌视态度。</p></blockquote><p>德国人不惜牺牲生命向东方拼命扩张帝国的领土，俄国人则为向西方扩张自己的势力范围而丧生，是的，这些人为愚蠢的事情而死，他们的死才毫无意义，才没有任何价值。</p><p>自法国大革命时代以来，欧洲的一半人被称为左，另一半则接受了右的称谓。若以它们所依据的理论原则来对左或右的概念进行界定，基本上是行不通的。这根本就不足为怪：任何政治运动并非建立在理性的态度之上，而是以表演、形象、词语、老套等为基础，其总体构成了这种或那种的政治媚俗。</p><p>我想起了那位在布拉格组织签名请愿运动、要求赦免政治犯的记者。他很清楚这种请愿运动帮不了犯人，其真正的目的不是为了真的就能释放那些犯人，而是为了明白仍然有人无所畏惧。他所做的也近乎是在演戏，但他没有别的可能。在行动和演戏之间，他别无选择。他唯有一种选择：要么演戏，要么什么也不干。在某些情况下，人注定要演戏。</p><blockquote><p>要么演戏，要么什么也不干。在某些情况下，人注定要演戏。</p></blockquote><p>报上于是开始发表一系列文章，以读者来信的形式组织攻势。例如，要求杀尽灭绝城里的鸽子。鸽子确实被杀尽灭绝了。不过，他们的目标主要是狗。当时，人们尚未从国土被占领这一灾难所造成的精神创伤中解脱出来，但是报纸、广播、电视谈论的都是狗，说它们弄脏了人行道、公园，对儿童健康造成危害，是光会吃、毫无用途的东西。这一切制造了一种真正的偏执，特蕾莎担心狂热的民众会袭击卡列宁。过了一年，积聚起的所有仇恨（首先拿动物做试验），都转向了真正的目标：人类。开除、逮捕、审判开始了。牲畜总算可以喘口气了。</p><h3 id="关于生活"><a href="#关于生活" class="headerlink" title="关于生活"></a>关于生活</h3><p>谁要是想要离开自己生活的地方，那他准是不快活。</p><p>但是，如果一件事取决于一系列的偶然，难道不正说明了它非同寻常而且意味深长？</p><blockquote><p>很有意思的一句话。</p></blockquote><p>人生如同谱写乐章。人在美感的引导下，把偶然的事件（贝多芬的一首乐曲、车站的一次死亡）变成一个主题，然后记录在生命的乐章中。犹如作曲家谱写奏鸣曲的主旋律，人生的主题也在反复出现、重演、修正、延展。</p><p>我们有理由责备人类因为对这些偶然巧合视而不见而剥夺了生命的美丽。</p><p>在一个多种流派并存、多种势力互相抵消、互相制约的社会里，多少还可以摆脱媚俗的专横；个人可以维护自己的个性，艺术家可以创造出不同凡响的作品。但是在某个政治运动独霸整个权力的地方，人们便一下置身于极权的媚俗之王国。</p><p>当农民不再是土地的主人，而只是一名被雇来种地的职工时，他就不再依恋这片家园和自己所从事的工作，他一无所有，因而也不惧怕会失去什么。这种漠然的态度倒使得农村保持了相当大的自主权和自由的空间。</p><p>只要人生活在乡下，置身于大自然，身边拥簇着家畜，在四季交替的怀抱之中，那么，他就始终与幸福相伴，哪怕那仅仅是伊甸园般的田园景象的一束回光。</p><h3 id="关于自我"><a href="#关于自我" class="headerlink" title="关于自我"></a>关于自我</h3><p>吸引她走到镜子前的并不是虚荣心，而是在镜中能看到自我令她震惊。她忘记了眼前看见的是个传达身体机能的仪表盘。她相信，透过脸部的线条，呈现给她的是自己的灵魂。</p><p>世界只不过是一个巨大的肉体集中营，一具具肉体彼此相像，而灵魂是根本看不见的。</p><p>忠诚是第一美德，它使我们的生命完整统一。若没有忠诚，人生就会分散成千万个转瞬即逝的印迹。</p><p>当心灵在说话，理智出来高声反对，是不恰当的。在媚俗的王国，实施的是心灵的专制。</p><p>我们全都需要有人注视我们。根据我们生活所追求的不同的目光类型，可以将我们分成四类。第一类追求那种被无数不知名的人注视的目光，第二类是那种离开了众多双熟悉的眼睛注视的目光就活不下去的人。接下来是第三类，这类人必须活在所爱之人的目光下，他们的境况与第一类人同样危险。一旦所爱的人闭上眼睛，其生命殿堂也将陷入黑暗之中。最后是第四类，也是最少见的一类，他们生活在纯属想象、不在身边的人的目光下。这类人是梦想家。</p><h3 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h3><p>对他而言，爱情并不是社会生活的延续，而正与之相反。对他来说，爱情是一种甘心屈从于对方的意愿和控制的热望。委身于对方就如同投降的士兵一样，必须首先缴械。</p><blockquote><p>这句话描述得比婚姻是爱情的坟墓还要真实有意思。</p></blockquote><p>假若人还年轻，他们的生命乐章不过刚刚开始，那他们可以一同创作旋律，交换动机（像托马斯和萨比娜便交换产生了圆顶礼帽这一动机），但是，当他们在比较成熟的年纪相遇，各自的生命乐章已经差不多完成，那么，在每个人的乐曲中，每个词，每件物所指的意思便各不相同。</p><p>调情是一种暗示有进一步性接触可能的行为，但又不担保这种可能性一定能够兑现。换言之，调情是没有保证的性交承诺。</p><p>追逐众多女性的男人很容易被归为两类。一类人在所有女人身上寻找他们自己的梦，他们对于女性的主观意念。另一类人则被欲念所驱使，想占有客观女性世界的无尽的多样性。</p><p>隐喻是危险的。爱由隐喻而起。换言之：爱开始于一个女人以某句话印在我们诗化记忆中的那一刻。</p><h3 id="关于艺术"><a href="#关于艺术" class="headerlink" title="关于艺术"></a>关于艺术</h3><p>在欧洲，美总是带有刻意的特点，总是先有唯美的构想或长久的计划，比如一座哥特式大教堂或一座文艺复兴式的城市，得按计划，花几个漫长的世纪才能建成。纽约的美则完全来自另一种源头。这是一种非刻意的美。它无需经过人的预先谋划，就像钟乳石溶洞一样自然天成。有些形态，本身很丑，未经任何筹划，可碰巧处在一个看似不可思议的环境中，突然之间便散发出一种魔力般的诗意来。</p><h2 id="关于游历"><a href="#关于游历" class="headerlink" title="关于游历"></a>关于游历</h2><p>我们完全不了解那一座座看不见的威尼斯粪城，殊不知我们的盥洗室、我们的卧室、我们的舞厅和我们的国会大厦就建在上面。</p><blockquote><p>对钢筋水泥城市的奇特描述。</p></blockquote><p>历史和个人生命一样轻，不能承受地轻，轻若鸿毛，轻若飞扬的尘埃，轻若明日即将消失的东西。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;第一次看到这个书名我只感觉云里雾里，以这本书改编的电影有一个更容易接受的名字 ————《布拉格之恋》，这个名字看似能让我了解这或许是个爱情故事，显然我还是理解错了。&lt;br&gt;不能承受的生命之轻，轻可能表现在文字上，而重则是文字讲述的发人深省的各重意涵。刚开始读这本书你会感觉这就是一个男人和两个女人的三角性爱故事，你会感到困惑，然而读完整本书你大概会豁然开朗，米兰·昆德拉想通过故事的主人公，和读者探讨政治社会、人性、爱情、生命等话题。&lt;br&gt;“人生的悲剧总可以用沉重来比喻。人常说重担落在我们的肩上。我们背负着这个重担，承受得起或是承受不起。我们与之反抗，不是输就是赢。“&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="米兰·昆德拉" scheme="https://stephenfang.me/tags/%E7%B1%B3%E5%85%B0%C2%B7%E6%98%86%E5%BE%B7%E6%8B%89/"/>
    
    <category term="不能承受的生命之轻" scheme="https://stephenfang.me/tags/%E4%B8%8D%E8%83%BD%E6%89%BF%E5%8F%97%E7%9A%84%E7%94%9F%E5%91%BD%E4%B9%8B%E8%BD%BB/"/>
    
    <category term="爱情" scheme="https://stephenfang.me/tags/%E7%88%B1%E6%83%85/"/>
    
    <category term="国家" scheme="https://stephenfang.me/tags/%E5%9B%BD%E5%AE%B6/"/>
    
  </entry>
  
  <entry>
    <title>《人间一趟，尽兴而已》阅读摘录</title>
    <link href="https://stephenfang.me/2022/11/25/Book35626972/"/>
    <id>https://stephenfang.me/2022/11/25/Book35626972/</id>
    <published>2022-11-24T16:04:12.000Z</published>
    <updated>2023-07-24T13:38:31.401Z</updated>
    
    <content type="html"><![CDATA[<p>这是我读的梁实秋先生的第二本书，与《雅舍谈吃》关注于“馋”不同，这本书收录了描述人间百态、故人旧事的种种往事，除了展现了梁先生内在的精神世界和生活志趣，还得以窥见其对回不去故乡的眷恋。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/35626972/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/11d32590727eab7c11d1098">微信读书</a></li></ul><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="北平的街道"><a href="#北平的街道" class="headerlink" title="北平的街道"></a>北平的街道</h3><p>北平，不比十里洋场，人民的心理比较保守，沾染的洋习较少较慢。</p><blockquote><p>就算是现在也很难让北京和上海互相理解吧。</p></blockquote><p>北平的市容，在进步，也在退步。进步的是物资建设，诸如马路、行人道的拓宽与铺平，退步的是北平特有的情调与气氛逐渐消失褪色了。天下一切事物没有不变的，北平岂能例外？</p><h3 id="我在小学"><a href="#我在小学" class="headerlink" title="我在小学"></a>我在小学</h3><p>父亲要我们受新式教育，所以不惜学费负担投入当时公认最好的学校，事实上却大失所望。所谓新式的洋学堂，只是徒有其表。我在这学堂读了一年，可以说什么也没有学到，无非是让我认识了一些丑恶腐败的现象。</p><p>学校好几百人共用一个厕所，其环境之脏可想，但是有些同学们入厕之后其嘴巴比那环境还脏。所以我视如厕为畏途。性教育在一群孩子们中间自由传播，这种情形当时在公立小学尤甚，我是深深拜受其赐了。</p><blockquote><p>“深深拜受其赐”大概是非常文雅得当的表达了</p></blockquote><h3 id="听戏"><a href="#听戏" class="headerlink" title="听戏"></a>听戏</h3><p>觉得在那乱糟糟的环境之中熬上几个小时还是值得一付的代价，只要能听到一两段韵味十足的歌唱，便觉得那抑扬顿挫使人如醉如迷，使全身血液的流行都为之舒畅匀称。</p><h3 id="雅舍"><a href="#雅舍" class="headerlink" title="雅舍"></a>雅舍</h3><p>中国旧式家庭，陈设千篇一律，正厅上是一条案，前面一张八仙桌，一边一把靠椅，两旁是两把靠椅夹一只茶几。我以为陈设宜求疏落参差之致，最忌排偶。“雅舍”所有，毫无新奇，但一物一事之安排布置俱不从俗。人入我室，即知此是我室。</p><h3 id="商店礼貌"><a href="#商店礼貌" class="headerlink" title="商店礼貌"></a>商店礼貌</h3><p>凡是殷实的正派的商店，所用的伙计都是科班学徒出身，从端尿盆捧夜壶起，学习至少三年，才有资格出任艰巨，更磨练一段时间才能站在柜台后面应付顾客，最后方能晃来晃去的招待来宾。那“和气生财”的作风是后天的慢慢熏陶出来的。若是临时招聘的职员，他们的个性自然比较发达，谁还肯承认顾客至上？</p><p>菜不来，客人不耐烦拿起筷子敲盘叮声，在从前这是极严重的事，这表示招待不周。执事先生一听见敲盘声就要亲自出面道歉，随后有人打起门帘让客人看看那位值班跑堂的扛着铺盖走出大门——被辞退了。事实上他是从大门出去又从后门回来了。</p><blockquote><p>最后一句“事实上他是从大门出去又从后门回来了”也是梁先生散文的一大特点，总是能让你在阅读的某个时候会心一笑。</p></blockquote><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><p>音乐这样东西，在所有的艺术里，是最富于侵略性的。别种艺术，如图画雕刻，都是固定的，你不高兴欣赏便可以不必寓目，各不相扰；惟独音乐，声音一响，随着空气波荡而来，照直侵入你的耳朵，而耳朵平常都是不设防的，只得毫无抵御的任它震荡刺激。</p><h3 id="排队"><a href="#排队" class="headerlink" title="排队"></a>排队</h3><p>于是排队这洋玩艺儿应运而兴。奇怪的是，这洋玩艺儿兴了这么多年，至今还没有蔚成风气。长一辈的人在人多的地方横冲直撞，孩子们当然认为这是生存技能之一。</p><blockquote><p>梁先生所描述的这洋玩艺儿可能在现在才略微蔚成风气。</p></blockquote><p>谁也不肯扬起鞭子去取缔，觍颜说是“于法无据”。一条街定为单行道、一个路口不准向左转，又何所据？法是人定的，要什么样的生活方式便应该有什么样的法。</p><p>我们是礼义之邦，君子无所争，从来没有鼓励人争先恐后之说。很多地方我们都讲究揖让，尤其是几个朋友走出门口的时候，常不免于拉拉扯扯礼让了半天，其实鱼贯而行也就够了。我不太明白为什么到了陌生人聚集在一起的时候，便不肯排队，而一定要奋不顾身。</p><h3 id="汽车"><a href="#汽车" class="headerlink" title="汽车"></a>汽车</h3><p>在许多人的眼里，人分两种：一种是坐汽车的人，一种是没得汽车坐的人。</p><blockquote><p>放在当今语境下也同样适用，只不过汽车变成了其他更加稀缺的东西。</p></blockquote><h3 id="钱的教育"><a href="#钱的教育" class="headerlink" title="钱的教育"></a>钱的教育</h3><p>我开始明白这不是一个玩具，这是一个强迫储蓄的一种陷阱。金钱这东西为什么是那样的宝贵，必须如此周密的储藏起来呢？扑满并没有给我养成储蓄的美德，它反倒帮助我对于钱产生一种神秘的感觉。</p><p>示范的作用很大，孩子们无须很早的就实习。如果一个人的人生观和宇宙观都是从钱的方孔里塞出去的，我相信他的孩子们一定会有一套拜金主义的心理。钱不但满足自己的物质的需要，钱还要顾及自己的内心的平安。这样的用钱的方法，值得一试。孩子们不一定永远是接受命令，他也可以理解。</p><h3 id="小账"><a href="#小账" class="headerlink" title="小账"></a>小账</h3><p>小账制度的讨厌在于小账没有固定的数目，给少了固然要遭白眼，给多了也是不妙。最好是在普通的数目上稍微多加那么一点点，庶几可收给小账之功而不被谥为猪头三。然而这就不容易，这需要有经验，老门槛。</p><h3 id="市容"><a href="#市容" class="headerlink" title="市容"></a>市容</h3><p>我们中国人夙来就是“民以食为天”，见面打问讯时也是“您吃了么？”挂在口边。吃东西是一天中最大的一件事。谁吃饱了谁便是解决了这一天的基本问题。所以我见了这样一大堆人围着摊贩吃东西，缩着脖子吃点热东西，我就觉得心里高兴。</p><blockquote><p>“我就觉得心里高兴”读到这里感觉特别祥和安适。</p></blockquote><h3 id="诗人"><a href="#诗人" class="headerlink" title="诗人"></a>诗人</h3><p>一个人如果达到相当年龄，还不失赤子之心，经风吹雨打，方寸间还能诗意盎然，他是得天独厚，他是诗人。</p><h3 id="乞丐"><a href="#乞丐" class="headerlink" title="乞丐"></a>乞丐</h3><p>世间的变化与他无干。只有他屹然不动。股票与地产的价格不影响他。农业的或商业的繁荣也与他无涉，最多不过是给他换一批施主。他不必担心有人找他做保。没有人肯过问他的宗教或政治倾向。他是世界上惟一的自由人。</p><blockquote><p>把乞丐这个职业描述的如此清新脱俗，乞丐更像是吟游诗人了。</p></blockquote><h3 id="观光"><a href="#观光" class="headerlink" title="观光"></a>观光</h3><p>来台观光而不去看故宫古物，岂不等于是探龙颔而遗骊珠？可是我真希望观光客不要遇到那大排长队的背着水壶拿着豆沙面包的小学生，否则他们会要误会我们的小学生已经恶补收效到能欣赏周彝汉鼎的程度了。</p><blockquote><p>原来对岸的文化教育也是如此。</p></blockquote><h3 id="脏"><a href="#脏" class="headerlink" title="脏"></a>脏</h3><p>看样子，公共的厕所都需要编制，设所长一人，属员若干，严加考绩，甚至卖票收费亦无不可。</p><p>有一位回国的观光客，他选择餐馆的重要标准之一是看那里的厨房脏到什么程度，其次才考虑那里有什么拿手菜。结果选来选去，时常还是回到自己的寓所吃家常饭。</p><h3 id="健忘"><a href="#健忘" class="headerlink" title="健忘"></a>健忘</h3><p>人在尚未饮忘川之水的时候，脑子里就开始了清仓的活动。范成大诗：“僚旧姓名多健忘，家人长短总佯聋。”僚旧那么多，有几个能令人长相忆？即使记得他的相貌特征，他的姓名也早已模糊了，倒是他的绰号有时可能还记得。</p><h3 id="散步"><a href="#散步" class="headerlink" title="散步"></a>散步</h3><p>清晨走到空旷处，看东方既白，远山如黛，空气里没有太多的尘埃炊烟混杂在内，可以放心的尽量的深呼吸，这便是一天中难得的享受。</p><h3 id="书法"><a href="#书法" class="headerlink" title="书法"></a>书法</h3><p>或谓毛笔式微，善书者将要绝迹。我不这样悲观。书法本来不是尽人能精的。自古以来，琴棋书画雅人深致，但是卓然成家者能有几人？而且善棋者未必都能琴，善画者未必皆精于书，艺有专长，难于兼擅。</p><h3 id="窗外"><a href="#窗外" class="headerlink" title="窗外"></a>窗外</h3><p>窗子就是一个画框，只是中间加些棂子，从窗子望出去，就可以看见一幅图画。那幅图画是妍是媸，是雅是俗，是闹是静，那就只好随缘。</p><p>有一天午后，小雨方住，蓦然看见天空一道彩虹，是一百八十度完完整整的清清楚楚的一条彩带，所谓《虹饮江皋》，大概就是这个样子。虹销雨霁的景致，不知看过多少次，却没看过这样规模壮阔的虹。</p><blockquote><p>就算是看到一道彩虹这样的事情梁先生也能够描述的如此超脱，字里行间充溢着对美学的思考。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是我读的梁实秋先生的第二本书，与《雅舍谈吃》关注于“馋”不同，这本书收录了描述人间百态、故人旧事的种种往事，除了展现了梁先生内在的精神世界和生活志趣，还得以窥见其对回不去故乡的眷恋。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="梁实秋" scheme="https://stephenfang.me/tags/%E6%A2%81%E5%AE%9E%E7%A7%8B/"/>
    
    <category term="北京" scheme="https://stephenfang.me/tags/%E5%8C%97%E4%BA%AC/"/>
    
    <category term="人间一趟，尽兴而已" scheme="https://stephenfang.me/tags/%E4%BA%BA%E9%97%B4%E4%B8%80%E8%B6%9F%EF%BC%8C%E5%B0%BD%E5%85%B4%E8%80%8C%E5%B7%B2/"/>
    
    <category term="吃" scheme="https://stephenfang.me/tags/%E5%90%83/"/>
    
  </entry>
  
  <entry>
    <title>《雅舍谈吃》阅读摘录</title>
    <link href="https://stephenfang.me/2022/10/30/Book25774775/"/>
    <id>https://stephenfang.me/2022/10/30/Book25774775/</id>
    <published>2022-10-29T16:00:12.000Z</published>
    <updated>2023-07-24T13:38:31.400Z</updated>
    
    <content type="html"><![CDATA[<p>我对吃这件事是非常感兴趣的，之前很喜欢汪曾祺先生笔下的老味道，这本书就是从汪曾祺先生书籍网页下的推荐寻到的。之前对梁实秋先生本人知之甚少，但大师作品多少有所耳闻，读这本书之后我不得不承认我也很喜欢他的行文风格，读起来如同一位地道的北京人在与你倾诉。</p><span id="more"></span><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://book.douban.com/subject/25774775/">豆瓣</a></li><li><a href="https://weread.qq.com/web/bookDetail/24132e507212f5c92413b71">微信读书</a></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>书名中的雅舍，是梁实秋先生在重庆时的居所，也是本书创作的地方，这本书曾在海峡两岸都引起很深的反响，最令我印象深刻的是梁先生对于“馋”的理解，先有：“馋”字在外国语中无适当的字可以代替，所以讲到馋，真“不足为外人道”“，又有”馋与阶级无关。豪富人家，日食万钱，犹云无下箸处，是因为他这种所谓饮食之人放纵过度，连馋的本能和机会都被剥夺了，他不是不馋，也不是太馋，他麻木了，所以他就要千方百计地在食物方面寻求新的材料、新的刺激。“。我当然也“馋”，但将“馋”当做学问来研究，用平实的语句来写作，就是文学家和我的区别所在。</p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="两做鱼"><a href="#两做鱼" class="headerlink" title="两做鱼"></a>两做鱼</h3><p>我又有一位江西同学，他最会吃鱼，一见鱼脍上桌便不停下箸，来不及剔吐鱼刺，伸出舌头往嘴边一送，便见一根根鱼刺贴在嘴角上，积满一把才用手抹去。可见食鱼之巧拙，与省籍无关，不分南北。</p><p>炸鱼要用猪油，炸出来色泽好，用菜油则易焦。鱼剖为两面，取其一面，在表面上斜着纵横细切而不切断。入热油炸之，不需裹面糊，可裹芡粉，炸到微黄，鱼肉一块块地裂开，看样子就引人入胜。</p><blockquote><p>梁先生和汪曾祺先生一样，不止会品尝美食，也通晓做菜的诀窍。</p></blockquote><h3 id="水晶虾饼"><a href="#水晶虾饼" class="headerlink" title="水晶虾饼"></a>水晶虾饼</h3><p>用温油，炸出来白如凝脂，温如软玉，入口松而脆。蘸椒盐吃。</p><blockquote><p>白如凝脂，温如软玉，很是期待一些文人来做吃播。</p></blockquote><h3 id="熘黄菜"><a href="#熘黄菜" class="headerlink" title="熘黄菜"></a>熘黄菜</h3><p>黄菜指鸡蛋。北平人常避免说蛋字，因为它不雅，我也不知为什么不雅。“木樨”“芙蓉”“鸡子儿”都是代用词。更进一步“鸡”字也忌讳，往往称为“牲口”。</p><blockquote><p>芙蓉汤是听过很多次了，木樨是指鸡蛋确实是第一次听说。</p></blockquote><h3 id="酸梅汤与糖葫芦"><a href="#酸梅汤与糖葫芦" class="headerlink" title="酸梅汤与糖葫芦"></a>酸梅汤与糖葫芦</h3><p>我不知道为什么没有人动脑筋把信远斋的酸梅汤制为罐头行销各地，而一任“可口可乐”到处猖狂。</p><blockquote><p>几十年后的今天各个火锅店把这一点做到了。</p></blockquote><p>正宗的冰糖葫芦，薄薄一层糖，透明雪亮。材料种类甚多，诸如海棠、山药、山药豆、杏干、葡萄、橘子、荸荠、核桃，但是以山里红为正宗。</p><h3 id="煎馄饨"><a href="#煎馄饨" class="headerlink" title="煎馄饨"></a>煎馄饨</h3><p>凡是饭馆没有不备一锅高汤的（英语所谓“原汤”stock），一碗馄饨舀上一勺高汤，就味道十足。后来“味之素”大行其道，谁还预备原汤？不过善品味的人，一尝便知道是不是正味。</p><blockquote><p>stock 除了股票还能有高汤的意思，算是涨见识了。</p></blockquote><h3 id="芙蓉鸡片"><a href="#芙蓉鸡片" class="headerlink" title="芙蓉鸡片"></a>芙蓉鸡片</h3><p>因上菜稍慢，我用牙箸在盘碗的沿上轻轻敲了叮当两响，先君急止我曰：“千万不可敲盘碗作响，这是外乡客粗鲁的表现。你可以高声喊人，但是敲盘碗表示你要掀桌子。</p><h3 id="炸丸子"><a href="#炸丸子" class="headerlink" title="炸丸子"></a>炸丸子</h3><p>我不知道为什么湖北人特喜糯米，豆皮要包糯米，烧卖也要包糯米，丸子也要裹上糯米。</p><blockquote><p>武汉的豆皮和烧麦我都很喜欢，糯米重油饮食算是武汉的一张名片了。</p></blockquote><h3 id="佛跳墙"><a href="#佛跳墙" class="headerlink" title="佛跳墙"></a>佛跳墙</h3><p>“东坡肉”无人不知。究竟怎样才算是正宗的东坡肉，则去古已远，很难说了。幸而东坡有一篇《猪肉颂》：<br>净洗挡，少着水，<br>柴头罨烟焰不起。<br>待他自熟莫催他，<br>火候足时他自美。<br>黄州好猪肉，价钱如泥土，<br>贵者不肯食，贫者不解煮。<br>早晨起来打两碗，<br>饱得自家君莫管。</p><blockquote><p>从这首歌可以引出很多菜肴的背后都是有文化底蕴的，我听过的就有东坡肉、扬州炒饭、宫保鸡丁、夫妻肺片，如果有一本研究这方面的书我是很乐意看的。</p></blockquote><h3 id="咖喱鸡"><a href="#咖喱鸡" class="headerlink" title="咖喱鸡"></a>咖喱鸡</h3><p>我们时常打个电话，叫两元的咖喱鸡，不到一小时就送到，家里只消预备白饭，便可享有丰盛的一餐，家人每个可以分到一只小鸡，最称心的是咖喱汤泡饭，每人可以罄两碗。</p><blockquote><p>罄两碗倒是很形象不清楚是不是北京话，可以“翻译”成现在的网络用语旋两碗。</p></blockquote><h3 id="烙饼"><a href="#烙饼" class="headerlink" title="烙饼"></a>烙饼</h3><p>烙饼要夹杂着黑糖和芝麻酱，趁热吃，那份香无法形容。我长大以后，自己在家中烙糖饼，乃加倍地放糖，加倍地放芝麻酱，来弥补幼时之未能十分满足的欲望。</p><h3 id="笋"><a href="#笋" class="headerlink" title="笋"></a>笋</h3><p>油焖笋非春笋不可，而春笋季节不长，故罐头油焖笋一向颇受欢迎，唯近制多粗制滥造耳。</p><h3 id="鱼丸"><a href="#鱼丸" class="headerlink" title="鱼丸"></a>鱼丸</h3><p>鱼丸的汤本身即很鲜美，不需高汤。将做好的鱼丸倾入汤内煮沸，撒上一些葱花或嫩豆苗，即可盛在大碗内上桌。当然鱼丸也可红烧，终究不如清汤本色，这样做出的鱼丸嫩得像豆腐。</p><h3 id="粥"><a href="#粥" class="headerlink" title="粥"></a>粥</h3><p>在小白炉子的火口边上煮。不用剩饭煮，用生米淘净慢煨。水一次加足，不半途添水。始终不加搅和，任它翻滚。这样煮出来的粥，黏和，烂，而颗颗米粒是完整的，香。再佐以笋尖、火腿、糟豆腐之类，其味甚佳。</p><blockquote><p>笋尖、火腿、糟豆腐粥，单从描述就能感觉到好吃。</p></blockquote><h3 id="豆腐"><a href="#豆腐" class="headerlink" title="豆腐"></a>豆腐</h3><p>鸡刨豆腐是普通家常菜，可是很有风味。一块老豆腐用铲子在炒锅热油里戳碎，戳得乱七八糟，略炒一下，倒下一个打碎了的鸡蛋，再炒，加大量葱花。养过鸡的人应该知道，一块豆腐被鸡刨了是什么样子。</p><h3 id="菠菜"><a href="#菠菜" class="headerlink" title="菠菜"></a>菠菜</h3><p>我们常吃的菠菜，非我土产，唐太宗时来自西域。《唐会要》：“太宗时尼波罗国献波棱菜，类红蓝，火熟之，能益食味。”菠菜不但可口，而且富含铁质。</p><blockquote><p>从菠菜的调查很合乎知识分子的品味和格调，需要知道那个时候可没有因特网。</p></blockquote><h3 id="味精"><a href="#味精" class="headerlink" title="味精"></a>味精</h3><p>普通餐馆人员分为柜上、灶上、堂口三部分。各自为政，很少沟通。关照侍者的话，未必能及时传到灶上，灶上掌勺的大师傅也未必肯理。味精照加，嘱咐的话等于白说。</p><h3 id="面条"><a href="#面条" class="headerlink" title="面条"></a>面条</h3><p>李笠翁《闲情偶寄》有一段话提到汤面深获我心，他说味在汤里而面索然寡味，应该是汤在面里然后面才有味。</p><h3 id="烧饼油条"><a href="#烧饼油条" class="headerlink" title="烧饼油条"></a>烧饼油条</h3><p>火腿、鸡蛋、牛油面包作为标准的早点，当然也很好，但我只是在不得已的情形下才接受了这种异俗。</p><h3 id="炸活鱼"><a href="#炸活鱼" class="headerlink" title="炸活鱼"></a>炸活鱼</h3><p>野蛮、残酷的习性深植在人性里面，经过多年文化陶冶，有时尚不免暴露出来。荀子主性恶，有他一面的道理。他说：“纵性情，安姿睢，而违礼义者为小人。”炸活鱼者，小人哉！</p><blockquote><p>炸活鱼者应与今生食章鱼者无异。</p></blockquote><h3 id="吃"><a href="#吃" class="headerlink" title="吃"></a>吃</h3><p>据说饮食男女是人之大欲，所以我们既生而为人，也就不能免俗。然而讲究起吃来，这其中有艺术，又有科学；要天才，还要经验，尽毕生之力恐怕未必能穷其奥妙。</p><h3 id="由熊掌说起"><a href="#由熊掌说起" class="headerlink" title="由熊掌说起"></a>由熊掌说起</h3><p>汤东谷语人曰：“学者须居中等屋，服下等衣，食上等食。何者？茅茨土阶，非今所宜。瓦屋八九间，仅藏图书足矣。故曰中等屋。衣不必绫罗锦绣也，夏葛冬布，适寒暑足矣。故曰下等衣。至于饮食，则当远求名胜之物，山珍海错，名茶法酒，色色俱备，庶不为凡流俗士，故曰上等食也。”</p><h3 id="厨房"><a href="#厨房" class="headerlink" title="厨房"></a>厨房</h3><p>孟子有“君子远庖厨”之说，也是基于“眼不见为净”的道理。在没有屠宰场的时候，杀牛宰羊均需在厨中举行，否则远庖厨作甚？尽管席上的重珍兼味美不胜收，而那调和鼎鼐的厨房却是龌龊脏乱，见不得人。试想，煎炒烹炸，油烟弥漾而无法宣泄，烟熏火燎，煤渣炭屑经常地月累日积，再加上老鼠横行，蚊蝇乱舞，蚂蚁蟑螂之无孔不入，厨房焉得不脏？</p><h3 id="喝茶"><a href="#喝茶" class="headerlink" title="喝茶"></a>喝茶</h3><p>人无贵贱，谁都有份，上焉者细啜名种，下焉者牛饮茶汤。</p><h3 id="饮酒"><a href="#饮酒" class="headerlink" title="饮酒"></a>饮酒</h3><p>《菜根谭》所谓“花看半开，酒饮微醺”的趣味，才是最令人低回的境界。</p><h3 id="关于苹果"><a href="#关于苹果" class="headerlink" title="关于苹果"></a>关于苹果</h3><p>韩国的苹果，大而无味。我在三十年前途经仁川，购得一篓，携归船上，码头上恶少成群，公然攫夺，到得船上只剩了半篓。这是韩国给我的小小印象之一。</p><h3 id="康乃馨牛奶"><a href="#康乃馨牛奶" class="headerlink" title="康乃馨牛奶"></a>康乃馨牛奶</h3><p>一个公司行号非万不得已不会挂出“谢绝参观”的牌子，更不会毫不客气地告白“闲人免进”，招待参观正是极高明的广告手段。</p><blockquote><p>全文讲的是康乃馨牛奶的招待参观，事实上目前从B站上可以看到不少UP主牧场探访的视频，不知道是不是从梁先生的作品里得到的启发。</p></blockquote><h3 id="请客"><a href="#请客" class="headerlink" title="请客"></a>请客</h3><p>素未谋面的人拘在一起，要他们有说有笑，同时食物都能顺利地从咽门下去，也未免强人所难。主人从中调处，殷勤了这一位，怠慢了那一位，想找一些大家都有兴趣的话题亦非易事。所以客人需要分类，不能鱼龙混杂。</p><blockquote><p>所谓请客也是一门学问，请哪些人、吃什么、坐哪儿都大有讲究。</p></blockquote><h3 id="饭前祈祷"><a href="#饭前祈祷" class="headerlink" title="饭前祈祷"></a>饭前祈祷</h3><p>如今我每逢有美味的饮食可以享受的时候，首先令我怀想的是我的双亲。</p><h3 id="“疲马恋旧秣，羁禽思故栖”"><a href="#“疲马恋旧秣，羁禽思故栖”" class="headerlink" title="“疲马恋旧秣，羁禽思故栖”"></a>“疲马恋旧秣，羁禽思故栖”</h3><p>民元之际，家里的环境突然维新，一日之内小辫子剪掉了好几根，而且装上了庞大巨物钉在墙上的“德律风”，号码是六八六。照明的工具原来都是油灯、猪蜡，只有我父亲看书时才能点白光炎炎的僧帽牌的洋蜡，煤油灯认为危险，一向抵制不用，至是里里外外装上了电灯，大放光明。还有两架电扇，西门子制造的，经常不准孩子们走近五尺距离以内，生怕削断了我们的手指。</p><blockquote><p>原来那个时候就用上西门子的产品。</p></blockquote><h3 id="北平的零食小贩"><a href="#北平的零食小贩" class="headerlink" title="北平的零食小贩"></a>北平的零食小贩</h3><p>北平城里人没有不嗜豆汁儿者，但一出城则豆渣只有喂猪的份，乡下人没有喝豆汁儿的。外省人居住北平二三十年往往不能养成喝豆汁儿的习惯。能喝豆汁儿的人才算是真正的北平人。</p><p>北平没有汤圆，只有“元宵”，到了元宵季节街上有叫卖煮元宵的。袁世凯称帝时，曾一度禁称元宵，因与“袁消”二字音同，改称汤圆，可嗤也。</p><p>北平“酸梅汤”之所以特别好，是因为使用冰糖，并加以玫瑰、木樨、桂花之类。信远斋最合标准，沿街叫卖的便徒有其名了，而且加上天然冰亦颇有碍卫生。</p><p>而且数十年来，北平也正在变动，有些小贩由式微而没落，也有些新的应运而生，比我长一辈的人所见所闻可能比我要丰富些，比我年轻的人可能遇到一些较新鲜而失去北平特色的事物。总而言之，北平是在向新颖而庸俗方面变，在零食小贩上即可窥见一斑。如今呢，胡尘涨宇，面目全非，这些小贩，还能保存一二与否，恐怕在不可知之数了。但愿我的回忆不是永远地成为回忆！</p><blockquote><p>这一章可能是京味儿最重的，作者的思乡情怀衍生了一段段关于吃喝的味觉记忆。</p></blockquote><h3 id="吃在美国"><a href="#吃在美国" class="headerlink" title="吃在美国"></a>吃在美国</h3><p>我们中国人初到美国，撑大了的胃部尚未收缩，经常在半饥饿状态，食不厌精、脍不厌细的哲学尚未忘光，看到罐头统品就可能视为“狗食”，以后纵然经济状况好转，也难得有机会跻身于上层社会，更难得有机会成为一位“美食者”。所以批评美国的食物，并不简单。</p><h3 id="读《媛珊食谱》"><a href="#读《媛珊食谱》" class="headerlink" title="读《媛珊食谱》"></a>读《媛珊食谱》</h3><p>只有在贫富悬殊而社会安定、生活闲适的状态之下，烹饪术才能有特殊发展。</p><p>从前在饮食上不但省界分明，而且各地著名的饭馆都各有其少数的拿手菜，一时独步，绝无仿效之说。</p><h3 id="再谈“中国吃”"><a href="#再谈“中国吃”" class="headerlink" title="再谈“中国吃”"></a>再谈“中国吃”</h3><p>各地零食都有一个特点不知大家注意到没有，那就是不分阶级，雅俗共赏。成都附近的牌坊面，往来仕商以至贩夫走卒谁不停下来吃几碗？德州烧鸡，火车上的乘客不分等级都伸手窗外抢购。杭州西湖满家陇的桂花栗子，平湖秋月的藕粉，我相信人人都有兴趣。北平的豆汁儿、灌肠、熏鱼儿、羊头肉，是很低级的食物，但是大宅门儿同样地欢迎照顾。</p><p>炸酱面谁都吃过，但是那碗酱如何炸法大有讲究。肉丁也好，肉末也好，酱少了不好吃，酱多了太咸，我在某一家里学得了一个妙法。酱里加炸茄子丁，一碗酱变成了两碗，而且味道特佳。酱要干炸，稀糊糊的就不对劲。</p><blockquote><p>酱里加炸茄子丁确实是一个想到就觉得会香迷糊的做法。</p></blockquote><p>我还吃中国菜，周末出去吃馆子，还是吃中国馆子，不是一定中国菜好，是习惯。我常考虑，我们中国的吃，上层社会偏重色、香、味，蛋白质太多，下层社会蛋白质不足，碳水化合物太多，都是不平衡，问题是很严重的。我们要虚心地多方研究。</p><blockquote><p>梁先生在这里显得可爱，不太敢批评美国菜了，同时难以抗议中国菜，也看到了中国菜一直以来存在的问题，最后干脆还是让胃来做决定。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;我对吃这件事是非常感兴趣的，之前很喜欢汪曾祺先生笔下的老味道，这本书就是从汪曾祺先生书籍网页下的推荐寻到的。之前对梁实秋先生本人知之甚少，但大师作品多少有所耳闻，读这本书之后我不得不承认我也很喜欢他的行文风格，读起来如同一位地道的北京人在与你倾诉。&lt;/p&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="梁实秋" scheme="https://stephenfang.me/tags/%E6%A2%81%E5%AE%9E%E7%A7%8B/"/>
    
    <category term="雅舍谈吃" scheme="https://stephenfang.me/tags/%E9%9B%85%E8%88%8D%E8%B0%88%E5%90%83/"/>
    
    <category term="食物" scheme="https://stephenfang.me/tags/%E9%A3%9F%E7%89%A9/"/>
    
    <category term="中国" scheme="https://stephenfang.me/tags/%E4%B8%AD%E5%9B%BD/"/>
    
    <category term="游历" scheme="https://stephenfang.me/tags/%E6%B8%B8%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>2022年七月读书摘录</title>
    <link href="https://stephenfang.me/2022/08/10/202207ReadingList/"/>
    <id>https://stephenfang.me/2022/08/10/202207ReadingList/</id>
    <published>2022-08-09T17:04:12.000Z</published>
    <updated>2023-07-24T13:38:31.400Z</updated>
    
    <content type="html"><![CDATA[<p>这个月一共阅读了四本书，分别是</p><ul><li>《考试脑科学》</li><li>《苦才是人生》</li><li>《成为乔布斯》</li><li>《失去的三十年》<br>回头看读书笔记的时候又帮自己温习了一遍内容。</li></ul><span id="more"></span><h1 id="考试脑科学"><a href="#考试脑科学" class="headerlink" title="考试脑科学"></a><a href="https://book.douban.com/subject/33944838//">考试脑科学</a></h1><p>这本书提到了不少有意思的概念，包括如何科学用脑，脑的构成以及解释了记忆机制。<br>如果你同样对这本书感兴趣，可以阅读知乎上的这一篇<a href="https://zhuanlan.zhihu.com/p/141736616">文章</a>。</p><h2 id="第-1-章-记忆究竟是什么"><a href="#第-1-章-记忆究竟是什么" class="headerlink" title="第 1 章 记忆究竟是什么"></a>第 1 章 记忆究竟是什么</h2><blockquote><p>无论是从长期记忆里调取信息，还是向长期记忆里保存信息，都需要一个临时储存信息的场所，这就是短期记忆。通常来说，要想让记忆长期保存在人脑中，都要先通过短期记忆这一关。</p></blockquote><blockquote><p>保存长期记忆的部位叫作“大脑皮质”，它相当于人脑的“硬盘”，可以保存我们已经记住的知识。</p></blockquote><blockquote><p>人脑大约会消耗人体总能耗的 20%，但其质量只占不到人体体重的 2%。可见从每单位所需能耗来看，人脑是个不折不扣的耗能大户。</p></blockquote><blockquote><p>答案还是一样的：重新再记忆就可以了。除此之外别无他法，因为人脑的设计机制，本来就是为了能够尽快忘记大量信息。</p></blockquote><h2 id="第-2-章-“欺骗”大脑的方法"><a href="#第-2-章-“欺骗”大脑的方法" class="headerlink" title="第 2 章 “欺骗”大脑的方法"></a>第 2 章 “欺骗”大脑的方法</h2><blockquote><p>最容易忘记的时间恰巧是刚刚记住的时候——在记住信息后的 4 小时内，我们会一口气忘记大约一半的内容。但在此之后，剩余的记忆却能维持较长时间，它们是逐渐被忘记的。</p></blockquote><blockquote><p>不仅是考试前，在平时的学习过程中也要尽量避免在一天内向脑输入大量新知识。说起来，学习的重点原本就应该放在“复习”上，我会在之后对复习的重要性进行说明。总之，在力所能及的范围内毫无压力地记住自己所能记住的内容，才是符合记忆性质的学习方法。</p></blockquote><blockquote><p>换句话说，那些我们觉得自己已经完全忘记的信息，其实都完整地保存在无意识的世界里，只不过它们属于潜在的痕迹，所以才无法被我们想起来。</p></blockquote><blockquote><p>潜在记忆的保存时间只有 1 个月左右，如果不在 1 个月以内复习学到的知识，潜在记忆就无法发挥作用了。所以，并不是在任何时候复习都有效果，大家最迟也要在 1 个月以内就开始复习。</p></blockquote><blockquote><p>结合海马体的性质，我建议大家按照如下计划展开复习。<br>第 1 次复习：学习后的第 2 天<br>第 2 次复习：第 1 次复习 1 周后<br>第 3 次复习：第 2 次复习 2 周后<br>第 4 次复习：第 3 次复习 1 个月后</p></blockquote><blockquote><p>对脑而言，更重要的是“输出”。也就是说，站在海马体的角度，更重要的是得出这种判断：“这个信息竟然会被如此频繁地调用，看来必须要记住它才行。”</p></blockquote><h2 id="第-3-章-海马体和-LTP"><a href="#第-3-章-海马体和-LTP" class="headerlink" title="第 3 章 海马体和 LTP"></a>第 3 章 海马体和 LTP</h2><blockquote><p>波是“好奇心”的象征。当我们第一次见到某种事物，或者第一次踏入某个地方时，脑中就会自然而然地产生θ波。换句话说，当人对什么东西感兴趣而打开好奇心之门，处于紧张、兴奋或者期待的状态时，θ波就会出现；相反，当对千篇一律的事物感到厌烦、丧失兴趣的时候，θ波就会消失。</p></blockquote><blockquote><p>其实在大家身边有很多能抑制乙酰胆碱发挥作用的药物，比如几乎每个人都吃过的感冒药、止泻药或晕车药等。想必大家都有吃过感冒药后脑袋发晕、很想睡觉的经历吧？这就是人脑中的乙酰胆碱被抑制的证据。所以，如果我们明明在考试前没有感冒，却“以防万一”提前服用了感冒药，那么面临的结果可能会很悲惨。</p></blockquote><blockquote><p>杏仁核紧邻海马体，虽然只有人类小指的指甲那么大，却担当着十分重要的角色：产生喜悦、悲伤、焦虑等情绪。如果说海马体是记忆的工厂，那么杏仁核就是情绪的工厂。激活杏仁核也容易引发神经元的 LTP。换言之，人在情绪高涨时会更容易记忆。</p></blockquote><blockquote><p>LTP 无法承受压力，在面对逃避不开的压力时就会减弱。换句话说，记忆力会因为压力而下降。所以从这个角度来看，临阵磨枪的复习方式是非常不合理的。</p></blockquote><blockquote><p>灵活应用能让神经元产生 LTP 的两个秘诀——θ波（兴趣）和杏仁核（情绪）。这样一来，我们的学习效率就会得到非常大的提升了。</p></blockquote><blockquote><p>当肚子饿的时候我们的胃会分泌一种名为食欲刺激激素（ghrelin）的饥饿激素。这种饥饿激素能随血液循环进入海马体，促使海马体神经元产生 LTP。相反，在吃饱后不仅饥饿激素的水平会降低，而且血液还会相对集中于胃部和肠道，这往往会导致脑的活动水平降低。</p></blockquote><blockquote><p>从动物实验的数据来看，虽然自己走动时θ波最容易出现，但是就算自己没有亲自走动，比如乘坐交通工具移动时θ波也会出现。也就是说，即使你只是在公交或地铁里随着车的行进而晃动也没关系，只要脑能感知到正在移动的状态，就会产生θ波。</p></blockquote><blockquote><p>动物在感到寒冷时会产生危机感，因为它们本能地知道，到了冬天就难以捕捉到猎物了。所以在温度略低的房间里学习可以提高效率，夏天在空调冷气较强的房间、冬天在暖气不太充足的房间里学习比较好。</p></blockquote><blockquote><p>当我们产生喜怒哀乐等情绪时，当时的记忆能被很容易地保留下来，这也意味着充分利用杏仁核就能帮助我们加速记忆。</p></blockquote><h2 id="第-4-章-不可思议的睡眠"><a href="#第-4-章-不可思议的睡眠" class="headerlink" title="第 4 章 不可思议的睡眠"></a>第 4 章 不可思议的睡眠</h2><blockquote><p>在我们睡着时，脑会以各种形式整合信息，然后检查信息的一致性并“整理”过去的记忆。海马体就是在此时对信息进行审查，判断这些信息是否必要。因此，如果不睡觉，就相当于不给海马体整理并选择信息的机会。结果也可想而知，那些因为海马体来不及整理而杂乱无章的信息最终会被全部抛弃。</p></blockquote><blockquote><p>当我们睡着时，浅睡眠和深睡眠会反复交替多次（一般为 4～6 次）。一旦达到了充足的睡眠时间，我们就会在浅睡眠期结束时自然地醒来。但是如果在深睡眠期被闹钟强行叫醒，那么醒来后我们的心情就会变得非常糟糕，精神也会比较恍惚，而且这种意识模糊不清的状态会持续一整天，让人非常难受。</p></blockquote><blockquote><p>顺便一提，不仅夜晚的睡眠具有巩固记忆的效果，午睡也同样有效。如果时间允许，大家可以试着在结束上午的学习后睡一个午觉，半小时左右即可。</p></blockquote><blockquote><p>边睡觉边听录音的所谓的“睡眠学习法”其实并没有什么效果，所以还是不要去打扰在我们睡觉时仍然努力工作的脑比较好。</p></blockquote><blockquote><p>首先，请大家闭上双眼，想象自己正头戴一顶尖尖的三角帽、手里拿着一个水煮蛋。接着，将水煮蛋轻轻抛起，用另一只手接住，然后再次抛起，用最开始抛水煮蛋的手接住。就像这样，把水煮蛋在两手间来回抛接数次后，请再尝试着用自己的惯用手将水煮蛋轻而稳地放在帽尖上。成功后，一边将注意力集中在水煮蛋上，一边缓缓睁开双眼，此时注意力应该就能集中在眼前的书桌上了。一旦我们习惯了使用这样的方法，就可以省略反复抛接的环节，直接将水煮蛋立于帽尖即可集中注意力。</p></blockquote><blockquote><p>如何度过周末也是一个问题。比如，有人喜欢在周末睡个大懒觉，这就相当于主动给自己制造了时差，这简直就是在虐待脑。所以说，休息日也应该和平日一样，尽量在相同的时间起床。即使醒来之后还是特别困也不要睡回笼觉，等到中午再睡个午觉就好了。</p></blockquote><blockquote><p>对于人脑而言，睡觉前的一到两个小时是记忆的黄金时间。我自己也有在晚上睡觉前一定要工作一会儿的习惯。</p></blockquote><blockquote><ul><li>饭前处于饥饿状态，正适合学习。</li><li>睡觉前也是学习的黄金期。</li><li>早饭或晚饭后处于饱腹状态时，不学习也不要紧。可以读课外书、看电视，或者玩游戏都可以，做一些自己感兴趣的事可以让我们的生活更加丰富多彩。</li><li>午后如果实在困得坚持不住，不妨睡个午觉，不要有什么顾虑。</li><li>如果早就决定要睡午觉，那么应该在午睡前的这段时间内抓紧学习。</li></ul></blockquote><h2 id="第-5-章-模糊的大脑"><a href="#第-5-章-模糊的大脑" class="headerlink" title="第 5 章 模糊的大脑"></a>第 5 章 模糊的大脑</h2><blockquote><p>人类的神经元通过神经纤维形成回路，但各个神经纤维之间并没有物理性接触。与电路不同，神经回路并不是一个紧密相连的整体，纤维和纤维之间存在着微小的间隙。</p></blockquote><blockquote><p>对某项体育运动和某种乐器的学习也是如此，在学习新事物时一定要循序渐进。如果让一个从来没踢过足球的人从倒钩球开始学习，恐怕他需要花费很长时间才能学会。不，说不定他会在练习中受伤，球技在几个月内都没有任何进步。大家一定要准确地把握自己的学习实力，逐步克服自己的弱点。</p></blockquote><blockquote><p>英国历史学家卡莱尔曾经这样说道：“最重要的就是不要去看远方模糊的目标，而是要做手边最具体的事情。”</p></blockquote><blockquote><p>“明白”是一种什么样的状态呢？“明白”换言之就是“能区分”。所以，与其有闲工夫叹息“我不明白、我真的不明白啊”，还不如对知识进行“区分”，回顾自己的学习过程，直至找到自己能理解的地方，然后再从那里重新开始学习。</p></blockquote><blockquote><p>“干劲儿”是由人脑中的伏隔核等部位产生的。伏隔核的位置接近人脑中心，它的尺寸非常小，直径甚至不到 1 厘米，但它的性质却比较复杂。要想让伏隔核活跃起来，就必须给予其一定程度的刺激，否则伏隔核是运转不起来的。</p></blockquote><blockquote><p>这种现象被德国精神病学家埃米尔·克雷佩林（Emil Kraepelin）称为“行动兴奋”。一旦开始行动，状态就会渐入佳境，注意力也能集中了——这就是行动兴奋。唤醒伏隔核需要一定时间，所以不管怎么样，先坐到书桌前不间断地学习十分钟再说，这种态度是非常重要的。</p></blockquote><blockquote><p>顺便说一下，有人认为砂糖会使人发胖，其实未必如此。发胖的原因并不一定在于高卡路里，很多时候也许是因为脂肪的摄取量超标。即使正在减肥，我们也可以适量吃点砂糖。</p></blockquote><blockquote><p>平常考试开始后约 30 分钟时，人会开始无法集中注意力。假如这时“结尾努力”能发挥作用，那么就能让我们再次集中注意力。</p></blockquote><blockquote><p>我们并不是因为拥有优秀的脑才能区分出各种绘画风格和投球类型间的细微差别的，而是需要付出努力、接受相应训练才能做到。按照从大到小的顺序，经过有序的训练，任何人都可以辨别出细微的差别。</p></blockquote><blockquote><p>19 世纪的英国政治家迪斯雷利曾这样说：“拥有开阔视野的人，小的失败对他构不成威胁。”如果想让有意义的记忆尽可能长时间地保存在头脑中，大家的目光就不能只局限于眼前的考试，而要以长远的目光制订符合自身情况的长期计划，然后依照长期计划去学习。</p></blockquote><blockquote><p>BGM 的效果因人而异。一般来说，BGM 对喜欢音乐的人能起到积极的作用，但是对音乐的狂热爱好者却会起反作用，而对于那些不关心音乐的人来说，BGM 基本不起任何作用。</p></blockquote><h2 id="第-6-章-天才的记忆机制"><a href="#第-6-章-天才的记忆机制" class="headerlink" title="第 6 章 天才的记忆机制"></a>第 6 章 天才的记忆机制</h2><blockquote><p>我们将那些能轻易回想起来，也就是与自己过去的经验相关的记忆称为“经验记忆”；与此相对，那些缺少契机就难以回想起来的知识或信息类的记忆，我们称之为“知识记忆”。</p></blockquote><blockquote><p>恋爱情感是通过 A10 和前额叶皮质的联动作用产生的。一旦发生联动作用，人脑就会逐渐被恋爱对象占据，除了喜欢的人以外，其他事物都会被脑排除，就连在学校里学习的知识也不例外。</p></blockquote><blockquote><p>“回忆”这种行为就像是住在“知识城市”里的人想去拜访朋友（想要想起来的知识），交通越发达，到达朋友家的方式就越多。也就是说，回忆会变得比较容易。</p></blockquote><blockquote><p>知识记忆和经验记忆的区别就在于此，这也类似于穷乡僻壤和大城市间的差异。偏远地区交通不发达，即使有路也不好走，所以很难到达目的地。这也正是知识记忆不容易被人想起来的原因之一。<br>经验记忆是由很多记忆组合而成的（细致稠密的道路网）。即便是像“今天早上吃了煎蛋”这样简单的经验记忆，也是由“煎蛋的味道、气味、颜色，吃煎蛋时餐桌的摆设、坐在椅子上的感觉，一家人围着餐桌吃饭时谈话的内容”等众多难以逐一解析的元素交织而成的，“信息大城市”的关联程度更可想而知。因此，我们很容易想起经验记忆也是理所当然的。</p></blockquote><blockquote><p>即使是我们特别喜欢的电视游戏，一旦被编入学校的课程且每周都安排考试，恐怕大家都恨不得马上扔掉游戏机吧。其实，无论学习什么内容都一样，问题不在于数学本身，“被强制学习”才是关键所在。</p></blockquote><blockquote><p>*你想记住哪些信息，就把哪些信息讲给自己的朋友或者家人听——这就是形成经验记忆的最简单的方法。一旦输出了自己已经记住的信息，各方面的关键词就会关联起来，记忆也能因此实现精致化 **</p></blockquote><blockquote><p>实际上，脑是不会感到疲劳的。如果大家在学习的时候感到疲劳了，那么恐怕不是因为脑，而是因为眼睛或肩膀等身体部位感到疲劳了。<br>为什么这么说呢？人脑的机制决定了它即使不分昼夜地一直工作也不会筋疲力尽。这是理所当然的，因为人脑一旦休息了，就连我们的呼吸也会跟着停止。脑非常坚韧，即使一生不停地工作也不会感到疲惫，它原本就是被大自然这样设计出来的。因此，大家也不要有所顾虑了，让我们不断地刺激它吧。</p></blockquote><blockquote><p>知识记忆和经验记忆可以用“What is”来说明，相对地，方法记忆则可以说是关于“How to”的记忆。</p></blockquote><blockquote><p>这三兄弟的地位并不平等，它们有上下等级之分。<br>如下页图所示，最下面的一层是方法记忆，中间的一层是知识记忆，最上面的一层是经验记忆，我称之为“记忆三兄弟的金字塔结构”。层级越靠下，记忆就越原始，其对于生命存续的意义也就越重要。而越靠上的层级就越是得到了高度发展并具有丰富内容的记忆。</p></blockquote><blockquote><p>这一结构也同样适用于动物的演化过程。在演化方面，越是古老的原始动物，它们的方法记忆（三兄弟中的老大）就越发达；相反，越是高等动物，其位于上层的记忆就越发达。毋庸置疑，人类与其他动物相比，自然是位于金字塔顶端的经验记忆的能力比较高，甚至有些研究人员认为只有人类才拥有“经验记忆”5。</p></blockquote><blockquote><p>比如现在的小学，老师会在孩子们 10 岁之前教他们九九乘法表，目的就在于充分调动孩子们发达的知识记忆，让他们牢记这些基础知识。这个年龄段的孩子虽然理解不了比较难的逻辑，但是在文字的排列、绘画以及音乐方面往往能够发挥出超强的记忆能力，比如小学生记忆动漫人物和游戏角色的能力就着实令人惊叹。这种能力会在迎来第二性征发育期的初高中时期衰退，而脑也会逐渐开始重视经验记忆。</p></blockquote><blockquote><p>“自由”这个词，只要运用于社会之中，就同时也意味着“责任”。不理解其约束的人，恐怕连歌颂自由的自由都得不到。</p></blockquote><h1 id="苦才是人生"><a href="#苦才是人生" class="headerlink" title="苦才是人生"></a><a href="https://book.douban.com/subject/10801462/">苦才是人生</a></h1><p>这本书放在书架里很久，终于有时间时间开始读。之前了解到这本书是因为是当时的畅销书，且生活上遇到了一些问题期望寻求开解，这本书也被大狗熊老师推荐过。<br>抛开佛教主旨，这本书仍然是一本不错的通俗读物。我了解到梁文道老师等一些名人皈依了佛教，家里人都是虔诚的佛教徒，于是阅读这本书不会有抵触感，但是确实是第一次接触这类读物。</p><h3 id="追求错了，当然痛苦"><a href="#追求错了，当然痛苦" class="headerlink" title="追求错了，当然痛苦"></a>追求错了，当然痛苦</h3><blockquote><p>“人的奇怪之处真是太多了：急于成长，然后又哀叹失去的童年；以健康换取金钱，不久后又用金钱恢复健康；活着时认为死离自己很远，临死前又仿佛从未活够；明明对未来焦虑不已，却又无视眼下的幸福。”</p></blockquote><h3 id="有一种感动叫守口如瓶"><a href="#有一种感动叫守口如瓶" class="headerlink" title="有一种感动叫守口如瓶"></a>有一种感动叫守口如瓶</h3><blockquote><p>一、“隐秘自己之功德”。自己纵然具有很多功德，也不能在别人面前夸夸其谈，炫耀自己如何了不起。倘若自己宣说自己的功德，多半是我慢的一种显现，别人不一定对你生信心，反而会有各种各样的想法。</p></blockquote><blockquote><p>二、“隐秘他人之过失”。我们有时看不惯别人，是因为自身修行不够。其实，别人说我们的过失，我们可能闷闷不乐，当面说了不高兴，背后说了也不高兴，两三天都不想吃饭。那么推己及人，自己又为何爱说别人的过失呢？</p></blockquote><blockquote><p>三、“隐秘未来之计划”。计划还没有实现之前，就四处宣扬的话，很容易遇到违缘，半途夭折。世间一切本是无常，所以，做事若没有十拿九稳的把握，最好先不要到处说。</p></blockquote><h3 id="为别人着想，是最大的利己"><a href="#为别人着想，是最大的利己" class="headerlink" title="为别人着想，是最大的利己"></a>为别人着想，是最大的利己</h3><blockquote><p>人格不好的人，在任何地方都惹是生非，就算坐车去往某地，一路上也会跟好多人吵架。这样的人离开之后，大家都觉得很舒服，好像祛除了眼翳一样，得吃顿饭庆祝庆祝。</p></blockquote><blockquote><p>不管你是做什么的，如果始终想着自己，别人不一定看得上你，但若尽心尽力地帮助别人，大家就会对你另眼相看。所以，一个人若想自己得利益，就要先为别人着想。</p></blockquote><h3 id="对朋友要看在眼里，放在心里"><a href="#对朋友要看在眼里，放在心里" class="headerlink" title="对朋友要看在眼里，放在心里"></a>对朋友要看在眼里，放在心里</h3><blockquote><p>交友应寻找情义深长、稳重可靠之人。有些人今天对这个好，明天对那个好，跟谁都只有三分钟热情，这种说变就变的人，往往不可深交。</p></blockquote><h3 id="宁与君子结怨，不与小人为友"><a href="#宁与君子结怨，不与小人为友" class="headerlink" title="宁与君子结怨，不与小人为友"></a>宁与君子结怨，不与小人为友</h3><blockquote><p>日常生活中，我们宁与君子结怨仇，也莫与小人结亲友。因为，即使与正直的君子结下了怨仇，但他们遇到对众生有利之事，也不会因为与你有矛盾就从中作梗，反而会尽力相助。但狡猾的小人却截然相反，且不说与其结怨会遭报复，就算与之结为亲友，也无法避免他们的暗算。</p></blockquote><h3 id="“愚者学问常宣扬，穷人财富喜炫耀”"><a href="#“愚者学问常宣扬，穷人财富喜炫耀”" class="headerlink" title="“愚者学问常宣扬，穷人财富喜炫耀”"></a>“愚者学问常宣扬，穷人财富喜炫耀”</h3><blockquote><p>不过，愚者生来喜欢卖弄，有一点财富或学问，都要尽数抖搂出来，恨不得在家门口挂牌，广而告之“我家有银三百两”；少有功德之人，也将奖章佩戴于胸前，好让世人知晓“我是立过功的”；有些研究学问的人，有“一斤”智慧，偏自诩有“两斤半”，可到了真正要运用时，却里里外外遍寻不得。</p></blockquote><h3 id="不知道就说不知道"><a href="#不知道就说不知道" class="headerlink" title="不知道就说不知道"></a>不知道就说不知道</h3><blockquote><p>这种坦言“不知道”，不但无损于他的科学家形象，反而更凸显了他严谨的治学态度，不禁令人肃然起敬。</p></blockquote><h3 id="什么都想要，会累死你"><a href="#什么都想要，会累死你" class="headerlink" title="什么都想要，会累死你"></a>什么都想要，会累死你</h3><blockquote><p>生活的轻松快乐，要从充实内心做起，而不是盲目地攀比、追求。大千世界，万种诱惑，什么都想要，会累死你。该放就放，才会快乐一生。</p></blockquote><h3 id="感谢无常，让我们少受折磨"><a href="#感谢无常，让我们少受折磨" class="headerlink" title="感谢无常，让我们少受折磨"></a>感谢无常，让我们少受折磨</h3><blockquote><p>当你明白名利的无常，一旦失去就不会觉得天崩地裂；当你懂得感情的无常，遇到变故也不会寻死觅活；当你懂得生命的无常，亲人去世也可以坦然面对。</p></blockquote><h3 id="八风吹不动"><a href="#八风吹不动" class="headerlink" title="八风吹不动"></a>八风吹不动</h3><blockquote><p>如今很多人，喜欢口口声声说：“一切得失都不存在。”但实际上，他平时的所作所为，完全是为了“得”而奔波、害怕“失”而操劳，有各种各样的得失和犹豫。</p></blockquote><h3 id="说话算数"><a href="#说话算数" class="headerlink" title="说话算数"></a>说话算数</h3><blockquote><p>极度欢喜的时候，不要许诺给别人东西；极度愤怒的时候，不要回复别人的书信。</p></blockquote><blockquote><p>先承诺再观察，是愚者的举动；先观察再承诺，才是智者的行为。如《量理宝藏论》云：“先许后察愚者举，先察后许智者轨。”</p></blockquote><h3 id="哪些“闲事”必须管"><a href="#哪些“闲事”必须管" class="headerlink" title="哪些“闲事”必须管"></a>哪些“闲事”必须管</h3><blockquote><p>真正的随缘，并非什么都不做，一味地等着老天安排，而是要全心全力地付出，对结果如何却不太在意。所以，随缘是一种洞彻万法的智慧，而不是一种消极逃避的心态。</p></blockquote><h3 id="生老病死不过才一个轮回"><a href="#生老病死不过才一个轮回" class="headerlink" title="生老病死不过才一个轮回"></a>生老病死不过才一个轮回</h3><blockquote><p>诸人羡慕得长寿，又复恐惧成衰老，畏惧衰老望长寿，此乃愚者之邪念。”一味地渴望长寿、畏惧衰老，这是愚人的邪念。</p></blockquote><h2 id="第八章-为什么我们的日子过得那么难"><a href="#第八章-为什么我们的日子过得那么难" class="headerlink" title="第八章 为什么我们的日子过得那么难"></a>第八章 为什么我们的日子过得那么难</h2><h3 id="世人最大的毛病，就是没有无常观"><a href="#世人最大的毛病，就是没有无常观" class="headerlink" title="世人最大的毛病，就是没有无常观"></a>世人最大的毛病，就是没有无常观</h3><blockquote><p>急急忙忙苦追求，寒寒暖暖度春秋，<br>朝朝暮暮营家计，昧昧昏昏白了头。<br>是是非非何日了，烦烦恼恼几时休，<br>明明白白一条路，万万千千不肯修。</p></blockquote><h3 id="人80-的痛苦都与金钱息息相关"><a href="#人80-的痛苦都与金钱息息相关" class="headerlink" title="人80%的痛苦都与金钱息息相关"></a>人80%的痛苦都与金钱息息相关</h3><blockquote><p>《杂阿含经》、《善生子经》中都提到了，我们所赚的钱应该分为四份：一份用于衣食温饱；两份用于投资营利；还有一份要储蓄起来，以备不时之需。</p></blockquote><h3 id="修心是一门技术"><a href="#修心是一门技术" class="headerlink" title="修心是一门技术"></a>修心是一门技术</h3><blockquote><p>世间上的万事万物，无一不是心所生的虚幻假象，但芸芸众生信以为真，颠倒地将其执为实有，导致各种痛苦此起彼伏。</p></blockquote><h3 id="难得知足"><a href="#难得知足" class="headerlink" title="难得知足"></a>难得知足</h3><blockquote><p>对苏东坡来说，多大的福都能享，多大的罪都能受，而且不以其苦。林语堂管他叫“不可救药的乐观主义者”，这种乐观主义正是来源于知足少欲。</p></blockquote><blockquote><p>内心没有太多贪欲，才能享受到生活中的美好。过于贪恋、执著金钱，一辈子都会活得很累。</p></blockquote><h3 id="钱越多，欲望应该越少"><a href="#钱越多，欲望应该越少" class="headerlink" title="钱越多，欲望应该越少"></a>钱越多，欲望应该越少</h3><blockquote><p>幸福的根本，并不在于你拥有了多少金钱，而在于你减轻了多少欲望。欲望少了，虽卧地上，犹为安乐；欲望多了，虽处天堂，亦不称意。</p></blockquote><h3 id="越攀比，越吃亏"><a href="#越攀比，越吃亏" class="headerlink" title="越攀比，越吃亏"></a>越攀比，越吃亏</h3><blockquote><p>《金刚经》也说：“应无所住而生其心。”就是在劝我们，人应该无所执著地活着。</p></blockquote><h3 id="布施，只会让你越来越富"><a href="#布施，只会让你越来越富" class="headerlink" title="布施，只会让你越来越富"></a>布施，只会让你越来越富</h3><blockquote><p>佛陀说“发财的因不是别的，而是布施”，这句话确实真实不虚。舍得、舍得，有舍才有得；舍不得、舍不得，不舍则不得。</p></blockquote><h2 id="附录-大欢喜——索达吉堪布开示录"><a href="#附录-大欢喜——索达吉堪布开示录" class="headerlink" title="附录 大欢喜——索达吉堪布开示录"></a>附录 大欢喜——索达吉堪布开示录</h2><blockquote><p>善待生命有几种方式：上等的，是用自己的一生为一切众生造福；中等的，为了自己而行善积德；下等的，不做损害其他众生的事，毕竟所有的生命都同等珍贵。</p></blockquote><blockquote><p>“随缘”这个词，禅宗里也经常讲，世间人也经常说，但不少人都误解了它的定义，以为随缘就是什么都不用做，只等老天来安排一切，这样的话，你就会错过许多机会。真正的随缘，是需要全心全力的付出，但对结果如何却不太在意。</p></blockquote><blockquote><p>如今很多寺院里，天天都有人拜佛，我虽不敢说所有的人都是如此，但有些人确实带有迷信色彩。为什么呢？因为他们连自己为何要拜佛都弄不清楚。</p></blockquote><blockquote><p>其实，我们应该反过来想：当这个事情成功了，都是别人的贡献；失败的时候，则是自己的过失。我们藏地就有一句著名的格言：“亏损失败自己接受，胜利利益奉献他人。”这种精神非常伟大，理应成为我们为人处世的准绳。</p></blockquote><blockquote><p>自杀的原因若追究起来，不外乎以下几种：一、不懂聚际必散，尤其在感情上缘分尽了，今天两人在一起，明天却分手了，自己就实在接受不了；二、不懂高际必堕，原来高高在上的地位一旦失去，便丧失了活下去的意义；三、不懂生际必死，自己最亲近的人若死了，或者自己得了绝症，拿到病危通知时，完全没有勇气面对；四、不懂积际必尽，辛辛苦苦积累的财富，若是某一天突然没有了，自己就开始痛不欲生。以上这林林总总的痛苦，若能明白无常四边的道理，就会全部迎刃而解。</p></blockquote><blockquote><p>我们平时在处理问题时，不但会看事情的正面，对负面也考虑得比较多。这样一来，提前若有最坏的打算，将来一旦事情真正发生了，到时也有面对的勇气和能力。</p></blockquote><h1 id="成为乔布斯"><a href="#成为乔布斯" class="headerlink" title="成为乔布斯"></a><a href="https://book.douban.com/subject/26849305/">成为乔布斯</a></h1><p>这本书自诩相较于《乔布斯传》从更多的角度描绘了乔布斯的画像，我认为从故事编排而言不如《乔布斯传》吸引人。<br>对于家庭第一、热爱工作等乔布斯的这些观点作者给予了肯定，在这本书里掺杂了一些作者的个人情感。</p><h2 id="第三章-突破与崩塌"><a href="#第三章-突破与崩塌" class="headerlink" title="第三章 突破与崩塌"></a>第三章 突破与崩塌</h2><blockquote><p>盖茨对世界最大的贡献不是微软，不是MS-DOS操作系统或Windows操作系统，不是上亿人都在使用的Office办公软件，而是他的那份声明，他率先提出软件本身是有价值的。</p></blockquote><blockquote><p>有一小部分人因为执着的热爱而选择留下，他们愿意不惜一切代价，只是为了在史蒂夫手下工作，享受高压环境里的酣畅淋漓。项目结束后，史蒂夫将46位关键成员的签名刻在了每台麦金塔机箱的内部。</p></blockquote><blockquote><p>“人才是公司运作的关键所在，编写软件、设计硬件的人才都是公司的宝贵财富。我们和竞争对手比的不是规模，而是创意和想法。我们每雇用一个人，都是在为公司的未来添砖加瓦。”</p></blockquote><blockquote><p>软件行业，一位杰出的程序员至少能顶25个普通程序员，因此我们不遗余力地要招聘世界上最优秀的程序员，在25∶1的行业里，无论优秀人才多么昂贵都是值得的。”</p></blockquote><blockquote><p>麦克尼利始终注视着窗外，发掘世界到底需要什么，史蒂夫却始终只看着镜子里的自己。</p></blockquote><h2 id="第五章-无心插柳"><a href="#第五章-无心插柳" class="headerlink" title="第五章 无心插柳"></a>第五章 无心插柳</h2><blockquote><p>提到皮克斯，人们首先想到的并不是我们的电脑或软件，而是你做的那些短片，那些短片就是皮克斯的身份与象征，如果皮克斯不再制作短片，把整个动画部门全都裁掉，那就等于告诉世界皮克斯已经完蛋了。所以他们永远都不会裁动画部门。</p></blockquote><blockquote><p>他们都成长于中产阶级家庭，相似的成长背景越来越重要，他们有了自己的孩子后，尽管财富越来越多，他们依然尽可能像普通家庭那样培养孩子。</p></blockquote><h2 id="第九章-也许他们已经疯了"><a href="#第九章-也许他们已经疯了" class="headerlink" title="第九章 也许他们已经疯了"></a>第九章 也许他们已经疯了</h2><blockquote><p>“公司是人类最神奇的发明之一，公司的架构非常强大。但即便如此，我创建公司的目的只是为了产品，而不是为了钱，我想和真正有意思、有智慧、有创造力的人才共同合作打造产品。创建公司不仅仅是为了打造一个产品，公司是才华的汇聚，是能力的体现，是文化的浸染，是观点的碰撞，是大家共同合作源源不断地打造出一个又一个伟大的产品。”才华的汇聚，能力的体现，文化的浸染，观点的碰撞，史蒂夫正在打造的苹果公司将拥有以上所有特点，苹果的产品同样如此。</p></blockquote><h2 id="第十一章-做到最好"><a href="#第十一章-做到最好" class="headerlink" title="第十一章 做到最好"></a>第十一章 做到最好</h2><blockquote><p>史蒂夫在1998年曾告诉我，苹果公司存在的唯一价值就是打造产品，如今他的公司打造的不仅仅是产品，还有全方位的用户体验。从技术开发、设计到在线和实体商店，苹果公司做的每一件事都是为了给用户创造良好的体验</p></blockquote><h2 id="第十五章-整机"><a href="#第十五章-整机" class="headerlink" title="第十五章 整机"></a>第十五章 整机</h2><blockquote><p>记得和他聊过对公司成功与否的定义，我们都同意成功与否的判断因素不是股价。那是不是销售的电脑数量呢？也不是，如果按销量来算的话， Windows显然更成功。我们得出的结论是，成功与否主要看我们是否对自己设计、打造的产品感到自豪。我们是否感到自豪呢？</p></blockquote><blockquote><p>以前，技术的发展是由军队、大企业等推动的，只有这些资金雄厚的实体才买得起先进的零部件。但现在情况变了，技术的发展是由普通消费者来推动的。</p></blockquote><h2 id="第十七章-“告诉他们我就是个混蛋”"><a href="#第十七章-“告诉他们我就是个混蛋”" class="headerlink" title="第十七章 “告诉他们我就是个混蛋”"></a>第十七章 “告诉他们我就是个混蛋”</h2><blockquote><p>第一，漂亮的财务数据；第二，别人无法轻易取代的与众不同之处；第三，持续发展，随着技术与市场的演变而不断演变，不会因为一位领袖的离开而停滞不前。</p></blockquote><h1 id="失去的三十年"><a href="#失去的三十年" class="headerlink" title="失去的三十年"></a><a href="https://book.douban.com/subject/35849016/">失去的三十年</a></h1><p>以邻为鉴，可知兴衰。泡沫经济以来的历史很值得中国人的关注。<br>在得知了安倍前首相逝世之后才接触到的这本书，以作者的观点安倍经济学并不是万金油并没有让日本走出泥潭，目前来看日本未来的经济走向还是未知数。</p><h3 id="人们并没有意识到是国民背负着重担"><a href="#人们并没有意识到是国民背负着重担" class="headerlink" title="人们并没有意识到是国民背负着重担"></a>人们并没有意识到是国民背负着重担</h3><blockquote><p>为了稳定日本的金融体系，纳税人付出了巨大的代价。也许有人会说：“事到如今，这样算也没用。”确实，即使计算了，也不能挽回这些负担。</p></blockquote><h3 id="逆时代潮流而回归日本的工厂"><a href="#逆时代潮流而回归日本的工厂" class="headerlink" title="逆时代潮流而回归日本的工厂"></a>逆时代潮流而回归日本的工厂</h3><blockquote><p>日本经济从2002年1月开始恢复并逐渐繁荣起来。这是日本在二战后最长的一次经济繁荣，持续了73个月，一直到2008年2月。</p></blockquote><blockquote><p>第二章中讲过，当时世界制造业的发展趋势是采用水平分工的生产方式，而日本企业的这种做法无疑是与世界潮流背道而驰。然而，日本企业认为这种方式是防止技术外流、优质高效的生产方式。</p></blockquote><h3 id="在硅谷感受了日本的落后"><a href="#在硅谷感受了日本的落后" class="headerlink" title="在硅谷感受了日本的落后"></a>在硅谷感受了日本的落后</h3><blockquote><p>在硅谷，我还切实感受到了美国与印度的分工协作。在临近帕罗奥多的圣何塞，有一家名叫“思科”的公司，世界上第一台路由器就是由这家公司生产的，而在这家公司附近活动的几乎都是印度人。</p></blockquote><h3 id="美国房价暴涨，丰田车大卖"><a href="#美国房价暴涨，丰田车大卖" class="headerlink" title="美国房价暴涨，丰田车大卖"></a>美国房价暴涨，丰田车大卖</h3><blockquote><p>像苹果公司这样采用水平分工生产方式的制造业、谷歌这类IT相关的新服务行业，或者金融等领域的企业，已经成为美国产业的中心。因此，汽车产业的衰退已经不是多么重大的问题了，不会撼动美国的政治。</p></blockquote><blockquote><p>假设你现在全额贷款买了一套价值10万美元的房子，如果这套房子的价格涨了一倍，同时利息下降了一半，此时你以新的价格抵押房子，获取最高限额的现金贷款，然后用这笔现金还完房贷的话，那么你手上就还会剩下10万美元的现金，而且要支付的利息还和以前一样。</p></blockquote><blockquote><p>丰田汽车卖得好，是因为车子本身的故障少，而且其经销商的服务也完善。但是也不仅仅是车的原因，日元贬值让日本车的价格更实惠，所以日本车的销量好。这一点也不容忽视。<br>此外，如果美国没有发生房地产泡沫，丰田汽车也不可能有如此大的市场。除去美国房地产泡沫的因素，很难想象丰田能实现如此惊人的利润增长。</p></blockquote><h3 id="雷曼事件后的全球范围内的货币宽松政策和欧元危机"><a href="#雷曼事件后的全球范围内的货币宽松政策和欧元危机" class="headerlink" title="雷曼事件后的全球范围内的货币宽松政策和欧元危机"></a>雷曼事件后的全球范围内的货币宽松政策和欧元危机</h3><blockquote><p>确实，即使实行量化宽松政策，也不会引起物品或服务等商品价格的通货膨胀，但是很容易引发资产泡沫。也就是说，在发达国家，商品价格的通货膨胀（流动通货膨胀）已经消失，取而代之的是资产价格的通货膨胀（存量通货膨胀）。</p></blockquote><h3 id="贸易赤字逐渐扩大"><a href="#贸易赤字逐渐扩大" class="headerlink" title="贸易赤字逐渐扩大"></a>贸易赤字逐渐扩大</h3><blockquote><p>日本拥有巨额的海外资产，这些资产带来的资产收入盈余可以维持巨额的收入收支顺差，从这个角度来看，日本就没有必要过于执着于追求贸易收支的顺差。在这一点上，日本人必须要转变想法。</p></blockquote><h3 id="欧元危机导致日元升值，日本股价下跌"><a href="#欧元危机导致日元升值，日本股价下跌" class="headerlink" title="欧元危机导致日元升值，日本股价下跌"></a>欧元危机导致日元升值，日本股价下跌</h3><blockquote><p>制造业的海外转移势必会引起很大的问题，其中最为严重的就是国内就业机会大幅减少。但是，要想解决就业机会减少的这一问题，最关键的办法并不是阻止制造业的海外转移，而是要在国内建立起新的产业。</p></blockquote><h2 id="第八章-安倍经济学和异次元货币宽松政策带来了什么"><a href="#第八章-安倍经济学和异次元货币宽松政策带来了什么" class="headerlink" title="第八章 安倍经济学和异次元货币宽松政策带来了什么"></a>第八章 安倍经济学和异次元货币宽松政策带来了什么</h2><h3 id="异次元量化宽松货币政策没能增加货币供给量"><a href="#异次元量化宽松货币政策没能增加货币供给量" class="headerlink" title="异次元量化宽松货币政策没能增加货币供给量"></a>异次元量化宽松货币政策没能增加货币供给量</h3><blockquote><p>货币供应量是指在某一个特定时间点中，货币资产的总量，而货币基数也就是所谓的基础货币。</p></blockquote><blockquote><p>货币政策也是一样的道理。如果整个经济环境健康，且市场上有资金需求，那么就可以通过货币政策来刺激投资等支出。但是，当经济不景气，市场上没有资金需求时，无论多么宽松的货币政策都不会刺激支出。</p></blockquote><h3 id="安倍经济学并没有让日本经济实现增长"><a href="#安倍经济学并没有让日本经济实现增长" class="headerlink" title="安倍经济学并没有让日本经济实现增长"></a>安倍经济学并没有让日本经济实现增长</h3><blockquote><p>日元贬值，企业利润会增长；汇率稳定，或者日元升值，企业利润就会下降。</p></blockquote><h3 id="宽松货币政策的出口在哪里"><a href="#宽松货币政策的出口在哪里" class="headerlink" title="宽松货币政策的出口在哪里"></a>宽松货币政策的出口在哪里</h3><blockquote><p>一直以来，日本的财政依靠通货紧缩和低利率压缩了利息支出，勉强维持了下来。如果利率恢复到正常的水平，仅仅是支付利息，日本财政都难以应付。</p></blockquote><h2 id="第九章-日本未来应该做的事"><a href="#第九章-日本未来应该做的事" class="headerlink" title="第九章 日本未来应该做的事"></a>第九章 日本未来应该做的事</h2><h3 id="日本面临的问题并不是“摆脱通货紧缩”"><a href="#日本面临的问题并不是“摆脱通货紧缩”" class="headerlink" title="日本面临的问题并不是“摆脱通货紧缩”"></a>日本面临的问题并不是“摆脱通货紧缩”</h3><blockquote><p>物价上涨率过低并不是真正的问题，日本的产业结构和经济体制未能适应时代的变化，才是日本经济停滞的根本原因。</p></blockquote><h3 id="必须解决劳动力不足的问题"><a href="#必须解决劳动力不足的问题" class="headerlink" title="必须解决劳动力不足的问题"></a>必须解决劳动力不足的问题</h3><blockquote><p>要想解决未来劳动力供求失衡的问题，首先应该考虑的措施就是提高老年人的劳动参与率。</p></blockquote><blockquote><p>想提高生育期女性的劳动参与率，必须有完善的育儿支援等政策。这绝非易事。</p></blockquote><blockquote><p>本国劳动力如此短缺的情况下，依然拒绝移民，显然是十分不现实的。日本政府必须从根本上改变思想。</p></blockquote><blockquote><p>仅仅指出日本“不愿意接收移民”，并不能回答一切问题。日本还必须承认移民，允许移民融入日本社会，授予他们选举权，提供社会保障服务等。这是世界性的常识。在人才方面，日本必须打开国门。</p></blockquote><blockquote><p>政府就必须必须为此考虑各种各样的应对措施和制度。对于可能出现的混乱，尽早做到周密的准备，才能防患于未然。因为接收移民是改变社会结构的重要问题，政府必须进行充分的讨论和准备。</p></blockquote><h3 id="如何应对社会保障支出的增加"><a href="#如何应对社会保障支出的增加" class="headerlink" title="如何应对社会保障支出的增加"></a>如何应对社会保障支出的增加</h3><blockquote><p>要想推进以上这些措施，就需要改变日本的社会结构，因为这些问题仅仅在社会保障的框架内是无法解决的。<br>此外，不是单纯依靠增加个人负担、降低养老金发放额来解决问题，政府还必须考虑提高系统的效率。</p></blockquote><blockquote><p>本来，执政是为了实现政策，然而在日本执政才是目标，政策只是必要的装饰。</p></blockquote><h3 id="新兴产业的出现才是解决问题的关键"><a href="#新兴产业的出现才是解决问题的关键" class="headerlink" title="新兴产业的出现才是解决问题的关键"></a>新兴产业的出现才是解决问题的关键</h3><blockquote><p>日本的制造业应该将生产部门单独分出来，委托给新兴国家的企业去做，自己专门进行产品开发、设计等核心领域。在全球水平分工的大环境中，加快推动“制造业的服务产业化”。</p></blockquote><blockquote><p>政府不应该干预产业结构调整的过程。政府应该做的是放宽限制，让市场发挥自身作用。</p></blockquote><blockquote><p>根据贝叶斯方法，在没有任何信息的情况下，对某一事件的概率判断可以用“先验概率”来表示。但是，随着事态的发展，我们会得到各种各样的信息，从而修正概率判断，此时修正后的概率被称为“后验概率”。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个月一共阅读了四本书，分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《考试脑科学》&lt;/li&gt;
&lt;li&gt;《苦才是人生》&lt;/li&gt;
&lt;li&gt;《成为乔布斯》&lt;/li&gt;
&lt;li&gt;《失去的三十年》&lt;br&gt;回头看读书笔记的时候又帮自己温习了一遍内容。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="读书" scheme="https://stephenfang.me/tags/%E8%AF%BB%E4%B9%A6/"/>
    
    <category term="考试脑科学" scheme="https://stephenfang.me/tags/%E8%80%83%E8%AF%95%E8%84%91%E7%A7%91%E5%AD%A6/"/>
    
    <category term="苦才是人生" scheme="https://stephenfang.me/tags/%E8%8B%A6%E6%89%8D%E6%98%AF%E4%BA%BA%E7%94%9F/"/>
    
    <category term="成为乔布斯" scheme="https://stephenfang.me/tags/%E6%88%90%E4%B8%BA%E4%B9%94%E5%B8%83%E6%96%AF/"/>
    
    <category term="失去的三十年" scheme="https://stephenfang.me/tags/%E5%A4%B1%E5%8E%BB%E7%9A%84%E4%B8%89%E5%8D%81%E5%B9%B4/"/>
    
  </entry>
  
  <entry>
    <title>WWDC22 UIKit 新变化</title>
    <link href="https://stephenfang.me/2022/07/24/WWDC22-UIKit/"/>
    <id>https://stephenfang.me/2022/07/24/WWDC22-UIKit/</id>
    <published>2022-07-24T15:15:00.000Z</published>
    <updated>2023-07-24T13:38:31.404Z</updated>
    
    <content type="html"><![CDATA[<p>最近几年的 WWDC 每年都能看到很多 SwiftUI 的新能力，但不能忽略的是 UIKit 框架的更新。</p><p>今年的 <a href="https://developer.apple.com/videos/play/wwdc2022/10068/">What’s New in UIKit Session</a> 主要包括以下几个方面</p><ul><li>生产力提升</li><li>控制增强</li><li>API 改进</li><li>UIKit 与 SwiftUI 混编</li></ul><p>我按照业务理解和适配进度的优先级，对 session 内容进行了重新排序和整理，对 <a href="https://github.com/ferhanakkan">@ferhanakkan</a> 的仓库进行了一些改动，以下为我的总结。</p><span id="more"></span><p><a href="https://github.com/iamStephenFang/WhatsNewInUIKit">https://github.com/iamStephenFang/WhatsNewInUIKit</a></p><h2 id="API-改进"><a href="#API-改进" class="headerlink" title="API 改进"></a>API 改进</h2><p>在 iOS 16 中部分 API 废弃，需要开发者进行适配，同时有一些新能力可以实现。</p><h3 id="UIDevice"><a href="#UIDevice" class="headerlink" title="UIDevice"></a>UIDevice</h3><ul><li><p>为了防止用户留下指纹， <code>UIDevice.name</code> 现在会报告模型名称而非用户自定义的设备名称。 使用自定义名称需要获得授权。</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iOS 16 之前 (e.g. &quot;My iPhone&quot;)</span></span><br><span class="line"><span class="comment">// iOS 16 (e.g. &quot;iPhone 13&quot;)</span></span><br><span class="line"><span class="built_in">UIDevice</span>().name</span><br></pre></td></tr></table></figure></li><li><p>不再支持 <code>UIDevice.orientation</code>， 应使用 <code>UIViewController</code> 相关API， 如 <code>preferredInterfaceOrientation</code> 来获取应用界面的预期呈现方向。</p>  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UIDeviceOrientation(rawValue: 0) -&gt; .unknown</span></span><br><span class="line"><span class="built_in">UIDevice</span>().orientation</span><br><span class="line"></span><br><span class="line"><span class="comment">// UIInterfaceOrientation(rawValue: 1) -&gt; .portrait (iPhone)</span></span><br><span class="line"><span class="built_in">UIViewController</span>().preferredInterfaceOrientationForPresentation</span><br></pre></td></tr></table></figure></li></ul><h3 id="UIScreen"><a href="#UIScreen" class="headerlink" title="UIScreen"></a>UIScreen</h3><p>iOS 16 为 配备了 M1 芯片的 iPad 以及 Mac 带来了 Stage Manager （台前调度）功能，作为应用开发者无需对代码进行改动即可适用该功能。</p><blockquote><p> 💡 在 iOS 13 前开发单窗口的 App，由 <code>UIApplication</code> 负责 App 状态，<code>UIApplicationDelegate</code>（<code>AppDelegate</code>）负责 App 事件和生命周期，然而这种模式不适用于开发多窗口的 iPad App 或 Mac Catalyst App。 iOS 13 引入了构建多窗口应用的 <code>UIScene</code>，并对功能职责进行了重新拆分，将 UI 相关的状态、事件和生命周期交与 <code>UIWindowScene</code> 和 <code>UIWindowSceneDelegate</code>（<code>SceneDelegate</code>）负责，<code>UISceneSession</code> 负责持久化的 UI 状态。</p></blockquote><p>如果仍在使用旧版本的 UIScreen API，有必要迁移到新的 <code>UITraitCollection</code> 和 <code>UIScene</code> API</p><p><a href="https://developer.apple.com/documentation/uikit/uiscreen/deprecated_symbols">Apple Developer Documentation</a></p><ul><li><code>UIScreen.main</code> 已废弃，需要使用<code>(UIApplication.shared.connectedScenes.first as? UIWindowScene)?.screen</code></li><li>UIScreen 生命周期通知废弃，包括 <code>didConnectNotification</code>、<code>didDisconnectNotification</code>，需要使用 <code>UIScene</code>相关方法</li></ul><h3 id="自适应大小-cell"><a href="#自适应大小-cell" class="headerlink" title="自适应大小 cell"></a>自适应大小 cell</h3><p><code>UICollectionView</code> 和 <code>UITableView</code> 的 cell 支持了自适应调整大小能力。控制自适应调整大小的是 <code>selfSizingInvalidation</code> 属性，默认开启。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UICollectionView</span> &#123;</span><br><span class="line"><span class="comment">// Default is .enabled</span></span><br><span class="line">    <span class="keyword">var</span>.selfSizingInvalidation: <span class="type">SelfSizingInvalidation</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SelfSizingInvalidation</span> : <span class="title class_">Int</span>, @<span class="title class_">unchecked</span> <span class="title class_">Sendable</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/// No updates will take place when -invalidateIntrinsicContentSize is called on a self-sizing cell or its contentView.</span></span><br><span class="line">        <span class="keyword">case</span> disabled <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/// Calling -invalidateIntrinsicContentSize on a self-sizing cell or its contentView will cause it to be resized if necessary.</span></span><br><span class="line">        <span class="keyword">case</span> enabled <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/// Calling -invalidateIntrinsicContentSize on a self-sizing cell or its contentView will cause it to be resized if necessary, and</span></span><br><span class="line">        <span class="comment">/// any Auto Layout changes within the contentView of a self-sizing cell will automatically trigger -invalidateIntrinsicContentSize.</span></span><br><span class="line">        <span class="keyword">case</span> enabledIncludingConstraints <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>若使用了 <code>UIListContentConfiguration</code> 配置cell，每当 cell 的配置发生更改时会自动执行 invalidation。</li><li>若不使用 <code>UIListContentConfiguration</code> 配置cell，可以调用 cell 的 <code>invalidateIntrinsicContentSize</code> 方法手动执行 invalidation。</li><li>若使用 Auto Layout 布局cell，可以通过设置 <code>selfSizingInvalidation</code> 属性为<code>enabledInclingConstraints</code> 来使其接收 Auto Layout 变更。即当 cell 检测到 contentView 内部的任何自动布局变化时，将自动调用 <code>invalidateIntrinsicContentSize</code> 方法。</li></ul><p>默认情况下 cell 自适应调整大小会伴随着动画，可以在 <code>invalidateIntrinsicContentSize</code> 方法外包一层 <code>performWithoutAnimation</code> 从而取消调整大小时的动画。 </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@objc</span> <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">didTapCollapseButton</span>() &#123;</span><br><span class="line">        label.text <span class="operator">=</span> <span class="type">Constants</span>.shortText</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@objc</span> <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">didTapCollapseWithoutAnimationButton</span>() &#123;</span><br><span class="line">        label.text <span class="operator">=</span> <span class="type">Constants</span>.shortText</span><br><span class="line">        <span class="type">UIView</span>.performWithoutAnimation &#123;</span><br><span class="line">            <span class="keyword">self</span>.invalidateIntrinsicContentSize()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.stephenfang.me/mweb/SelfSizing.gif" alt="SelfSizing.gif"></p><p><code>UICollectionView</code> 和 <code>UITableView</code> 将 cell 自适应大小的 invalidation 行为智能合并处理，并在最佳时间执行更新。</p><h3 id="UISheetPresentationController"><a href="#UISheetPresentationController" class="headerlink" title="UISheetPresentationController"></a>UISheetPresentationController</h3><p>在 iOS 15 上苹果推出了表单展示控件，可以通过简单的代码 present 出 <code>.medium()</code> 和 <code>.large()</code> 两种大小的底部表单。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// on iOS 15</span></span><br><span class="line"><span class="keyword">let</span> vc <span class="operator">=</span> <span class="type">UINavigationController</span>(rootViewController: <span class="type">DemoViewController</span>())</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> sheet <span class="operator">=</span> vc.sheetPresentationController &#123;</span><br><span class="line">sheet.detents <span class="operator">=</span> [.medium(), .large()]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">self</span>.present(vc, animated: <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p>用户可以通过拖拽的方式实现高度的切换，但是当时底栏不具备自定义高度的能力。</p><p><img src="http://image.stephenfang.me/mweb/UISheetPresentationController1.png" alt="UISheetPresentationController1.png"></p><p><img src="http://image.stephenfang.me/mweb/UISheetPresentationController2.png" alt="UISheetPresentationController2.png"></p><p>在 iOS 16 上苹果开放了 <code>UISheetPresentationController.Detent.Identifier</code> 提供了自定义的能力。</p><p>可以简单返回一个常量值或最大高度的百分比来控制表单高度。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MainActor</span> <span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">Detent</span> : <span class="title class_">NSObject</span> &#123;</span><br><span class="line">        <span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">func</span> <span class="title class_">medium</span>() -&gt; <span class="title class_">Self</span></span><br><span class="line">        <span class="title class_">open</span> <span class="title class_">class</span> <span class="title class_">func</span> <span class="title class_">large</span>() -&gt; <span class="title class_">Self</span></span><br><span class="line"></span><br><span class="line">        @<span class="title class_">available</span>(<span class="title class_">iOS</span> 16.0, *)</span><br><span class="line">        <span class="title class_">open</span> <span class="title class_">var</span> <span class="title class_">identifier</span>: <span class="title class_">UISheetPresentationController</span>.<span class="title class_">Detent</span>.<span class="title class_">Identifier</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a custom detent</span></span><br><span class="line">sheet.detents <span class="operator">=</span> [</span><br><span class="line">    .large(),</span><br><span class="line">    .custom &#123; context <span class="keyword">in</span></span><br><span class="line">        <span class="number">0.3</span> <span class="operator">*</span> context.maximumDetentValue</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>更标准的做法是通过自定义 identifier 定制表单展示控件的高度。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Define a custom identifier</span></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">UISheetPresentationController</span>.<span class="title class_">Detent</span>.<span class="title class_">Identifier</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> small <span class="operator">=</span> <span class="type">UISheetPresentationController</span>.<span class="type">Detent</span>.<span class="type">Identifier</span>(<span class="string">&quot;small&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Assign identifier to custom detent</span></span><br><span class="line">sheet.detents <span class="operator">=</span> [</span><br><span class="line">    .large(),</span><br><span class="line">    .custom (identifier: .small) &#123; context <span class="keyword">in</span></span><br><span class="line">        <span class="number">0.3</span> <span class="operator">*</span> context.maximumDetentValue</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Disable dimming above the custom detent</span></span><br><span class="line">sheet.largestUndimmedDetentIdentifier <span class="operator">=</span> .small</span><br></pre></td></tr></table></figure><p>在使用的过程总需要注意表单展示控件高度不包含 <code>SafeAreaInsets</code>，计算布局时需要注意。</p><p><img src="http://image.stephenfang.me/mweb/UISheetPresentationController.png" alt="UISheetPresentationController"></p><h2 id="UI-控件"><a href="#UI-控件" class="headerlink" title="UI 控件"></a>UI 控件</h2><h3 id="UIPasteControl"><a href="#UIPasteControl" class="headerlink" title="UIPasteControl"></a>UIPasteControl</h3><p>在 iOS 16 前在 app 内执行复制粘贴操作会在顶部显示banner，在 iOS 16上 banner 被 alert 所取代。仍然由系统自动提示，根据用户的选项允许剪贴板内容访问。</p><p><img src="http://image.stephenfang.me/mweb/UIPasteControl0.png" alt="UIPasteControl0"></p><p><img src="http://image.stephenfang.me/mweb/UIPasteControl1.png" alt="UIPasteControl1"></p><p>开发者可以用新加入的 <code>UIPasteControl</code> 作为粘贴控件替换这个 alert，可以在<a href="https://developer.apple.com/documentation/uikit/uipastecontrol">这里</a>找到相关文档。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fileprivate</span> <span class="keyword">lazy</span> <span class="keyword">var</span> pasteControl: <span class="type">UIPasteControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> pasteControlConfig <span class="operator">=</span> <span class="type">UIPasteControl</span>.<span class="type">Configuration</span>()</span><br><span class="line">        pasteControlConfig.baseBackgroundColor <span class="operator">=</span> .systemBlue</span><br><span class="line">        pasteControlConfig.baseForegroundColor <span class="operator">=</span> .white</span><br><span class="line">        pasteControlConfig.cornerRadius <span class="operator">=</span> <span class="number">5.0</span></span><br><span class="line">        pasteControlConfig.displayMode <span class="operator">=</span> .iconAndLabel</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> pasteControl <span class="operator">=</span> <span class="type">UIPasteControl</span>(configuration: pasteControlConfig)</span><br><span class="line">        pasteControl.target <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        <span class="keyword">return</span> pasteControl</span><br><span class="line">    &#125; ()</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: UIPasteConfigurationSupporting</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">canPaste</span>(<span class="keyword">_</span> <span class="params">itemProviders</span>: [<span class="type">NSItemProvider</span>]) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">paste</span>(<span class="params">itemProviders</span>: [<span class="type">NSItemProvider</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> itemProvider <span class="operator">=</span> itemProviders.first &#123;</span><br><span class="line">            <span class="keyword">if</span> itemProvider.canLoadObject(ofClass: <span class="type">NSString</span>.<span class="keyword">self</span>) &#123;</span><br><span class="line">                itemProvider.loadObject(ofClass: <span class="type">NSString</span>.<span class="keyword">self</span>) &#123; (text, error) <span class="keyword">in</span></span><br><span class="line">                    <span class="keyword">if</span> text <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                        <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                            <span class="keyword">self</span>.label.text <span class="operator">=</span> text <span class="keyword">as?</span> <span class="type">String</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.stephenfang.me/mweb/UIPasteControl2.png" alt="UIPasteControl2"></p><p><img src="http://image.stephenfang.me/mweb/UIPasteControl3.png" alt="UIPasteControl3"></p><p>这个适配虽然达成了必须有用户交互才能读取剪贴板的目的，但也等来了一些开发者的吐槽。</p><p><a href="https://twitter.com/cyanapps/status/1535187013611438081">https://twitter.com/cyanapps/status/1535187013611438081</a></p><h3 id="UIPageControl"><a href="#UIPageControl" class="headerlink" title="UIPageControl"></a>UIPageControl</h3><p><code>UIPageControl</code> 在 iOS 16 上得到了增强，主要包括以下两点</p><ol><li><p>可以针对不同的选中状态展示不同的图像</p> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// The preferred image for the current page indicator. Symbol images are recommended. Default is nil.</span></span><br><span class="line">    <span class="comment">/// If this value is nil, then UIPageControl will use \c preferredPageIndicatorImage (or its per-page variant) as</span></span><br><span class="line">    <span class="comment">/// the indicator image.</span></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> preferredCurrentPageIndicatorImage: <span class="type">UIImage</span>?</span><br></pre></td></tr></table></figure></li><li><p>可以设置布局方向为水平或垂直</p> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// The layout direction of the page indicators. The default value is \c UIPageControlDirectionNatural.</span></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> direction: <span class="type">UIPageControl</span>.<span class="type">Direction</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">Direction</span> : <span class="title class_">Int</span>, @<span class="title class_">unchecked</span> <span class="title class_">Sendable</span> &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/// Page indicators are laid out in the natural direction of the system locale.</span></span><br><span class="line">        <span class="comment">/// By default, this is equivalent to @c UIPageControlDirectionLeftToRight on LTR locales, and</span></span><br><span class="line">        <span class="comment">/// @c UIPageControlDirectionRightToLeft on RTL locales.</span></span><br><span class="line">        <span class="keyword">case</span> natural <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/// Page indicators are laid out from left to right.</span></span><br><span class="line">        <span class="keyword">case</span> leftToRight <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/// Page indicators are laid out from right to left.</span></span><br><span class="line">        <span class="keyword">case</span> rightToLeft <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/// Page indicators are laid out from top to bottom.</span></span><br><span class="line">        <span class="keyword">case</span> topToBottom <span class="operator">=</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/// Page indicators are laid out from bottom to top.</span></span><br><span class="line">        <span class="keyword">case</span> bottomToTop <span class="operator">=</span> <span class="number">4</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol><p>GitHub上的 <a href="https://github.com/ferhanakkan">@ferhanakkan</a> 提供了以下 Demo。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> pageControl: <span class="type">UIPageControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="variable">$0</span>.backgroundColor <span class="operator">=</span> .orange</span><br><span class="line">        <span class="variable">$0</span>.layer.cornerRadius <span class="operator">=</span> <span class="number">8</span></span><br><span class="line">        <span class="variable">$0</span>.layer.masksToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        <span class="variable">$0</span>.currentPage <span class="operator">=</span> .zero</span><br><span class="line">        <span class="variable">$0</span>.numberOfPages <span class="operator">=</span> collectionViewData.count</span><br><span class="line">        <span class="variable">$0</span>.direction <span class="operator">=</span> .leftToRight</span><br><span class="line">        <span class="variable">$0</span>.preferredIndicatorImage <span class="operator">=</span> <span class="type">UIImage</span>(systemName: <span class="string">&quot;star&quot;</span>)</span><br><span class="line">        <span class="variable">$0</span>.preferredCurrentPageIndicatorImage <span class="operator">=</span> <span class="type">UIImage</span>(systemName: <span class="string">&quot;star.fill&quot;</span>)</span><br><span class="line">        <span class="variable">$0</span>.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$0</span></span><br><span class="line">    &#125;(<span class="type">UIPageControl</span>())</span><br></pre></td></tr></table></figure><p><img src="http://image.stephenfang.me/mweb/UIPageControl.gif" alt="UIPageControl.gif"></p><h3 id="UICalendarView"><a href="#UICalendarView" class="headerlink" title="UICalendarView"></a>UICalendarView</h3><p>之前一直希望 iOS 能够集成一个类似 <a href="https://github.com/WenchaoD/FSCalendar">FSCalendar</a> 的日历组件，在 iOS 16上终于算是等到了。<code>UICalendarView</code> 是 <code>UIDatePicker</code> 的内联日历样式，它和 <code>UIDatePicker</code> 最主要的一个区别在于 <code>UICalendarView</code> 将日期表示为 <code>NSDateComponents</code> 而不是 <code>NSDate</code>。</p><aside>💡 `NSDateComponents` 能够更好、更精确地表示数据模型， `NSDate` 是时间点的表示。</aside><p><code>UICalendarView</code>现在作为一个独立的全功能组件形式提供，它具备了以下几种特性。</p><ul><li>支持日期单选或多选</li><li>支持在范围内框选日期和禁用个别日期</li><li>支持对标注日期进行装饰</li><li>明确由哪个 <code>NSCalendar</code> 表示</li></ul><p>接下来尝试构建一个多选日期日历。</p><ol><li>创建一个 <code>UICalendarView</code> 对象，为其设置 <code>delegate</code> 并指定其 <code>calendar</code> 属性。如果需要采用农历，更改 <code>NSCalendar</code> 的初始化即可（ <code>Calendar(identifier: .chinese)</code>）</li><li>配置多日期选择需要创建一个 <code>UICalendarSelectionMultiDate</code> 对象，并为其 <code>selectedDates</code> 属性进行赋值，再将此对象作为 <code>selectionBehavior</code> 属性传给我们创建的 <code>UICalendarView</code> 对象</li><li>通过 <code>UICalendarViewDelegate</code> 中的 <code>multidateselect: canSelectDate:</code> 方法可以控制哪些日期可以被选择，如防止日历中选中单个日期。无法选择的日期会被置灰。</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Configuring a calendar view with multi-date selection</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> calendarView <span class="operator">=</span> <span class="type">UICalendarView</span>()</span><br><span class="line">calendarView.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">calendarView.calendar <span class="operator">=</span> <span class="type">Calendar</span>(identifier: .gregorian)</span><br><span class="line">view.addSubview(calendarView)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> multiDateSelection <span class="operator">=</span> <span class="type">UICalendarSelectionMultiDate</span>(delegate: <span class="keyword">self</span>)</span><br><span class="line">multiDateSelection.selectedDates <span class="operator">=</span> myDatabase.selectedDates()</span><br><span class="line">calendarView.selectionBehavior <span class="operator">=</span> multiDateSelection</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">multiDateSelection</span>(</span><br><span class="line">    <span class="keyword">_</span> <span class="params">selection</span>: <span class="type">UICalendarSelectionMultiDate</span>,</span><br><span class="line">    <span class="params">canSelectDate</span> <span class="params">dateComponents</span>: <span class="type">DateComponents</span></span><br><span class="line">) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> myDatabase.hasAvailabilities(for: dateComponents)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>UICalendarViewDelegate</code> 提供了 <code>calendarView: decorationForDateComponents:</code> 方法对日历中的日期进行装饰。</p><ul><li>如果不需要装饰直接返回 nil 即可</li><li>可以通过简单的图像构造装饰日期</li><li>可以通过自定义视图装饰日期</li><li>自定义装饰视图不允许交互</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Configuring Decorations</span></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">calendarView</span>(</span><br><span class="line">    <span class="keyword">_</span> <span class="params">calendarView</span>: <span class="type">UICalendarView</span>, </span><br><span class="line">    <span class="params">decorationFor</span> <span class="params">dateComponents</span>: <span class="type">DateComponents</span></span><br><span class="line">) -&gt; <span class="type">UICalendarView</span>.<span class="type">Decoration</span>? &#123;</span><br><span class="line">    <span class="keyword">switch</span> myDatabase.eventType(on: dateComponents) &#123;</span><br><span class="line">    <span class="keyword">case</span> .none:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">case</span> .busy:</span><br><span class="line">        <span class="keyword">return</span> .default()</span><br><span class="line">    <span class="keyword">case</span> .travel:</span><br><span class="line">        <span class="keyword">return</span> .image(airplaneImage, color: .systemOrange)</span><br><span class="line">    <span class="keyword">case</span> .party:</span><br><span class="line">        <span class="keyword">return</span> .customView &#123;</span><br><span class="line">            <span class="type">MyPartyEmojiLabel</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.stephenfang.me/mweb/UICalendarView.png" alt="UICalendarView"></p><h2 id="导航栏提升"><a href="#导航栏提升" class="headerlink" title="导航栏提升"></a>导航栏提升</h2><h3 id="UINavigationItemStyle"><a href="#UINavigationItemStyle" class="headerlink" title="UINavigationItemStyle"></a><strong>UINavigationItemStyle</strong></h3><p>新引入了 <code>Browser</code>、<code>Editor</code> 两种导航样式，目前支持的<code>UINavigationItemStyle</code> 有以下几种</p><p><img src="http://image.stephenfang.me/mweb/UINavigationItemStyle.png" alt="UINavigationItemStyle"></p><ul><li><code>Navigator</code>：遵循传统的 push &#x2F; pop 模型，如设置app</li><li><code>Browser</code>：使用历史记录或文件夹结构导航，如 Safari、系统文件app</li><li><code>Editor</code>：导航栏中间为文件相关操作，标题则在最左边</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Adopt the editor navigation style for the navigation item.</span></span><br><span class="line">navigationItem.style <span class="operator">=</span> .editor</span><br></pre></td></tr></table></figure><h3 id="Center-Items"><a href="#Center-Items" class="headerlink" title="Center Items"></a>Center Items</h3><p>center items 是展示在导航栏中间的的控件组，能够提供对应用程序最重要功能的快速访问。</p><p><img src="http://image.stephenfang.me/mweb/CenterItems.png" alt="CenterItems"></p><p>用户可以移动、移除或添加来定制导航栏的 center items。默认不展示的 center items 出现在自定义弹出窗口中，可以通过点击更多按钮中的 Customize Toolbar 菜单访问。</p><p>为了实现这一能力，应用程序需要为导航项的<code>customizationIdentifier</code>属性提供一个字符串，UIKit 能够根据这个 identifier 自动保存和恢复用户自定义设定。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// Setting a non-nil customizationIdentifier enables customization and UIKit will automatically save &amp; restore customizations based on this identifier. The identifier must be unique within the scope of the application.</span></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> customizationIdentifier: <span class="type">String</span>?</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set a customizationIdentifier and add center item groups.</span></span><br><span class="line">navigationItem.customizationIdentifier <span class="operator">=</span> <span class="string">&quot;editorViewCustomization&quot;</span></span><br></pre></td></tr></table></figure><p>配置 center Items 需要为 <code>navigationItem.centerItemGroups</code> 属性赋值</p><ul><li>若需创建用户无法移动或移除的 item，需要调用 <code>UIBarButtonItem</code> 的实例方法 <code>createFixedGroup()</code></li><li>若需创建可调整的 <code>BarButtonItemGroup</code><ul><li>拟定 <code>customizationIdentifier</code> 作为唯一标识</li><li><code>UIBarButtonItems</code> 一次只能在一个 <code>UIBarButtonItemGroup</code> 中</li><li>将一个 bar button item添加到一个 group 中会将其从之前的任何 group 中移除</li><li><code>isInDefaultCustomization</code>属性设置默认是否出现在导航栏中</li><li><code>BarButtonItemGroup</code> 通常包含多个可以提供定制能力的 <code>UIAction</code></li></ul></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/// Create a fixed group containing this bar button item. UIBarButtonItems may only be in a single UIBarButtonItemGroup at a time, adding a bar button item to a group removes it from any previous group.</span></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">func</span> <span class="title function_">creatingFixedGroup</span>() -&gt; <span class="type">UIBarButtonItemGroup</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// Create an optional BarButtonItemGroup containing only this bar button item. UIBarButtonItems may only be in a single UIBarButtonItemGroup at a time, adding a bar button item to a group removes it from any previous group.</span></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">tvOS</span>, unavailable)</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">watchOS</span>, unavailable)</span><br><span class="line">    <span class="meta">@MainActor</span> <span class="keyword">public</span> <span class="keyword">func</span> <span class="title function_">creatingOptionalGroup</span>(<span class="params">customizationIdentifier</span>: <span class="type">String</span>, <span class="params">isInDefaultCustomization</span>: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">true</span>) -&gt; <span class="type">UIBarButtonItemGroup</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">configureCenterItemGroups</span>() &#123;</span><br><span class="line"></span><br><span class="line">navigationItem.centerItemGroups <span class="operator">=</span> [</span><br><span class="line">            <span class="type">UIBarButtonItem</span>(primaryAction: <span class="type">UIAction</span>(title: <span class="string">&quot;Sync Scrolling&quot;</span>, image: syncScrollingImage) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] action <span class="keyword">in</span></span><br><span class="line">                syncScrolling.toggle()</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> barButtonItem <span class="operator">=</span> action.sender <span class="keyword">as?</span> <span class="type">UIBarButtonItem</span> &#123;</span><br><span class="line">                    barButtonItem.image <span class="operator">=</span> syncScrollingImage</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).creatingFixedGroup(),</span><br><span class="line">            </span><br><span class="line">           <span class="type">UIBarButtonItem</span>(primaryAction: <span class="type">UIAction</span>(title: <span class="string">&quot;Add Link&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;link&quot;</span>)) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">                insertTag(.link)</span><br><span class="line">            &#125;).creatingOptionalGroup(customizationIdentifier: <span class="string">&quot;addLink&quot;</span>)</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;Insert Image&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;photo&quot;</span>), menu: <span class="type">UIMenu</span>(title: <span class="string">&quot;Insert Image&quot;</span>, children: [</span><br><span class="line">                <span class="type">UIAction</span>(title: <span class="string">&quot;From Photo Library&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;photo.on.rectangle&quot;</span>)) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">                    <span class="keyword">let</span> picker <span class="operator">=</span> <span class="type">UIImagePickerController</span>()</span><br><span class="line">                    picker.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">                    present(picker, animated: <span class="literal">true</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="type">UIAction</span>(title: <span class="string">&quot;From File&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;folder&quot;</span>)) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">                    <span class="keyword">let</span> picker <span class="operator">=</span> <span class="type">UIDocumentPickerViewController</span>(forOpeningContentTypes: [.image], asCopy: <span class="literal">true</span>)</span><br><span class="line">                    picker.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">                    isPickingImageFromFile <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                    present(picker, animated: <span class="literal">true</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="type">UIAction</span>(title: <span class="string">&quot;Blank Image Tag&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;tag&quot;</span>)) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">                    insertTag(.image)</span><br><span class="line">                &#125;</span><br><span class="line">            ])).creatingOptionalGroup(customizationIdentifier: <span class="string">&quot;addImage&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>center items 针对 Mac Catalyst 的 NSToolbar 和 iPad 并排模式能够实现自动适配。</p><p><img src="http://image.stephenfang.me/mweb/NSToolbar.png" alt="NSToolbar"></p><p><img src="http://image.stephenfang.me/mweb/iPadSide.png" alt="iPadSide"></p><h3 id="文件菜单"><a href="#文件菜单" class="headerlink" title="文件菜单"></a>文件菜单</h3><p>当用户点击导航项目的标题时会出现文件菜单，从上到下可以将其拆分成三部分</p><ol><li>Document header：包含文件名、文件类型、文件大小、分享菜单等</li><li>Suggested  title menu：与当前文档相关的建议操作</li><li>Custom title menu：自定义操作</li></ol><p><img src="http://image.stephenfang.me/mweb/TitleMenu.png" alt="TitleMenu"></p><p><strong>Document header</strong></p><p>Document header 显示当前文档相关的信息，包括标题、文件类型和大小，还提供了分享或拖放文档的能力。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="meta">@MainActor</span> <span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">UIDocumentProperties</span> : <span class="title class_">NSObject</span> &#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// When initializing with a url, UIKit will automatically lookup metadata based on the data at that url.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">init</span>(<span class="params">url</span>: <span class="type">URL</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// Initialize with metadata directly when the item is not backed by a url.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">init</span>(<span class="params">metadata</span>: <span class="type">LPLinkMetadata</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// The metadata to use. UIKit will generate this automatically if a url is given at initialization time.</span></span><br><span class="line">    <span class="keyword">@NSCopying</span> <span class="keyword">open</span> <span class="keyword">var</span> metadata: <span class="type">LPLinkMetadata</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// To support drag &amp; drop, assign a closure to return an array of drag items corresponding to the represented document.</span></span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> dragItemsProvider: ((<span class="type">UIDragSession</span>) -&gt; [<span class="type">UIDragItem</span>])<span class="operator">?</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// To support sharing, assign a closure to return a UIActivityViewController configured to share the represented document.</span></span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> activityViewControllerProvider: (() -&gt; <span class="type">UIActivityViewController</span>)<span class="operator">?</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// If enabled, shows an icon representation of the document in the navigation bar.</span></span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> wantsIconRepresentation: <span class="type">Bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要Document header相关能力<strong>，</strong>使用<code>UIDocumentProperties</code> 对象给<code>navigationItem.documentProperties</code>属性赋值即可。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> documentProperties <span class="operator">=</span> <span class="type">UIDocumentProperties</span>(url: document.fileURL)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> itemProvider <span class="operator">=</span> <span class="type">NSItemProvider</span>(contentsOf: document.fileURL) &#123;</span><br><span class="line">    documentProperties.dragItemsProvider <span class="operator">=</span> &#123; <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">        [<span class="type">UIDragItem</span>(itemProvider: itemProvider)]</span><br><span class="line">    &#125;</span><br><span class="line">    documentProperties.activityViewControllerProvider <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="type">UIActivityViewController</span>(activityItems: [itemProvider], applicationActivities: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">navigationItem.title <span class="operator">=</span> document.localizedName</span><br><span class="line">navigationItem.documentProperties <span class="operator">=</span> documentProperties</span><br></pre></td></tr></table></figure><p><strong>Title Menu</strong></p><p>配置 title menu 需要给 <code>navigationItem.titleMenuProvider</code> 返回菜单 closure。系统返回给closure了一组 suggested actions，包括移动和复制；应用定义了动作包括文档导出为 HTML 和 PDF。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// When non-nil, UIKit will generate suggestedActions and call this block to generate a menu that is displayed from the title.</span></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">open</span> <span class="keyword">var</span> titleMenuProvider: (([<span class="type">UIMenuElement</span>]) -&gt; <span class="type">UIMenu</span>?)<span class="operator">?</span></span><br><span class="line"></span><br><span class="line">navigationItem.titleMenuProvider <span class="operator">=</span> &#123; suggested <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">let</span> custom <span class="operator">=</span> [</span><br><span class="line">        <span class="type">UIMenu</span>(title: <span class="string">&quot;Export…&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;arrow.up.forward.square&quot;</span>), children: [</span><br><span class="line">            <span class="type">UIAction</span>(title: <span class="string">&quot;HTML&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;safari&quot;</span>)) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">                previewView.exportAsWebArchive(named: document.localizedName, presenter: <span class="keyword">self</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="type">UIAction</span>(title: <span class="string">&quot;PDF&quot;</span>, image: <span class="type">UIImage</span>(systemName: <span class="string">&quot;doc.richtext&quot;</span>)) &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">                previewView.exportAsPDF(named: document.localizedName, presenter: <span class="keyword">self</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        ])</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> <span class="type">UIMenu</span>(children: suggested <span class="operator">+</span> custom)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>UINavigationItem</code>提供了对文件重命名的支持。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">protocol</span> <span class="title class_">UINavigationItemRenameDelegate</span> : <span class="title class_">AnyObject</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// This method is called when renaming has ended. The title on the navigation item has already been changed when this method is called but</span></span><br><span class="line">    <span class="comment">/// clients can make further adjustments to it when necessary.</span></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">navigationItem</span>(<span class="keyword">_</span>: <span class="type">UINavigationItem</span>, <span class="params">didEndRenamingWith</span> <span class="params">title</span>: <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Controls whether the rename action is supported for the given navigation item. For example this method is called when the navigation bar&#x27;s</span></span><br><span class="line">    <span class="comment">/// document menu is shown to validate if the rename action should be part of that menu.</span></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">navigationItemShouldBeginRenaming</span>(<span class="keyword">_</span>: <span class="type">UINavigationItem</span>) -&gt; <span class="type">Bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Called when we begin renaming. Implementing this method allows for customizing the initial text that will show up in the text field as well as the</span></span><br><span class="line">    <span class="comment">/// selected range of that text.</span></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">navigationItem</span>(<span class="keyword">_</span>: <span class="type">UINavigationItem</span>, <span class="params">willBeginRenamingWith</span> <span class="params">suggestedTitle</span>: <span class="type">String</span>, <span class="params">selectedRange</span>: <span class="type">Range</span>&lt;<span class="type">String</span>.<span class="type">Index</span>&gt;) -&gt; (<span class="type">String</span>, <span class="type">Range</span>&lt;<span class="type">String</span>.<span class="type">Index</span>&gt;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// This method can be used to prevent renaming from happening. However there are cases (e.g. when a new navigation item is pushed on the navigation</span></span><br><span class="line">    <span class="comment">/// bar) where this method will not be called and instead navigationItem:didEndRenamingWithTitle: is called right away. Clients are therefore expected to</span></span><br><span class="line">    <span class="comment">/// handle titles in navigationItem:didEndRenamingWithTitle: for which they would return NO from navigationItem:shouldEndRenamingWithTitle:.</span></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">navigationItem</span>(<span class="keyword">_</span>: <span class="type">UINavigationItem</span>, <span class="params">shouldEndRenamingWith</span> <span class="params">title</span>: <span class="type">String</span>) -&gt; <span class="type">Bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启用该能力需要遵循<code>UINavigationItemRenameDelegate</code>，并使用 <code>navigationItem.renameDelegate</code> 绑定到 self。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navigationItem.renameDelegate <span class="operator">=</span> <span class="keyword">self</span></span><br></pre></td></tr></table></figure><h2 id="体验提升"><a href="#体验提升" class="headerlink" title="体验提升"></a>体验提升</h2><p>如果你对这部分内容感兴趣可以移步此<a href="https://developer.apple.com/wwdc22/10071">Session</a></p><h3 id="Find-and-Replace"><a href="#Find-and-Replace" class="headerlink" title="Find and Replace"></a>Find and Replace</h3><p><code>UITextView</code>、<code>WKWebView</code>、<code>PDFView</code> 都支持了系统层级的查找与替换功能。</p><p><img src="http://image.stephenfang.me/mweb/editorTextView.png" alt="editorTextView"></p><p>如果你在开发中的视图是上述 View 的子类，如<code>editorTextView</code> 是<code>UITextView</code> 的子类，启用查找和替换只需要一行代码。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">editorTextView.isFindInteractionEnabled <span class="operator">=</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="UIEditMenu"><a href="#UIEditMenu" class="headerlink" title="UIEditMenu"></a>UIEditMenu</h3><p>Edit menu 交互菜单能够针对当前展示的内容提供诸如剪切、粘贴和粘贴等编辑动作。系统会针对当前用户的交互方式提供符合交互的菜单展示形式。</p><p><img src="http://image.stephenfang.me/mweb/UIEditMenu0.png" alt="UIEditMenu0"></p><p><img src="http://image.stephenfang.me/mweb/UIEditMenu1.png" alt="UIEditMenu1"></p><ul><li>对于触摸交互，动作以 editing menu 的形式展示</li><li>对于指针的交互，动作以 context menu的形式展示</li></ul><p>标准的 UIKit 类，如 <code>UITextView</code> 或者 <code>UITextField</code>，已经预先支持了Edit Menu交互，你可以便捷地框选一个地址然后获得类似地图导航的交互菜单选项。</p><p><img src="http://image.stephenfang.me/mweb/UIEditMenu2.png" alt="UIEditMenu2.png"></p><p>在通用视图中添加 Edit menu 交互菜单</p><ol><li>创建一个 Edit menu 交互对象，并在默认 initializer 传入一个可选的 delegate。</li><li>在视图上调用 <code>addInteraction(_:)</code> 来添加交互对象</li><li>创建一个 gesture recognizer 来触发交互，并将其添加到视图中</li></ol><p>以下苹果提供的例子中创建了一个由长按触发的 Edit menu 交互菜单。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add the edit menu interaction.</span></span><br><span class="line">    editMenuInteraction <span class="operator">=</span> <span class="type">UIEditMenuInteraction</span>(delegate: <span class="keyword">self</span>)</span><br><span class="line">    interactionView.addInteraction(editMenuInteraction<span class="operator">!</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create the gesture recognizer.</span></span><br><span class="line">    <span class="keyword">let</span> longPress <span class="operator">=</span> <span class="type">UILongPressGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(didLongPress(<span class="keyword">_</span>:)))</span><br><span class="line">    longPress.allowedTouchTypes <span class="operator">=</span> [<span class="type">UITouch</span>.<span class="type">TouchType</span>.direct.rawValue <span class="keyword">as</span> <span class="type">NSNumber</span>]</span><br><span class="line">    interactionView.addGestureRecognizer(longPress)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@objc</span> <span class="keyword">func</span> <span class="title function_">didLongPress</span>(<span class="keyword">_</span> <span class="params">recognizer</span>: <span class="type">UIGestureRecognizer</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> location <span class="operator">=</span> recognizer.location(in: <span class="keyword">self</span>.view)</span><br><span class="line">    <span class="keyword">let</span> configuration <span class="operator">=</span> <span class="type">UIEditMenuConfiguration</span>(identifier: <span class="literal">nil</span>, sourcePoint: location)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> interaction <span class="operator">=</span> editMenuInteraction &#123;</span><br><span class="line">        <span class="comment">// Present the edit menu interaction.</span></span><br><span class="line">        interaction.presentEditMenu(with: configuration)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Edit menu 交互菜单包括标准编辑操作，包括剪贴、复制、删除等等，可参考<code>UIResponderStandardEditActions</code>。</li><li>可以使用 <code>UIEditMenuInteractionDelegate</code> 提供的方法向Edit menu 交互菜单添加额外项目。</li><li>对于文本视图可以使用<code>UITextViewDelegate</code>、<code>UITextFieldDelegate</code>或<code>UITextInput</code>中的方法为特定文本范围指定菜单显示的项目。</li></ul><h3 id="Sidebar"><a href="#Sidebar" class="headerlink" title="Sidebar"></a>Sidebar</h3><p>在 iOS 16 中，侧边栏会在 Slide-over（侧拉）模式下自动显示。UIKit 会管理一组私有视图。</p><p><img src="http://image.stephenfang.me/mweb/Sidebar.png" alt="Sidebar"></p><h3 id="SFSymbols"><a href="#SFSymbols" class="headerlink" title="SFSymbols"></a>SFSymbols</h3><p>SFSymbols 在 iOS 16 上支持四种 <code>renderingMode</code>，分别是 </p><ul><li>monochrome</li><li>multicolor</li><li>hierarchical</li><li>palette</li></ul><p><img src="http://image.stephenfang.me/mweb/renderingMode.png" alt="renderingMode"></p><p>在 iOS 15 及之前的版本中，默认使用 monochrome 渲染 symbol。</p><p>在 iOS 16 如果没有指定renderingMode，默认使用 hierarchical 渲染 symbol，可以通过 <code>UIImage.SymbolConfiguration.preferringMonochrome()</code> 指定渲染方式。</p><p><img src="http://image.stephenfang.me/mweb/preferringMonochrome.png" alt="preferringMonochrome"></p><p>同时增加了对可变 symbol 的支持，即支持根据从 0 到 1 的值变化映射 symbol 的变化，当然，这需要 symbol 自身支持该能力。</p><p>假设 App 使用了<code>speaker.3.wave.fill</code> 符号表示当前音量级别，在值为 0 时扬声器波纹消失表示最低音量水平，当该值增加到 1 时扬声器的波形逐渐填充完整，表示音量水平提高。</p><p><img src="http://image.stephenfang.me/mweb/variableValue.png" alt="variableValue"></p><p>使用方法也非常简单直白，通过标准的 SF Symbols API 为 UIImage 设置 <code>variableValue</code> 参数即可，甚至将该属性与 <code>renderingMode</code> 组合使用以进一步设计符号的样式。</p><p>以下为 GitHub上 <a href="https://github.com/ferhanakkan">@ferhanakkan</a> 的 Demo。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@objc</span> <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">sliderDidValueChange</span>(<span class="keyword">_</span> <span class="params">sender</span>: <span class="type">UISlider</span>) &#123;</span><br><span class="line">        imageView.image <span class="operator">=</span> <span class="type">UIImage</span>(</span><br><span class="line">            systemName: <span class="string">&quot;wifi&quot;</span>,</span><br><span class="line">            variableValue: <span class="type">Double</span>(sender.value),</span><br><span class="line">            configuration: <span class="type">UIImage</span>.<span class="type">SymbolConfiguration</span>(paletteColors: [.orange])</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.stephenfang.me/mweb/sfsymbols.gif" alt="sfsymbols.gif"></p><p>学习如何创建自定义变量符号可以观看 <a href="https://developer.apple.com/videos/play/wwdc2022/10158/">Adopt variable color in SF Symbols</a> 和 <a href="https://developer.apple.com/videos/play/wwdc2022/10157/">What’s new in SF Symbols 4</a> 这两个Session。</p><h3 id="Swift-Concurrency-and-Sendable"><a href="#Swift-Concurrency-and-Sendable" class="headerlink" title="Swift Concurrency and Sendable"></a>Swift Concurrency and Sendable</h3><p>UIKit 现在可以与 Swift Concurrency 同时使用，包括 immutable 类型，如以下的类型遵循了 Sendable</p><ul><li><code>UIImage</code></li><li><code>UIColor</code></li><li><code>UIFont</code></li><li><code>UITraitCollection</code></li></ul><p>对象可以在 MainActor 和自定义 actor 之间发送而不会收到编译器警告。</p><p>苹果提供的例子中，有一个叫做 Processor 的自定义 actor，以及一个被绑定到 MainActor 的叫做 ImageViewer 的 ViewController。在 <code>sendImageForProcessing</code> 方法中 ImageViewer 将图像发送给 Processor进行处理，目前是安全的。</p><p>因为 UIImage 是 immutable 类型， Processor 必须创建新的拷贝来执行操作。任何引用原始图像的代码都不会显示这些修改，共享状态也不会发生不安全的变化。</p><p><img src="http://image.stephenfang.me/mweb/Concurrency0.png" alt="Concurrency0"></p><p>对比一下因为 mutable 而没有遵循 Sendable 的 UIBezierPath，以前只能在文档中表示，现在可以由编译器进行检查。</p><p><img src="http://image.stephenfang.me/mweb/Concurrency1.png" alt="Concurrency1"></p><p>要了解更多关于 Sendable 和 Swift Concurrency 移步视频 <a href="https://developer.apple.com/videos/play/wwdc2022/110351/">Eliminate data races using Swift Concurrency</a> 和 <a href="https://developer.apple.com/videos/play/wwdc2022/110350/">Visualize and optimize Swift Concurrency</a>。</p><h2 id="UIKit-and-SwiftUI"><a href="#UIKit-and-SwiftUI" class="headerlink" title="UIKit and SwiftUI"></a>UIKit and SwiftUI</h2><p>过去如果想要实现将 SwiftUI 视图嵌入 UIView 视图，一般需要这么做。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">UIHostingController</span>(rootView: <span class="type">SwiftUIView</span>())</span><br><span class="line">addChild(controller)</span><br><span class="line">view.addSubview(controller.view)</span><br><span class="line">controller.didMove(toParent: <span class="keyword">self</span>)</span><br></pre></td></tr></table></figure><p>在 iOS 16上推出了 <code>UIHostingConfiguration</code> ，你可以在 <code>UICollectionView</code> 和 <code>UITableView</code> 中以 <code>contentConfiguration</code> 的方式将 SwiftUI 构建的 View 嵌入 cell。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cell.contentConfiguration <span class="operator">=</span> <span class="type">UIHostingConfiguration</span> &#123;</span><br><span class="line">    <span class="type">SwiftUIView</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>最近几年的 WWDC 中看到苹果对于 UIKit 的理解，倡导使用 configuration 的方式构建组件、菜单，一方面参照人机交互指南构建组件能够确保交互不被滥用，另一方面降低了开发者的接入成本。</p><p>作为开发者，一起尝试兼容 app 到 iOS 16，适配新的API，探索新的业务可能性吧。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.swiftjectivec.com/ios-16-notable-uikit-additions/">https://www.swiftjectivec.com/ios-16-notable-uikit-additions/</a></li><li><a href="https://blog.appcircle.io/whats-new-in-uikit-at-ios-16-wwdc22">https://blog.appcircle.io/whats-new-in-uikit-at-ios-16-wwdc22</a></li><li><a href="https://developer.apple.com/wwdc22/10068">https://developer.apple.com/wwdc22/10068</a></li><li><a href="https://juejin.cn/post/7111173753668632584">https://juejin.cn/post/7111173753668632584</a></li><li><a href="https://github.com/WenchaoD/FSCalendar">https://github.com/WenchaoD/FSCalendar</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近几年的 WWDC 每年都能看到很多 SwiftUI 的新能力，但不能忽略的是 UIKit 框架的更新。&lt;/p&gt;
&lt;p&gt;今年的 &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2022/10068/&quot;&gt;What’s New in UIKit Session&lt;/a&gt; 主要包括以下几个方面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产力提升&lt;/li&gt;
&lt;li&gt;控制增强&lt;/li&gt;
&lt;li&gt;API 改进&lt;/li&gt;
&lt;li&gt;UIKit 与 SwiftUI 混编&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我按照业务理解和适配进度的优先级，对 session 内容进行了重新排序和整理，对 &lt;a href=&quot;https://github.com/ferhanakkan&quot;&gt;@ferhanakkan&lt;/a&gt; 的仓库进行了一些改动，以下为我的总结。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://stephenfang.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="iOS" scheme="https://stephenfang.me/tags/iOS/"/>
    
    <category term="Swift" scheme="https://stephenfang.me/tags/Swift/"/>
    
    <category term="WWDC" scheme="https://stephenfang.me/tags/WWDC/"/>
    
    <category term="WWDC22" scheme="https://stephenfang.me/tags/WWDC22/"/>
    
    <category term="UIKit" scheme="https://stephenfang.me/tags/UIKit/"/>
    
  </entry>
  
  <entry>
    <title>2022年六月读书摘录</title>
    <link href="https://stephenfang.me/2022/07/15/202206ReadingList/"/>
    <id>https://stephenfang.me/2022/07/15/202206ReadingList/</id>
    <published>2022-07-15T05:10:12.000Z</published>
    <updated>2023-07-24T13:38:31.399Z</updated>
    
    <content type="html"><![CDATA[<p>继上个月分享了一些读书摘录之后这个月也没闲着，一共读了五本书。</p><ul><li>《长安的荔枝》</li><li>《失落的卫星》</li><li>《午夜降临前抵达》</li><li>《克拉拉与太阳》</li><li>《工作、消费主义和新穷人》</li></ul><span id="more"></span><h1 id="《长安的荔枝》"><a href="#《长安的荔枝》" class="headerlink" title="《长安的荔枝》"></a>《长安的荔枝》</h1><p><a href="https://movie.douban.com/subject/35651341/">长安的荔枝</a></p><p>取材于“一骑红尘妃子笑，无人知是荔枝来”，马伯庸讲故事的能力确实令人惊叹，也很是期待同名的电影作品。</p><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><blockquote><p><strong>唯有早点跟妻子和离，一别两宽，将来事发才不会累及家人。李善德可以趁这最后四个月横行一下，多捞些油水，尽量把香积贷偿清，好歹能给孤女寡妇留下一处宅子。</strong></p></blockquote><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><blockquote><p><strong>一番铜臭交易之后，心中那点“昔我往矣”的淡淡离愁，也便没了踪影，倒省了很多苦情文章。</strong></p></blockquote><blockquote><p><strong>听说百越民风彪悍，生翅者不食幞头，带腿者不食案几，余者无不可入口，果然没有夸张。</strong></p></blockquote><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><blockquote><p><strong>自己那二十多年的上林署监事，其实只窥到了朝廷的小小一角。这个坐落着诸多衙署的庞大皇城，比秦岭密林更加错综复杂，它运转的规律比道经更为玄妙。不熟悉的人贸然踏入，就像落入壶口瀑布下的奔腾乱流一样，撞得头破血流</strong></p></blockquote><blockquote><p><strong>做官之道，其实就三句话：和光同尘，好处均沾，花花轿子众人齐抬。一个人吃独食，是吃不长久的。</strong></p></blockquote><h1 id="《失落的卫星》"><a href="#《失落的卫星》" class="headerlink" title="《失落的卫星》"></a>《失落的卫星》</h1><p>看了刘子超的书才知道原来旅行文学这么有趣，并不是类似流水账之类的产物。<br>从作者文字中窥见了很多人情世故，带着我的思绪去了遥远的中亚。</p><p><a href="https://book.douban.com/subject/35025453/">失落的卫星</a></p><h2 id="序幕-大巴扎、流放者和塔季扬娜"><a href="#序幕-大巴扎、流放者和塔季扬娜" class="headerlink" title="序幕 大巴扎、流放者和塔季扬娜"></a>序幕 大巴扎、流放者和塔季扬娜</h2><blockquote><p><strong>哈萨克是俄国十月革命后才产生的概念。当时，苏联把西方的民族国家理论应用到中亚这片民族观念尚处于前现代状态的土地上。哈萨克斯坦，连同其他四个斯坦国一起，诞生于这样的背景下。</strong></p></blockquote><blockquote><p><strong>1854年，陀思妥耶夫斯基被发配至哈萨克斯坦东部的塞米伊。他刚在西伯利亚的鄂木斯克服刑四年，因此即便是这样闭塞的边疆小镇，也令他欣喜。因为他终于可以摘掉镣铐，同时获准阅读《圣经》之外的书籍。</strong></p></blockquote><blockquote><p><strong>中国的吉尔吉斯人叫作“柯尔克孜族”；李白据说生于碎叶城，就位于今天吉尔吉斯境内的托克马克。</strong></p></blockquote><h3 id="边城浮世绘"><a href="#边城浮世绘" class="headerlink" title="边城浮世绘"></a>边城浮世绘</h3><blockquote><p><strong>“对我这代吉尔吉斯人来说，苏联就像史前时代，与我们无关。”阿拜说，“从父母那里，我听过不少苏联时代的故事，但却无法激起太多共鸣。”</strong></p></blockquote><blockquote><p><strong>不过，我可以告诉你，不要抨击绿色和平，更不要抨击LGBT——这是我的女友说的。她说，阿拜，如果你想获得诺贝尔文学奖，那你就不要抨击绿色和平，更不要抨击LGBT。”<br>“她确实聪明。”</strong></p></blockquote><blockquote><p><strong>我始终觉得自己流淌着游牧民族的血液——不是草原游牧民族，而是当代游牧民族。这样的人总是不停移动，从世界的一个地方到另一个地方，缺乏归属感，家只不过是当下的落脚之处。对他们来说，旅行不是为了去任何地方，只是为了旅行。最重要的事情是移动。</strong></p></blockquote><h3 id="加加林疗养院"><a href="#加加林疗养院" class="headerlink" title="加加林疗养院"></a>加加林疗养院</h3><blockquote><p><strong>所有人的餐食都是一样的——就像那些服务员脸上的表情——具有社会主义的一致性。</strong></p></blockquote><h3 id="杜尚别复调"><a href="#杜尚别复调" class="headerlink" title="杜尚别复调"></a>杜尚别复调</h3><blockquote><p><strong>想借此赋予塔吉克人一点犹太民族在他们自己历史中找到的那种悲怆感。相比一个王朝的覆灭，文化根基的丧失更加悲惨。</strong></p></blockquote><blockquote><p><strong>让人想到后来伊拉克人民推倒萨达姆的雕像。无事可做的男人们一脸仇恨，他们举着拳头，喊着口号，仿佛在进行一场游戏，只是没人相信这场游戏会有任何严重的后果。</strong></p></blockquote><blockquote><p><strong>但我只是说，你还年轻，还没跨越那道“阴影线”——这是约瑟夫·康拉德说的，你感到烦闷、厌倦、不满、迷茫，这是生活中必将来临的那个时刻。</strong></p></blockquote><h3 id="从帕米尔公路到瓦罕山谷"><a href="#从帕米尔公路到瓦罕山谷" class="headerlink" title="从帕米尔公路到瓦罕山谷"></a>从帕米尔公路到瓦罕山谷</h3><blockquote><p><strong>说这话时，司机的表情并没有任何不满，口气中甚至还带着几分理解。警察相信，凭他们的制服，索取是名正言顺的事。司机大概也这么认为。</strong></p></blockquote><blockquote><p><strong>我想起一路上经过的那些分界线：同样的民族，同样的生活方式，被分割开来，像刀子割开的伤口。</strong></p></blockquote><h3 id="不安的山谷"><a href="#不安的山谷" class="headerlink" title="不安的山谷"></a>不安的山谷</h3><blockquote><p><strong>取消宗教、推行民族融合的苏联，宗教和族群的界限变得模糊不清，一种相对平静的关系维持了数十年。可是一旦这种体制濒临溃败，宗教势力和民族主义就会结合在一起，导致惨剧发生。</strong></p></blockquote><blockquote><p><strong>在《本地人的今与昔》一书中，纳利夫金总结了两个民族之间不太融洽的历史关系：乌兹别克人是定居民族，而吉尔吉斯人是游牧民族。乌兹别克人瞧不起吉尔吉斯人，而又惧怕他们的武力。乌兹别克人大都是农民、工匠、商人，而吉尔吉斯人喜欢在山间放牧，住在传统毡房里。他们不时劫掠乌兹别克人的马匹，只有当他们需要买东西时，才会下到乌兹别克人居住的绿洲城镇。这时，乌兹别克人就会大肆嘲笑吉尔吉斯人的愚昧无知，然后狠狠地敲他们一笔。</strong></p></blockquote><h3 id="通向撒马尔罕的金色之路"><a href="#通向撒马尔罕的金色之路" class="headerlink" title="通向撒马尔罕的金色之路"></a>通向撒马尔罕的金色之路</h3><blockquote><p><strong>中国人的丝绸和瓷器传入这里，而粟特人则将制造玻璃和酿造葡萄酒的技艺传入中国。东西方的珠宝、首饰、钱币在这里荟聚，还有用骨头精心雕刻的下棋者。</strong></p></blockquote><blockquote><p><strong>作为旅行者，我只是机械地从一个遗迹，移动到另一个遗迹，试图从每个遗迹中眺望到一点遥远时代的微暗火光。</strong></p></blockquote><p>以后每去一个博物馆都可以说成是自己在眺望<strong>遥远时代的微暗火光。</strong></p><h3 id="布哈拉的博弈与离散"><a href="#布哈拉的博弈与离散" class="headerlink" title="布哈拉的博弈与离散"></a>布哈拉的博弈与离散</h3><blockquote><p><strong>在这里，苏联纪念物是如此之多，而且便宜得惊人。谁又能想到它们曾是一代人的荣誉和骄傲？是那些人用生命加以守护的珍宝？</strong></p></blockquote><h3 id="困守咸海的人"><a href="#困守咸海的人" class="headerlink" title="困守咸海的人"></a>困守咸海的人</h3><blockquote><p><strong>咸海王讲起他的治理之道。他时常对工人们说，来到这里，只有一个目的，那就是一门心思地挣钱。他禁止工人喝酒，但也知道，私下里人人都会喝。只要不闹出事来，就应该“睁一只眼闭一只眼”。他管这叫“中国人的智慧”。</strong></p></blockquote><h3 id="突厥斯坦的小人物"><a href="#突厥斯坦的小人物" class="headerlink" title="突厥斯坦的小人物"></a>突厥斯坦的小人物</h3><blockquote><p><strong>随着阿拉伯人的征伐，造纸术由中亚传入西亚、北非和欧洲。</strong></p></blockquote><blockquote><p><strong>我留意了一下画作的时间——1954年。前一年，斯大林刚刚去世，苏联进入“解冻”时期。已经在塔拉兹待了十三年的布雷默，想必也感受到一丝春意——你甚至能在他的画笔中看到一种有意克制的轻松。</strong></p></blockquote><blockquote><p><strong>他早有准备，说不定在家排练过。那张消瘦的胡茬脸，配合抑扬顿挫的口气，外加耸动的眉骨，活脱脱地展现了一个乌兹别克人的“交易的艺术”，体现了哈萨克人心目中“萨特人”的狡黠。我一时间钦佩不已，于是没再还价，就点头同意了。</strong></p></blockquote><p>作者笔下不少地区的中亚人都有这般特点，他们的这番特点也是经济水平和历史造成的。</p><blockquote><p><strong>帖木儿是一个被高估的英雄人物。他没有为帝国创造出一个生生不息的文化，只是留下一些建筑，供人凭吊而已。一旦他的个人意志退潮，帝国也就随之烂尾。这些建筑——无论是对于宗教，还是人民——意义都非常有限。</strong></p></blockquote><h3 id="草原核爆"><a href="#草原核爆" class="headerlink" title="草原核爆"></a>草原核爆</h3><blockquote><p><strong>“你们的祖国是哪里？”“你用什么语言思考，你的祖国就是哪里。”“我们说俄语，可我们生活在哈萨克斯坦。”“我们不属于俄国，不属于哈萨克斯坦，更不属于朝鲜或韩国。”“我们是什么人？”</strong></p></blockquote><blockquote><p><strong>我沿着指引观看。每看完一部分，大妈就把那部分的照明关掉。虽说博物馆有政府补贴，也收门票，但看来还是资金紧张，不得不省钱度日。</strong></p></blockquote><blockquote><p><strong>一旦国家的意志退潮，人们就会自然地用脚投票。科学家和军人带着家眷匆匆离开，短短数月内，查干人去楼空。</strong></p></blockquote><h3 id="七河之地"><a href="#七河之地" class="headerlink" title="七河之地"></a>七河之地</h3><blockquote><p><strong>在广大的中亚乡村地带，我都目睹了类似情况：相比他们苏联出身的父母，独立后的年轻一代反而更加传统、保守。</strong></p></blockquote><h2 id="尾声-扎尔肯特：进步前哨站"><a href="#尾声-扎尔肯特：进步前哨站" class="headerlink" title="尾声 扎尔肯特：进步前哨站"></a>尾声 扎尔肯特：进步前哨站</h2><blockquote><p><strong>苏俄治下的和平促进了中亚的繁荣，但也埋下分裂的种子。独立后，中亚开始对自己的历史和未来有了新的看法，不同的思潮与想法在这片土地上反复激荡。而今天，中国的崛起将会改变这里的引力，为中亚带来不同的前景。</strong></p></blockquote><p>结尾的爱国情怀反倒是有些突然，不过经过那么多天奔波回到祖国确实会有这番情感。</p><h1 id="《午夜降临前抵达》"><a href="#《午夜降临前抵达》" class="headerlink" title="《午夜降临前抵达》"></a>《午夜降临前抵达》</h1><p>读的刘子超的第二本作品，书籍中的一句话我很是喜欢。“旅行中的相遇，就如同空中交汇的流星，短暂的火花过后，依然是两块丑陋的陨石。我们期待旅途中的相遇，但相遇也注定了分离。”</p><p><a href="https://book.douban.com/subject/35522033/">午夜降临前抵达</a></p><h3 id="第一章-疆界的消失，德累斯顿大轰炸，老布拉格的幽灵"><a href="#第一章-疆界的消失，德累斯顿大轰炸，老布拉格的幽灵" class="headerlink" title="第一章 疆界的消失，德累斯顿大轰炸，老布拉格的幽灵"></a>第一章 疆界的消失，德累斯顿大轰炸，老布拉格的幽灵</h3><blockquote><p><strong>不喜欢把每一段行程都安排得严丝合缝的旅行，没有即兴，没有随心所欲，没有突发奇想，旅行更像是一种苦行。</strong></p></blockquote><h3 id="第二章-火车情结，横穿波希米亚，死亡赋格"><a href="#第二章-火车情结，横穿波希米亚，死亡赋格" class="headerlink" title="第二章 火车情结，横穿波希米亚，死亡赋格"></a>第二章 火车情结，横穿波希米亚，死亡赋格</h3><blockquote><p><strong>伯格说：“年轻人，这世上还有哪个国家比波兰更习惯与忧伤这种情感妥协共处呢？”</strong></p></blockquote><blockquote><p><strong>我感到一切战争、屠杀、罪行总会影响到之后的每一个人，无论哪一方，只是以各自不同的方式罢了。</strong></p></blockquote><h3 id="第三章-读艺术史的女孩，塔特拉山，猎人小屋"><a href="#第三章-读艺术史的女孩，塔特拉山，猎人小屋" class="headerlink" title="第三章 读艺术史的女孩，塔特拉山，猎人小屋"></a>第三章 读艺术史的女孩，塔特拉山，猎人小屋</h3><blockquote><p><strong>除了酒吧和饭馆，其他公众场合禁止饮酒。一旦被警察发现，可能受到重罚。具体来说，惩戒的程度根据喝酒的多少而定。</strong></p></blockquote><blockquote><p><strong>山在白天是一种壮美，到了夜晚却令人心悸。那种庞大而未知的存在，不分昼夜地永恒矗立，让我感到自己的渺小和脆弱。如果山愿意，它可以轻而易举地摧毁我，而我此刻还活着，不过依赖于它的垂怜。</strong></p></blockquote><blockquote><p><strong>旅行中的相遇，就如同空中交汇的流星，短暂的火花过后，依然是两块丑陋的陨石。我们期待旅途中的相遇，但相遇也注定了分离。</strong></p></blockquote><h3 id="第四章-卫星城，沃利肖像，昨日的世界"><a href="#第四章-卫星城，沃利肖像，昨日的世界" class="headerlink" title="第四章 卫星城，沃利肖像，昨日的世界"></a>第四章 卫星城，沃利肖像，昨日的世界</h3><blockquote><p><strong>因为放弃了发掘城市秘密的野心，反而获得了一种轻松自在的心理状态：无须再去看着地图，寻找那些著名景点；也无须为了找到当地人的秘密据点而犯愁；更不用因为自己对这座城市的无知而羞愧。</strong></p></blockquote><blockquote><p><strong>在维也纳，这类具有历史意义的每一幢房屋的拆除，就像从我们身上夺取了一部分灵魂。</strong></p></blockquote><blockquote><p><strong>对于这家百年咖啡馆来说，一部好莱坞电影的意义显然算不上重大，它根本不屑把任何电影海报张贴出来。一切都尽量维持着1880年的原貌——那是哈布斯堡王朝最辉煌的时代。</strong></p></blockquote><h3 id="第五章-中国“倒爷”，骑行者俱乐部，土耳其浴室"><a href="#第五章-中国“倒爷”，骑行者俱乐部，土耳其浴室" class="headerlink" title="第五章 中国“倒爷”，骑行者俱乐部，土耳其浴室"></a>第五章 中国“倒爷”，骑行者俱乐部，土耳其浴室</h3><blockquote><p><strong>风景缺少的只是赞美。<br>——切斯瓦夫·米沃什，《风景》</strong></p></blockquote><blockquote><p><strong>一个国家的年轻人如果都以拥有“公共层面”的身份为荣，那么这个国家无疑是充满希望的。</strong></p></blockquote><blockquote><p><strong>我相信过去不曾终结，它仍然在另一个维度上运行。通过旧房子、旧书、旧照片，我们得以窥视那个维度里的吉光片羽。</strong></p></blockquote><h3 id="第六章-挥之不去的饥饿感，分裂的南斯拉夫，湖底的钟声"><a href="#第六章-挥之不去的饥饿感，分裂的南斯拉夫，湖底的钟声" class="headerlink" title="第六章 挥之不去的饥饿感，分裂的南斯拉夫，湖底的钟声"></a>第六章 挥之不去的饥饿感，分裂的南斯拉夫，湖底的钟声</h3><blockquote><p><strong>多次和日本人相遇以后，我总结出了在国外分辨他们的三种方法：一、他们把sorry念成soli；二、他们人手一本日本大宝石出版社的《走遍全球》；三、或者说是一种天赋亦可，他们总能在鸟不拉屎的地方，找到极为正宗的日本料理。</strong></p></blockquote><blockquote><p><strong>正如米兰·昆德拉所说，生长于一个小国有时候是一种优势。因为身处小国，要么做一个可怜的、眼光狭窄的人，要么成为一个广闻博识的“世界性的人”。</strong></p></blockquote><blockquote><p><strong>作为少数民族作家，他们不仅是在使用词语，他们是在运用整个存在，运用民族精神和神话，运用记忆、传统和文化来写作。对他们来说，语言就是命运——一个民族的命运。</strong></p></blockquote><h3 id="第一章-古树茶，故乡在塞尔维亚，撒旦的探戈"><a href="#第一章-古树茶，故乡在塞尔维亚，撒旦的探戈" class="headerlink" title="第一章 古树茶，故乡在塞尔维亚，撒旦的探戈"></a>第一章 古树茶，故乡在塞尔维亚，撒旦的探戈</h3><blockquote><p><strong>对于那一代匈牙利人来说，迈克尔·杰克逊代表着对美国文化的想象，甚至是对“西方”的想象。因为铁幕粗暴地把“中欧”这一概念取消了，使匈牙利、东德、捷克斯洛伐克、波兰成了与美国和西欧对立的“东欧”。</strong></p></blockquote><blockquote><p><strong>拍摄一位匈牙利裔的塞尔维亚艺术家坐通勤火车过境。每次，他都在火车过境时进入洗手间，让同一泡尿液撒在两个国家的土地上。</strong></p></blockquote><blockquote><p><strong>“在莫哈奇失去的远比现在多。”意思是说，最困难的时刻已经过去，以后再遇到的困难算得了什么？借此鼓起自己面对困难和挫折的勇气。</strong></p></blockquote><h3 id="第二章-物理老师的秘密往事，两个哑巴，赖奇克劳动营"><a href="#第二章-物理老师的秘密往事，两个哑巴，赖奇克劳动营" class="headerlink" title="第二章 物理老师的秘密往事，两个哑巴，赖奇克劳动营"></a>第二章 物理老师的秘密往事，两个哑巴，赖奇克劳动营</h3><blockquote><p><strong>相比一个没人关心政治的社会，一个人人都热衷参与政治的社会，反而更可怕——只有极权时代才会出现这样的情况。</strong></p></blockquote><blockquote><p><strong>我喜欢火车站，因为它像一幕话剧的逼真布景，也是一座城市的风情写照。悲欢离合在这里上演，也在这里结束。在火车站，旅行者可以得到关于一座城市的全部想象。</strong></p></blockquote><h3 id="第三章-布尔诺之星，异乡人，冬之旅"><a href="#第三章-布尔诺之星，异乡人，冬之旅" class="headerlink" title="第三章 布尔诺之星，异乡人，冬之旅"></a>第三章 布尔诺之星，异乡人，冬之旅</h3><blockquote><p><strong>当然，”玛丽亚笑了，“只是相处一段时间后发现，那种建立在共同生活基础上的固定关系并不是我想要的。”</strong></p></blockquote><h3 id="第四章-弗罗茨瓦夫与平行世界，叶子和臭鼬，一场风暴的结语"><a href="#第四章-弗罗茨瓦夫与平行世界，叶子和臭鼬，一场风暴的结语" class="headerlink" title="第四章 弗罗茨瓦夫与平行世界，叶子和臭鼬，一场风暴的结语"></a>第四章 弗罗茨瓦夫与平行世界，叶子和臭鼬，一场风暴的结语</h3><blockquote><p><strong>在旅游已经相当普遍的今天，“游客”（tourist）似乎已经变成一个格调不高的概念，暗含着浅薄、低俗之意。逼格更高的说法是“旅行者”（traveler）。因为“travel”一词，来自古老的拉丁语，与宗教朝圣中的苦行和精神升华有关。在古代，旅行的最初形态和唯一目的就是朝圣。</strong></p></blockquote><blockquote><p><strong>政治和文学在语言和精神上迥然不同：“对我有益的对他们有害，适合他们的我却觉得难以消受。我们是两种泾渭分明的风格。”</strong></p></blockquote><h3 id="第五章-“舒伯特”号列车，帝国的切片，萨尔茨堡的雨"><a href="#第五章-“舒伯特”号列车，帝国的切片，萨尔茨堡的雨" class="headerlink" title="第五章 “舒伯特”号列车，帝国的切片，萨尔茨堡的雨"></a>第五章 “舒伯特”号列车，帝国的切片，萨尔茨堡的雨</h3><blockquote><p><strong>大部分时间，我面对的是近乎荒凉的风景。如果说开车是一种思考形式，那么它更接近冥想，不要求思想过于集中，而是鼓励思绪自由飘荡</strong></p></blockquote><h3 id="第六章-流亡之地，黄金时代，最后的游荡"><a href="#第六章-流亡之地，黄金时代，最后的游荡" class="headerlink" title="第六章 流亡之地，黄金时代，最后的游荡"></a>第六章 流亡之地，黄金时代，最后的游荡</h3><blockquote><p><strong>以至于我感到这些游荡在码头的人全都有一种审美上的自觉——他们出现在这里，并非有任何事情要做，而仅仅是出于美学的需要。</strong></p></blockquote><blockquote><p><strong>工人和穷文人热爱的咖啡馆，已经中产阶级化。如果乔伊斯不幸晚生一百年，他很可能无力负担这里的消费。</strong></p></blockquote><blockquote><p><strong>这个世界大概本就没有“黄金时代”。尤其是对于作家和艺术家，生活和伟大的作品之间，总存在某种“古老的敌意”。所谓“黄金时代”，只是胜利者事后的“怀乡”，只是对过去浪漫主义的怀想，只是一片树叶或者一粒止痛片，</strong></p></blockquote><blockquote><p><strong>而我出生在一个巨变中的国度，成长阶段所熟悉的一切都已物是人非。我不得不接受或大或小的变迁，并且乐于像幽灵一样在废墟间游荡。这片广袤的欧洲腹地——这本书写到的所有地方，为我这样的幽灵提供了游荡之所。我不时唏嘘于它们的变化，同时也试图发现那些被时光留下的永恒之物。</strong></p></blockquote><h3 id="后记-在旅行和写作中确认自我"><a href="#后记-在旅行和写作中确认自我" class="headerlink" title="后记 在旅行和写作中确认自我"></a>后记 在旅行和写作中确认自我</h3><blockquote><p><strong>目的地旅行、阅读、寻找素材、日复一日地写作。它也教会了我对作家来说更重要的品质：保持耐心、享受孤独。</strong></p></blockquote><h1 id="《克拉拉与太阳》"><a href="#《克拉拉与太阳》" class="headerlink" title="《克拉拉与太阳》"></a>《克拉拉与太阳》</h1><p><a href="https://book.douban.com/subject/35315153/">克拉拉与太阳</a></p><p>因为豆瓣畅销书的光环就挑出时间看了，随着年岁增长我越来越不愿意读这些文学意义上的小说了。<br>这本书讲的确实是一个很与时俱进且新奇的故事，看完之后我也不禁思考人和所谓的人工智能的机器人在意识上区别究竟是什么。</p><h2 id="第四部"><a href="#第四部" class="headerlink" title="第四部"></a>第四部</h2><blockquote><p><strong>古往今来，一个世纪又一个世纪，人们彼此陪伴，共同生活，爱着彼此，恨着彼此，却全都是基于一个错误的假设。一种我们过去在懵懵懂懂之中一直固守的迷信。</strong></p></blockquote><h2 id="译后记"><a href="#译后记" class="headerlink" title="译后记"></a>译后记</h2><blockquote><p><strong>正是由于自私的欲望与升华的渴望并存，人类的心中才会充满了矛盾、彷徨与痛苦；没有了自私那下坠的重力，一切崇高、向上的人性也就虚无缥缈得失去了分量。自私是人类沉重的负担，但也许在并不遥远的未来，也会是人之所以为人的一个最重要的锚点吧。</strong></p></blockquote><h1 id="《工作、消费主义和新穷人》"><a href="#《工作、消费主义和新穷人》" class="headerlink" title="《工作、消费主义和新穷人》"></a>《工作、消费主义和新穷人》</h1><p>在哔哩哔哩看到了对于这本书内容的分析，你可以直接批判它就是典型的白左思想书籍，但这本书还是很值得一读。</p><p><a href="https://book.douban.com/subject/35593780/">工作、消费主义和新穷人</a></p><h3 id="要么工作，要么死亡"><a href="#要么工作，要么死亡" class="headerlink" title="要么工作，要么死亡"></a>要么工作，要么死亡</h3><blockquote><p><strong>在“大量减少”穷人的过程中，工作伦理的贡献是无价的。毕竟，工作伦理主张：无论生活多么悲惨，只要它是由劳动报酬支撑的，就具有道德优越性。</strong></p></blockquote><h3 id="制造生产者"><a href="#制造生产者" class="headerlink" title="制造生产者"></a>制造生产者</h3><blockquote><p><strong>除了那些由于世袭或暴富，可以自给自足悠然生活的人以外，“你是谁”这个问题的答案通常指向人们所在的公司以及该公司的能力。</strong></p></blockquote><h3 id="从“更好”到“更多”"><a href="#从“更好”到“更多”" class="headerlink" title="从“更好”到“更多”"></a>从“更好”到“更多”</h3><blockquote><p><strong>工作伦理的宣讲力度与潜在劳动者因失去自由产生的抵制情绪成正比。宣讲的目的在于消除抵制。工作伦理是一种工具，目的是使工人们丧失独立性，服从于工厂制度。</strong></p></blockquote><blockquote><p><strong>大多数美国社会历史学家都认为，推动美国工业前进的是企业精神和跻身上层阶级的愿望，而非工作伦理。</strong></p></blockquote><blockquote><p><strong>工业社会是以权力冲突拉开序幕，那时的人们为自治和自由而斗争。时过境迁，现在他们只会为了获取更多盈余而斗争。人们默默接受了现存的权力结构，对这种结构的修正被排除在议程之外。越来越多的人认为，从工匠变成工人时失去的人的尊严，只有通过赢得更多盈余才能恢复。这种变迁中，努力工作能使人们道德升华的呼声日益衰弱。现在，衡量人们声望和社会地位的是工资的差别，而不是勤于工作的道德或惰于工作的罪恶。</strong></p></blockquote><h3 id="第二章-从工作伦理到消费美学"><a href="#第二章-从工作伦理到消费美学" class="headerlink" title="第二章 从工作伦理到消费美学"></a>第二章 从工作伦理到消费美学</h3><blockquote><p><strong>之所以称之为“生产者社会”，是因为那时人们主要以生产者的身份参与其中。社会塑造其成员的方式由社会分工的需要决定，社会希望其成员有能力和意愿参与社会分工。在当前这个近现代（late-morden）、次现代（second-morden）或后现代（postmorden）阶段，社会主要要求人们以消费者的能力参与其中，首先依照“消费者”角色需要塑造其成员，并期望他们具有消费的能力和意愿。</strong></p></blockquote><blockquote><p><strong>想要提高消费者的消费能力就不能让他们休息。他们需要不断地接受新的诱惑，持续处于永不枯竭的兴奋之中，持续处于怀疑和不满之中。诱使他们转移注意力的诱饵需要肯定这种怀疑，同时提供一个宣泄的出口：“你以为这就是全部？好戏还在后头呢！</strong></p></blockquote><blockquote><p><strong>正常运转的消费者社会中，消费者会主动寻求被诱惑。他们的生活从吸引到吸引，从诱惑到诱惑，从吞下一个诱饵到寻找另一个诱饵，每一个新的吸引、诱惑和诱饵都不尽相同，似乎比之前的更加诱人。他们生活于这种轮回，就像他们的先辈，那些生产者，生活于一个传送带和下一个传送带之间。</strong></p></blockquote><h3 id="制造消费者"><a href="#制造消费者" class="headerlink" title="制造消费者"></a>制造消费者</h3><blockquote><p><strong>消费者社会中，与其说经济增长取决于“国家生产力”（即健康充裕的劳动力、充实的财政收入、勇往直前具有企业家精神的资本所有者和经营者），不如说取决于消费者的热情和活力。</strong></p></blockquote><blockquote><p><strong>今天流行的口号是“灵活”，这个越来越时髦的概念代表的是一场几乎没有任何规则的雇佣和解雇游戏，而且在游戏进行时，单方面就可以随时更改规则。</strong></p></blockquote><h3 id="消费者社会的穷人"><a href="#消费者社会的穷人" class="headerlink" title="消费者社会的穷人"></a>消费者社会的穷人</h3><blockquote><p><strong>杰里米·希布鲁克（Jeremy Seabrook）曾提醒过他的读者，当今社会依赖于“制造人为的、主观的不满足感”，因为本质上“人们满足于自己拥有的东西才是最可怕的威胁”。于是，人们真正拥有的东西被淡化，被贬低，被较富裕的人锋芒毕露的奢侈消费所掩盖：“富人成为被普遍崇拜的对象”。</strong></p></blockquote><h3 id="福利国家的衰败"><a href="#福利国家的衰败" class="headerlink" title="福利国家的衰败"></a>福利国家的衰败</h3><blockquote><p><strong>这个星球上，部分地区已经充满老于世故的消费者，但也还存在广袤的处女地，那里有不需要激发消费欲望就能获得的顺从劳动力，那里的人为了维持生计而卑微地工作。但是，在本地市场，你需要源源不断地创造新的欲望，并保持雇员工资增长，以确保这些欲望能够变成普遍切实的需求。</strong></p></blockquote><h3 id="招致毁灭的成功"><a href="#招致毁灭的成功" class="headerlink" title="招致毁灭的成功"></a>招致毁灭的成功</h3><blockquote><p><strong>获得社会帮助并脱离劣势地位的人，不仅失去了回馈的动力，而且变成了最强烈的诋毁者。从某种意义上说，“平权法案”培养的是自己的掘墓人</strong></p></blockquote><h3 id="第四章-工作伦理和新穷人"><a href="#第四章-工作伦理和新穷人" class="headerlink" title="第四章 工作伦理和新穷人"></a>第四章 工作伦理和新穷人</h3><blockquote><p><strong>某国整体失业率快速上升时，你看不到证券市场有任何焦虑的迹象，更谈不上恐慌，它们反倒可能表现火爆。</strong></p></blockquote><h3 id="定居者与游牧者"><a href="#定居者与游牧者" class="headerlink" title="定居者与游牧者"></a>定居者与游牧者</h3><blockquote><p>显然，最后一类人在出售劳动力时面临的困难最小，他们的潜在买家并不会特别挑剔。“常规劳动者”从事的工作既不需要难以掌握的稀有技能，也不需要面对面与顾客沟通所需的特殊机敏，因此他们可以比较容易地在所有有偿的低技能工作中切换。但出于同样的原因，他们也很容易被弃用，工作不稳定。他们随时可能被替换，这不会给雇主带来什么损失。他们可能在生意不景气时被就地解雇，因为业务回暖时有很多这样的人随时可以上岗。因此，他们没有找麻烦的气力，没有讨价还价的资本，即使有能力也愿意争取更好的就业条件，他们仍没有胜算的机会。</p></blockquote><blockquote><p>这类人很少有抗争的意愿，特别是团结起来一致行动的意愿。所有的情况似乎都对他们不利。他们的工作是脆弱的，肯定不会持续很久，随时可能消失不见；今天的伙伴明天可能就各奔东西，去向遥远的地方……投身于工人的团结和集体抗争，需要付出长期的、充满风险的努力，注定收益不大，成本却高得难以计量。如果这样的状况持续很久，看不到任何改观，那些受雇者的世界观和心态也会相应变化。“</p></blockquote><blockquote><p><strong>如果你喜欢为之工作的公司，并期望未来一直和它携手前行，那么最多在下一轮的“外包”或“裁员”时，你就会受到伤害。总而言之，这种被称为“劳动力市场灵活性”的重要转变，给长期协作的可能性蒙上了一层阴影，更不用说对“共同事业”全心全意、无条件的承诺和忠诚。</strong></p></blockquote><blockquote><p><strong>求职者仍像以前一样“受缚于土地”，不能自由迁徙，只能依赖本地的工作谋生，资本现在则可以无拘无束地移动，不用在意距离和国界。</strong></p></blockquote><blockquote><p><strong>资本完全没必要承受本地劳动力日益膨胀的自信（以及日益增长的要求）所带来的不便（和高昂的成本）。长期雇用导致这些定居劳动力越来越勇敢，并且有足够（过多）的时间变得更团结、更强大、更坚固。然而，当游牧资本想要转移到其他地方时，定居的劳动力根本就没有机会阻碍它转移，更不用说将其永久绑定，因此他们没有机会争取自己的权利，实现自己的抱负。</strong></p></blockquote><blockquote><p><strong>无论从哪个方面看，脆弱性和不稳定性像幽灵一样萦绕在各种工作周围。不同工作的区别仅在于是否能有效防范雇员的反抗：以消极怠工、逃避责任来对抗雇佣关系的脆弱性。没有哪种工作能免除失业，也没有人可以免除近来出现的“长期失业”——这个词现在已经被更准确地描述为“过剩”。如果说“失业”，甚至是长期失业，意味着工作生活的一个阶段，那么“过剩”则更贴近如今失业的本质。它暗示了一场不可逆转的灾难最终到来。它是通向废品站的一张单程票……</strong></p></blockquote><h3 id="从“失业”到“过剩”"><a href="#从“失业”到“过剩”" class="headerlink" title="从“失业”到“过剩”"></a>从“失业”到“过剩”</h3><blockquote><p><strong>随着经济周期的每一次轮回，“失业”这个概念的内涵发生了变化，“失业”之下的希望也越来越不切实际。这种体验无情地累加，推动了真正的“范式转变”产生——“过剩”这个新词，替代了“失业”。</strong></p></blockquote><blockquote><p><strong>如今的精简型、小型化、资本和知识密集型产业，则把劳动力视为生产力提升的制约要素。这是对曾被奉为经典的斯密_里卡多_马克思劳动价值论的直接挑战。</strong></p></blockquote><blockquote><p><strong>近来重新鼓吹工作伦理的目的，是为了“将值得帮助的穷人和不值得帮助的穷人分开，把责难倾倒给后者，以合理化社会对他们的冷漠”，因此“说明贫穷是个人缺陷的必然后果，进而促成对穷人和被剥夺者的漠不关心”￼。换言之，工作伦理虽然不再是减少贫困的手段，却能帮助调和社会众生和永恒存在的穷人之间的关系，有助于整个社会的安宁平和。</strong></p></blockquote><h3 id="用于底层阶级的工作伦理"><a href="#用于底层阶级的工作伦理" class="headerlink" title="用于底层阶级的工作伦理"></a>用于底层阶级的工作伦理</h3><blockquote><p><strong>正如堕入底层是一个选择问题，脱离贫困也是个选择问题——如果作出的是正确的选择。穷人沦为底层阶级是选择的结果，这个观点暗示的是，他们完全可以作出另一种选择，使自己从困境中解脱出来。</strong></p></blockquote><blockquote><p><strong>在社会日益富裕的过程中，如果贫困仍继续存在并持续扩大，那么工作伦理一定是无效的。但是，如果我们相信，工作伦理之所以无效只是因为其戒律没有得到很好的倾听和遵从，那么，就只能用那些掉队者的道德缺陷或犯罪倾向予以解释</strong></p></blockquote><h3 id="贫穷即犯罪"><a href="#贫穷即犯罪" class="headerlink" title="贫穷即犯罪"></a>贫穷即犯罪</h3><blockquote><p><strong>底层阶级冒犯了大多数人珍视的价值观，却又紧紧抓着它们，渴望像其他自力更生的人一样，获得消费生活的乐趣。换句话说，美国人对底层阶级真正的不满意在于，这些人的梦想，他们渴望的生活模式居然和自己如此相似。</strong></p></blockquote><blockquote><p>近年来的犯罪率上升，不是功能失调或疏忽大意的结果，而是消费者社会自身的产物，这在逻辑上（而非在法律上）是合理的。更重要的是，这也是消费者社会不可避免的产物。消费者需求越大（即市场诱导越有效），消费者社会就越安全，越繁荣。然而，与此同时，那些有欲望并能满足自己欲望的人（已经被诱惑并能按照诱惑的期望行动的人）与那些已经被诱惑却无法按照期望采取行动的人，两者之间的差距越拉越大。</p></blockquote><blockquote><p>市场诱惑，既是伟大的均衡器，也是伟大的分化器。为了取得效果，消费的诱惑、消费更多的理念必须传达到每一个角落，不加区别地传达给每一个愿意聆听的人。然而，总是存在不能够按照诱惑的期望付诸行动的人，他们每天面对着那些获得满足的人展示的令人眼花缭乱的景象。这些人被告知，奢侈的消费是成功的标志，是赢得公众掌声和名誉的捷径。他们还了解到，拥有和消费某些商品，践行这种生活方式，是幸福的必要条件，甚至是实现人类尊严的必要条件。</p></blockquote><blockquote><p><strong>如果消费是衡量成功人生的标准，衡量幸福的标准，甚至是衡量尊严的标准，那么人类欲望的潘多拉之盒已经打开，再多的购买和刺激的感觉，都不能唤回过去“达到标准”带来的满足感：现在根本就没有标准可言。</strong></p></blockquote><h3 id="逐出道德义务的世界"><a href="#逐出道德义务的世界" class="headerlink" title="逐出道德义务的世界"></a>逐出道德义务的世界</h3><blockquote><p><strong>在“电视中”的人们死于饥荒和疾病的那片遥远土地上，也诞生了“亚洲小龙”——虽然所有“小龙”加起来也不及亚洲人口的百分之一。它们传达了想要传达的：饥荒和无家可归是他们自己的选择。其他选项是存在的，然而他们缺乏勤奋和决心。字里行间的意思是，穷人应该对自己的命运负责。他们可以像“亚洲小龙”一样，选择勤奋节俭的生活。</strong></p></blockquote><h3 id="殖民主义，还是剩余劳动力输出"><a href="#殖民主义，还是剩余劳动力输出" class="headerlink" title="殖民主义，还是剩余劳动力输出"></a>殖民主义，还是剩余劳动力输出</h3><blockquote><p><strong>从一开始，现代就是大迁徙的时代。至今为止，不计其数的人远渡重洋，离开无法生存的故土，去往满载憧憬的异国他乡。随着时间的推移，现代化的热门区域不断变化，热门的线路也不断变化，但总体来说，移民都是从世界上“较发达”（现代化程度较高）的地区向“不发达”（在现代化冲击下还未舍弃其传统的社会经济平衡）的地区流动。</strong></p></blockquote><h3 id="工作和贫穷问题的全球化新维度"><a href="#工作和贫穷问题的全球化新维度" class="headerlink" title="工作和贫穷问题的全球化新维度"></a>工作和贫穷问题的全球化新维度</h3><blockquote><p><strong>远方的人遭受苦难直接或间接的源头，或许正是我们此时此地的所作所为，但由于距离遥远，它们并不会引起道德上的共鸣，也不会像身边所见的苦难那样能够引发强烈的行动意愿。</strong></p></blockquote><h3 id="社会问题转为法律和秩序问题"><a href="#社会问题转为法律和秩序问题" class="headerlink" title="社会问题转为法律和秩序问题"></a>社会问题转为法律和秩序问题</h3><blockquote><p><strong>“无用之人”大规模聚集并迅速膨胀，看上去会变成持续的、永久的存在。这要求采取更严格的隔离政策和极端的安全措施，以免危及“社会的健康”以及社会系统的“正常运转”。</strong></p></blockquote><blockquote><p><strong>可以说，监狱是把穷人和失业者（更准确地说，无法就业的人）从“社会问题”范畴转移到法律秩序范畴的过程中采用的手段，是消除他们对于整个社会潜在的破坏性影响的投资。</strong></p></blockquote><h3 id="从社会国家到“安全国家”"><a href="#从社会国家到“安全国家”" class="headerlink" title="从社会国家到“安全国家”"></a>从社会国家到“安全国家”</h3><blockquote><p><strong>市场竞争造成的就业环境不稳定，是且将继续是人们对于未来不确定性、对于社会地位和自尊的不安全感的主要根源。</strong></p></blockquote><h2 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h2><h3 id="第六章-新穷人的前景"><a href="#第六章-新穷人的前景" class="headerlink" title="第六章 新穷人的前景"></a>第六章 新穷人的前景</h3><blockquote><p><strong>渴望把人类世界变成一个无机的世界，在那里一切都完美运行，按部就班，服从于一个超越个体的系统。然而，向往秩序就是向往死亡，因为生命本身就是不断破坏秩序的过程。或者换句话说：对秩序的渴望是一种堂皇的托辞，是强烈厌世的借口。</strong></p></blockquote><h3 id="失去位置的穷人"><a href="#失去位置的穷人" class="headerlink" title="失去位置的穷人"></a>失去位置的穷人</h3><blockquote><p><strong>学识渊博的经济学家忙不迭地立即证明，当工资保持在低水平的时候，“穷人会做更多的工作，实际上生活得更好”，而他们领取高工资时，他们就迷失于无所事事和聚众闹事。</strong></p></blockquote><blockquote><p><strong>想符合社会规范，成为一个合格的社会成员，就需要对消费市场的诱惑作出及时有效的反应，需要为“清空供给”作出贡献，需要在经济环境出现问题时，积极参与“消费者主导的复苏”。穷人没有体面的收入，没有信用卡和美好前景，他们达不到要求。今天穷人打破的社会规范——使他们“不正常”的规范，是消费能力规范而非就业规范。今天的穷人是“不消费的人”，而非“失业者”。他们首先被定义为有缺陷的消费者，因为他们没有履行最重要的社会责任——积极有效地购买市场提供的商品和服务。消费者社会的资产负债表中，穷人明显是负债，无论如何也不能把他们记入现在或未来的资产。</strong></p></blockquote><h3 id="没有位置，没有道德义务"><a href="#没有位置，没有道德义务" class="headerlink" title="没有位置，没有道德义务"></a>没有位置，没有道德义务</h3><blockquote><p><strong>如果穷人试图捍卫福利体系的残存，他们很快就会发现自己没有谈判的筹码，无法传达自己的声音，更不可能给对手造成威胁。他们尤其没有任何能力来打动社会上的普通公民，大众受到了政客的蛊惑，他们被劝说不要因为内心的冲动投票，而要根据自己的利益投票。</strong></p></blockquote><h3 id="工作伦理，还是生活道德"><a href="#工作伦理，还是生活道德" class="headerlink" title="工作伦理，还是生活道德"></a>工作伦理，还是生活道德</h3><blockquote><p>收入权利与收入能力脱钩的想法其实并不保守。根据我们的推论，实现它恰恰需要一个非常大的转变。我们将不得不放弃目前生活模式中一些神圣不可侵犯的假设（由于缺少反思，它们显得更加神圣）。例如，效率是一件好事，无论它目的何在，也无论它是否会带来痛苦的副作用。再例如，凡是“经济增长”的东西，即统计意义上“今天比昨天多，明天比今天多”的东西，就是好的，而无视其增长过程中对人类生存环境和自然（全人类共享的生存环境）造成的损害。</p></blockquote><blockquote><p>对那些因为需要作出巨大的转变而反对的人，我们只能再次引用科尼利厄斯的话来回答。当一个采访者问他：“那么，你想要什么？改变人类吗？”，卡斯托利亚蒂斯回答说：“不，没有那么夸张：我希望人类改变，正像他们已经改变过两三次那样。”[8]<br>至少现在还有希望，人类能够再次完成同样的壮举。毕竟，正如帕特里克·库里（Patrick Curry）所言，“群体自愿的返璞归真，正成为群体贫困的唯一有意义的替代。</p></blockquote><p>并不认同这样的观点。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;继上个月分享了一些读书摘录之后这个月也没闲着，一共读了五本书。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《长安的荔枝》&lt;/li&gt;
&lt;li&gt;《失落的卫星》&lt;/li&gt;
&lt;li&gt;《午夜降临前抵达》&lt;/li&gt;
&lt;li&gt;《克拉拉与太阳》&lt;/li&gt;
&lt;li&gt;《工作、消费主义和新穷人》&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="阅读" scheme="https://stephenfang.me/categories/%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="读书" scheme="https://stephenfang.me/tags/%E8%AF%BB%E4%B9%A6/"/>
    
    <category term="长安的荔枝" scheme="https://stephenfang.me/tags/%E9%95%BF%E5%AE%89%E7%9A%84%E8%8D%94%E6%9E%9D/"/>
    
    <category term="马伯庸" scheme="https://stephenfang.me/tags/%E9%A9%AC%E4%BC%AF%E5%BA%B8/"/>
    
    <category term="失落的卫星" scheme="https://stephenfang.me/tags/%E5%A4%B1%E8%90%BD%E7%9A%84%E5%8D%AB%E6%98%9F/"/>
    
    <category term="午夜降临前抵达" scheme="https://stephenfang.me/tags/%E5%8D%88%E5%A4%9C%E9%99%8D%E4%B8%B4%E5%89%8D%E6%8A%B5%E8%BE%BE/"/>
    
    <category term="刘子超" scheme="https://stephenfang.me/tags/%E5%88%98%E5%AD%90%E8%B6%85/"/>
    
    <category term="工作、消费主义和新穷人" scheme="https://stephenfang.me/tags/%E5%B7%A5%E4%BD%9C%E3%80%81%E6%B6%88%E8%B4%B9%E4%B8%BB%E4%B9%89%E5%92%8C%E6%96%B0%E7%A9%B7%E4%BA%BA/"/>
    
    <category term="克拉拉与太阳" scheme="https://stephenfang.me/tags/%E5%85%8B%E6%8B%89%E6%8B%89%E4%B8%8E%E5%A4%AA%E9%98%B3/"/>
    
  </entry>
  
</feed>
